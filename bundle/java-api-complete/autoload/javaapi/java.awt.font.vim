call javaapi#namespace('java.awt.font')

call javaapi#class('CharArrayIterator', 'CharacterIterator', [
  \ javaapi#method(0,1,'first(', ')', 'char'),
  \ javaapi#method(0,1,'last(', ')', 'char'),
  \ javaapi#method(0,1,'current(', ')', 'char'),
  \ javaapi#method(0,1,'next(', ')', 'char'),
  \ javaapi#method(0,1,'previous(', ')', 'char'),
  \ javaapi#method(0,1,'setIndex(', 'int)', 'char'),
  \ javaapi#method(0,1,'getBeginIndex(', ')', 'int'),
  \ javaapi#method(0,1,'getEndIndex(', ')', 'int'),
  \ javaapi#method(0,1,'getIndex(', ')', 'int'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('GlyphJustificationInfo', '', [
  \ javaapi#field(1,1,'PRIORITY_KASHIDA', 'int'),
  \ javaapi#field(1,1,'PRIORITY_WHITESPACE', 'int'),
  \ javaapi#field(1,1,'PRIORITY_INTERCHAR', 'int'),
  \ javaapi#field(1,1,'PRIORITY_NONE', 'int'),
  \ javaapi#field(0,1,'weight', 'float'),
  \ javaapi#field(0,1,'growPriority', 'int'),
  \ javaapi#field(0,1,'growAbsorb', 'boolean'),
  \ javaapi#field(0,1,'growLeftLimit', 'float'),
  \ javaapi#field(0,1,'growRightLimit', 'float'),
  \ javaapi#field(0,1,'shrinkPriority', 'int'),
  \ javaapi#field(0,1,'shrinkAbsorb', 'boolean'),
  \ javaapi#field(0,1,'shrinkLeftLimit', 'float'),
  \ javaapi#field(0,1,'shrinkRightLimit', 'float'),
  \ javaapi#method(0,1,'GlyphJustificationInfo(', 'float, boolean, int, float, float, boolean, int, float, float)', ''),
  \ ])

call javaapi#class('GlyphMetrics', '', [
  \ javaapi#field(1,1,'STANDARD', 'byte'),
  \ javaapi#field(1,1,'LIGATURE', 'byte'),
  \ javaapi#field(1,1,'COMBINING', 'byte'),
  \ javaapi#field(1,1,'COMPONENT', 'byte'),
  \ javaapi#field(1,1,'WHITESPACE', 'byte'),
  \ javaapi#method(0,1,'GlyphMetrics(', 'float, Rectangle2D, byte)', ''),
  \ javaapi#method(0,1,'GlyphMetrics(', 'boolean, float, float, Rectangle2D, byte)', ''),
  \ javaapi#method(0,1,'getAdvance(', ')', 'float'),
  \ javaapi#method(0,1,'getAdvanceX(', ')', 'float'),
  \ javaapi#method(0,1,'getAdvanceY(', ')', 'float'),
  \ javaapi#method(0,1,'getBounds2D(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getLSB(', ')', 'float'),
  \ javaapi#method(0,1,'getRSB(', ')', 'float'),
  \ javaapi#method(0,1,'getType(', ')', 'int'),
  \ javaapi#method(0,1,'isStandard(', ')', 'boolean'),
  \ javaapi#method(0,1,'isLigature(', ')', 'boolean'),
  \ javaapi#method(0,1,'isCombining(', ')', 'boolean'),
  \ javaapi#method(0,1,'isComponent(', ')', 'boolean'),
  \ javaapi#method(0,1,'isWhitespace(', ')', 'boolean'),
  \ ])

call javaapi#class('GraphicAttribute', '', [
  \ javaapi#field(1,1,'TOP_ALIGNMENT', 'int'),
  \ javaapi#field(1,1,'BOTTOM_ALIGNMENT', 'int'),
  \ javaapi#field(1,1,'ROMAN_BASELINE', 'int'),
  \ javaapi#field(1,1,'CENTER_BASELINE', 'int'),
  \ javaapi#field(1,1,'HANGING_BASELINE', 'int'),
  \ javaapi#method(0,0,'GraphicAttribute(', 'int)', ''),
  \ javaapi#method(0,1,'getAscent(', ')', 'float'),
  \ javaapi#method(0,1,'getDescent(', ')', 'float'),
  \ javaapi#method(0,1,'getAdvance(', ')', 'float'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getOutline(', 'AffineTransform)', 'Shape'),
  \ javaapi#method(0,1,'draw(', 'Graphics2D, float, float)', 'void'),
  \ javaapi#method(0,1,'getAlignment(', ')', 'int'),
  \ javaapi#method(0,1,'getJustificationInfo(', ')', 'GlyphJustificationInfo'),
  \ ])

call javaapi#class('ImageGraphicAttribute', 'GraphicAttribute', [
  \ javaapi#method(0,1,'ImageGraphicAttribute(', 'Image, int)', ''),
  \ javaapi#method(0,1,'ImageGraphicAttribute(', 'Image, int, float, float)', ''),
  \ javaapi#method(0,1,'getAscent(', ')', 'float'),
  \ javaapi#method(0,1,'getDescent(', ')', 'float'),
  \ javaapi#method(0,1,'getAdvance(', ')', 'float'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'draw(', 'Graphics2D, float, float)', 'void'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'equals(', 'ImageGraphicAttribute)', 'boolean'),
  \ ])

call javaapi#class('LayoutPath', '', [
  \ javaapi#method(0,1,'LayoutPath(', ')', ''),
  \ javaapi#method(0,1,'pointToPath(', 'Point2D, Point2D)', 'boolean'),
  \ javaapi#method(0,1,'pathToPoint(', 'Point2D, boolean, Point2D)', 'void'),
  \ ])

call javaapi#class('LineBreakMeasurer', '', [
  \ javaapi#method(0,1,'LineBreakMeasurer(', 'AttributedCharacterIterator, FontRenderContext)', ''),
  \ javaapi#method(0,1,'LineBreakMeasurer(', 'AttributedCharacterIterator, BreakIterator, FontRenderContext)', ''),
  \ javaapi#method(0,1,'nextOffset(', 'float)', 'int'),
  \ javaapi#method(0,1,'nextOffset(', 'float, int, boolean)', 'int'),
  \ javaapi#method(0,1,'nextLayout(', 'float)', 'TextLayout'),
  \ javaapi#method(0,1,'nextLayout(', 'float, int, boolean)', 'TextLayout'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'setPosition(', 'int)', 'void'),
  \ javaapi#method(0,1,'insertChar(', 'AttributedCharacterIterator, int)', 'void'),
  \ javaapi#method(0,1,'deleteChar(', 'AttributedCharacterIterator, int)', 'void'),
  \ ])

call javaapi#interface('MultipleMaster', '', [
  \ javaapi#method(0,1,'getNumDesignAxes(', ')', 'int'),
  \ javaapi#method(0,1,'getDesignAxisRanges(', ')', 'float'),
  \ javaapi#method(0,1,'getDesignAxisDefaults(', ')', 'float'),
  \ javaapi#method(0,1,'getDesignAxisNames(', ')', 'String'),
  \ javaapi#method(0,1,'deriveMMFont(', 'float[])', 'Font'),
  \ javaapi#method(0,1,'deriveMMFont(', 'float[], float, float, float, float)', 'Font'),
  \ ])

call javaapi#class('NumericShaper', 'Serializable', [
  \ javaapi#field(1,1,'EUROPEAN', 'int'),
  \ javaapi#field(1,1,'ARABIC', 'int'),
  \ javaapi#field(1,1,'EASTERN_ARABIC', 'int'),
  \ javaapi#field(1,1,'DEVANAGARI', 'int'),
  \ javaapi#field(1,1,'BENGALI', 'int'),
  \ javaapi#field(1,1,'GURMUKHI', 'int'),
  \ javaapi#field(1,1,'GUJARATI', 'int'),
  \ javaapi#field(1,1,'ORIYA', 'int'),
  \ javaapi#field(1,1,'TAMIL', 'int'),
  \ javaapi#field(1,1,'TELUGU', 'int'),
  \ javaapi#field(1,1,'KANNADA', 'int'),
  \ javaapi#field(1,1,'MALAYALAM', 'int'),
  \ javaapi#field(1,1,'THAI', 'int'),
  \ javaapi#field(1,1,'LAO', 'int'),
  \ javaapi#field(1,1,'TIBETAN', 'int'),
  \ javaapi#field(1,1,'MYANMAR', 'int'),
  \ javaapi#field(1,1,'ETHIOPIC', 'int'),
  \ javaapi#field(1,1,'KHMER', 'int'),
  \ javaapi#field(1,1,'MONGOLIAN', 'int'),
  \ javaapi#field(1,1,'ALL_RANGES', 'int'),
  \ javaapi#method(1,1,'getShaper(', 'int)', 'NumericShaper'),
  \ javaapi#method(1,1,'getShaper(', 'Range)', 'NumericShaper'),
  \ javaapi#method(1,1,'getContextualShaper(', 'int)', 'NumericShaper'),
  \ javaapi#method(1,1,'getContextualShaper(', 'Set<Range>)', 'NumericShaper'),
  \ javaapi#method(1,1,'getContextualShaper(', 'int, int)', 'NumericShaper'),
  \ javaapi#method(1,1,'getContextualShaper(', 'Set<Range>, Range)', 'NumericShaper'),
  \ javaapi#method(0,1,'shape(', 'char[], int, int)', 'void'),
  \ javaapi#method(0,1,'shape(', 'char[], int, int, int)', 'void'),
  \ javaapi#method(0,1,'shape(', 'char[], int, int, Range)', 'void'),
  \ javaapi#method(0,1,'isContextual(', ')', 'boolean'),
  \ javaapi#method(0,1,'getRanges(', ')', 'int'),
  \ javaapi#method(0,1,'getRangeSet(', ')', 'Set'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#interface('OpenType', '', [
  \ javaapi#field(1,1,'TAG_CMAP', 'int'),
  \ javaapi#field(1,1,'TAG_HEAD', 'int'),
  \ javaapi#field(1,1,'TAG_NAME', 'int'),
  \ javaapi#field(1,1,'TAG_GLYF', 'int'),
  \ javaapi#field(1,1,'TAG_MAXP', 'int'),
  \ javaapi#field(1,1,'TAG_PREP', 'int'),
  \ javaapi#field(1,1,'TAG_HMTX', 'int'),
  \ javaapi#field(1,1,'TAG_KERN', 'int'),
  \ javaapi#field(1,1,'TAG_HDMX', 'int'),
  \ javaapi#field(1,1,'TAG_LOCA', 'int'),
  \ javaapi#field(1,1,'TAG_POST', 'int'),
  \ javaapi#field(1,1,'TAG_OS2', 'int'),
  \ javaapi#field(1,1,'TAG_CVT', 'int'),
  \ javaapi#field(1,1,'TAG_GASP', 'int'),
  \ javaapi#field(1,1,'TAG_VDMX', 'int'),
  \ javaapi#field(1,1,'TAG_VMTX', 'int'),
  \ javaapi#field(1,1,'TAG_VHEA', 'int'),
  \ javaapi#field(1,1,'TAG_HHEA', 'int'),
  \ javaapi#field(1,1,'TAG_TYP1', 'int'),
  \ javaapi#field(1,1,'TAG_BSLN', 'int'),
  \ javaapi#field(1,1,'TAG_GSUB', 'int'),
  \ javaapi#field(1,1,'TAG_DSIG', 'int'),
  \ javaapi#field(1,1,'TAG_FPGM', 'int'),
  \ javaapi#field(1,1,'TAG_FVAR', 'int'),
  \ javaapi#field(1,1,'TAG_GVAR', 'int'),
  \ javaapi#field(1,1,'TAG_CFF', 'int'),
  \ javaapi#field(1,1,'TAG_MMSD', 'int'),
  \ javaapi#field(1,1,'TAG_MMFX', 'int'),
  \ javaapi#field(1,1,'TAG_BASE', 'int'),
  \ javaapi#field(1,1,'TAG_GDEF', 'int'),
  \ javaapi#field(1,1,'TAG_GPOS', 'int'),
  \ javaapi#field(1,1,'TAG_JSTF', 'int'),
  \ javaapi#field(1,1,'TAG_EBDT', 'int'),
  \ javaapi#field(1,1,'TAG_EBLC', 'int'),
  \ javaapi#field(1,1,'TAG_EBSC', 'int'),
  \ javaapi#field(1,1,'TAG_LTSH', 'int'),
  \ javaapi#field(1,1,'TAG_PCLT', 'int'),
  \ javaapi#field(1,1,'TAG_ACNT', 'int'),
  \ javaapi#field(1,1,'TAG_AVAR', 'int'),
  \ javaapi#field(1,1,'TAG_BDAT', 'int'),
  \ javaapi#field(1,1,'TAG_BLOC', 'int'),
  \ javaapi#field(1,1,'TAG_CVAR', 'int'),
  \ javaapi#field(1,1,'TAG_FEAT', 'int'),
  \ javaapi#field(1,1,'TAG_FDSC', 'int'),
  \ javaapi#field(1,1,'TAG_FMTX', 'int'),
  \ javaapi#field(1,1,'TAG_JUST', 'int'),
  \ javaapi#field(1,1,'TAG_LCAR', 'int'),
  \ javaapi#field(1,1,'TAG_MORT', 'int'),
  \ javaapi#field(1,1,'TAG_OPBD', 'int'),
  \ javaapi#field(1,1,'TAG_PROP', 'int'),
  \ javaapi#field(1,1,'TAG_TRAK', 'int'),
  \ javaapi#method(0,1,'getVersion(', ')', 'int'),
  \ javaapi#method(0,1,'getFontTable(', 'int)', 'byte'),
  \ javaapi#method(0,1,'getFontTable(', 'String)', 'byte'),
  \ javaapi#method(0,1,'getFontTable(', 'int, int, int)', 'byte'),
  \ javaapi#method(0,1,'getFontTable(', 'String, int, int)', 'byte'),
  \ javaapi#method(0,1,'getFontTableSize(', 'int)', 'int'),
  \ javaapi#method(0,1,'getFontTableSize(', 'String)', 'int'),
  \ ])

call javaapi#class('ShapeGraphicAttribute', 'GraphicAttribute', [
  \ javaapi#field(1,1,'STROKE', 'boolean'),
  \ javaapi#field(1,1,'FILL', 'boolean'),
  \ javaapi#method(0,1,'ShapeGraphicAttribute(', 'Shape, int, boolean)', ''),
  \ javaapi#method(0,1,'getAscent(', ')', 'float'),
  \ javaapi#method(0,1,'getDescent(', ')', 'float'),
  \ javaapi#method(0,1,'getAdvance(', ')', 'float'),
  \ javaapi#method(0,1,'draw(', 'Graphics2D, float, float)', 'void'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getOutline(', 'AffineTransform)', 'Shape'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'equals(', 'ShapeGraphicAttribute)', 'boolean'),
  \ ])

call javaapi#class('StyledParagraph', '', [
  \ javaapi#method(0,1,'StyledParagraph(', 'AttributedCharacterIterator, char[])', ''),
  \ javaapi#method(1,1,'insertChar(', 'AttributedCharacterIterator, char[], int, StyledParagraph)', 'StyledParagraph'),
  \ javaapi#method(1,1,'deleteChar(', 'AttributedCharacterIterator, char[], int, StyledParagraph)', 'StyledParagraph'),
  \ javaapi#method(0,1,'getRunLimit(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDecorationAt(', 'int)', 'Decoration'),
  \ javaapi#method(0,1,'getFontOrGraphicAt(', 'int)', 'Object'),
  \ ])

call javaapi#class('TextHitInfo', '', [
  \ javaapi#method(0,1,'getCharIndex(', ')', 'int'),
  \ javaapi#method(0,1,'isLeadingEdge(', ')', 'boolean'),
  \ javaapi#method(0,1,'getInsertionIndex(', ')', 'int'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'equals(', 'TextHitInfo)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(1,1,'leading(', 'int)', 'TextHitInfo'),
  \ javaapi#method(1,1,'trailing(', 'int)', 'TextHitInfo'),
  \ javaapi#method(1,1,'beforeOffset(', 'int)', 'TextHitInfo'),
  \ javaapi#method(1,1,'afterOffset(', 'int)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getOtherHit(', ')', 'TextHitInfo'),
  \ javaapi#method(0,1,'getOffsetHit(', 'int)', 'TextHitInfo'),
  \ ])

call javaapi#class('TextJustifier', '', [
  \ javaapi#field(1,1,'MAX_PRIORITY', 'int'),
  \ javaapi#method(0,1,'justify(', 'float)', 'float'),
  \ ])

call javaapi#class('TextLayout', 'Cloneable', [
  \ javaapi#field(1,1,'DEFAULT_CARET_POLICY', 'CaretPolicy'),
  \ javaapi#method(0,1,'TextLayout(', 'String, Font, FontRenderContext)', ''),
  \ javaapi#method(0,1,'TextLayout(', 'String, Map<? extends Attribute, ?>, FontRenderContext)', ''),
  \ javaapi#method(0,1,'TextLayout(', 'AttributedCharacterIterator, FontRenderContext)', ''),
  \ javaapi#method(0,0,'clone(', ')', 'Object'),
  \ javaapi#method(0,1,'getJustifiedLayout(', 'float)', 'TextLayout'),
  \ javaapi#method(0,0,'handleJustify(', 'float)', 'void'),
  \ javaapi#method(0,1,'getBaseline(', ')', 'byte'),
  \ javaapi#method(0,1,'getBaselineOffsets(', ')', 'float'),
  \ javaapi#method(0,1,'getAdvance(', ')', 'float'),
  \ javaapi#method(0,1,'getVisibleAdvance(', ')', 'float'),
  \ javaapi#method(0,1,'getAscent(', ')', 'float'),
  \ javaapi#method(0,1,'getDescent(', ')', 'float'),
  \ javaapi#method(0,1,'getLeading(', ')', 'float'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getPixelBounds(', 'FontRenderContext, float, float)', 'Rectangle'),
  \ javaapi#method(0,1,'isLeftToRight(', ')', 'boolean'),
  \ javaapi#method(0,1,'isVertical(', ')', 'boolean'),
  \ javaapi#method(0,1,'getCharacterCount(', ')', 'int'),
  \ javaapi#method(0,1,'getCaretInfo(', 'TextHitInfo, Rectangle2D)', 'float'),
  \ javaapi#method(0,1,'getCaretInfo(', 'TextHitInfo)', 'float'),
  \ javaapi#method(0,1,'getNextRightHit(', 'TextHitInfo)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getNextRightHit(', 'int, CaretPolicy)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getNextRightHit(', 'int)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getNextLeftHit(', 'TextHitInfo)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getNextLeftHit(', 'int, CaretPolicy)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getNextLeftHit(', 'int)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getVisualOtherHit(', 'TextHitInfo)', 'TextHitInfo'),
  \ javaapi#method(0,1,'getCaretShape(', 'TextHitInfo, Rectangle2D)', 'Shape'),
  \ javaapi#method(0,1,'getCaretShape(', 'TextHitInfo)', 'Shape'),
  \ javaapi#method(0,1,'getCharacterLevel(', 'int)', 'byte'),
  \ javaapi#method(0,1,'getCaretShapes(', 'int, Rectangle2D, CaretPolicy)', 'Shape'),
  \ javaapi#method(0,1,'getCaretShapes(', 'int, Rectangle2D)', 'Shape'),
  \ javaapi#method(0,1,'getCaretShapes(', 'int)', 'Shape'),
  \ javaapi#method(0,1,'getLogicalRangesForVisualSelection(', 'TextHitInfo, TextHitInfo)', 'int'),
  \ javaapi#method(0,1,'getVisualHighlightShape(', 'TextHitInfo, TextHitInfo, Rectangle2D)', 'Shape'),
  \ javaapi#method(0,1,'getVisualHighlightShape(', 'TextHitInfo, TextHitInfo)', 'Shape'),
  \ javaapi#method(0,1,'getLogicalHighlightShape(', 'int, int, Rectangle2D)', 'Shape'),
  \ javaapi#method(0,1,'getLogicalHighlightShape(', 'int, int)', 'Shape'),
  \ javaapi#method(0,1,'getBlackBoxBounds(', 'int, int)', 'Shape'),
  \ javaapi#method(0,1,'hitTestChar(', 'float, float, Rectangle2D)', 'TextHitInfo'),
  \ javaapi#method(0,1,'hitTestChar(', 'float, float)', 'TextHitInfo'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'equals(', 'TextLayout)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'draw(', 'Graphics2D, float, float)', 'void'),
  \ javaapi#method(0,1,'getOutline(', 'AffineTransform)', 'Shape'),
  \ javaapi#method(0,1,'getLayoutPath(', ')', 'LayoutPath'),
  \ javaapi#method(0,1,'hitToPoint(', 'TextHitInfo, Point2D)', 'void'),
  \ ])

call javaapi#class('TextLine', '', [
  \ javaapi#method(0,1,'TextLine(', 'FontRenderContext, TextLineComponent[], float[], char[], int, int, int[], byte[], boolean)', ''),
  \ javaapi#method(0,1,'getPixelBounds(', 'FontRenderContext, float, float)', 'Rectangle'),
  \ javaapi#method(0,1,'characterCount(', ')', 'int'),
  \ javaapi#method(0,1,'isDirectionLTR(', ')', 'boolean'),
  \ javaapi#method(0,1,'getMetrics(', ')', 'TextLineMetrics'),
  \ javaapi#method(0,1,'visualToLogical(', 'int)', 'int'),
  \ javaapi#method(0,1,'logicalToVisual(', 'int)', 'int'),
  \ javaapi#method(0,1,'getCharLevel(', 'int)', 'byte'),
  \ javaapi#method(0,1,'isCharLTR(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getCharType(', 'int)', 'int'),
  \ javaapi#method(0,1,'isCharSpace(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isCharWhitespace(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getCharAngle(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCoreMetricsAt(', 'int)', 'CoreMetrics'),
  \ javaapi#method(0,1,'getCharAscent(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCharDescent(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCharShift(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCharAdvance(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCharXPosition(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCharYPosition(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCharLinePosition(', 'int)', 'float'),
  \ javaapi#method(0,1,'getCharLinePosition(', 'int, boolean)', 'float'),
  \ javaapi#method(0,1,'caretAtOffsetIsValid(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getCharBounds(', 'int)', 'Rectangle2D'),
  \ javaapi#method(0,1,'draw(', 'Graphics2D, float, float)', 'void'),
  \ javaapi#method(0,1,'getVisualBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getItalicBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getOutline(', 'AffineTransform)', 'Shape'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(1,1,'fastCreateTextLine(', 'FontRenderContext, char[], Font, CoreMetrics, Map)', 'TextLine'),
  \ javaapi#method(1,1,'createComponentsOnRun(', 'int, int, char[], int[], byte[], TextLabelFactory, Font, CoreMetrics, FontRenderContext, Decoration, TextLineComponent[], int)', 'TextLineComponent'),
  \ javaapi#method(1,1,'getComponents(', 'StyledParagraph, char[], int, int, int[], byte[], TextLabelFactory)', 'TextLineComponent'),
  \ javaapi#method(1,1,'createLineFromText(', 'char[], StyledParagraph, TextLabelFactory, boolean, float[])', 'TextLine'),
  \ javaapi#method(1,1,'standardCreateTextLine(', 'FontRenderContext, AttributedCharacterIterator, char[], float[])', 'TextLine'),
  \ javaapi#method(0,1,'getJustifiedLine(', 'float, float, int, int)', 'TextLine'),
  \ javaapi#method(1,1,'getAdvanceBetween(', 'TextLineComponent[], int, int)', 'float'),
  \ ])

call javaapi#class('TextMeasurer', 'Cloneable', [
  \ javaapi#method(0,1,'TextMeasurer(', 'AttributedCharacterIterator, FontRenderContext)', ''),
  \ javaapi#method(0,0,'clone(', ')', 'Object'),
  \ javaapi#method(0,1,'getLineBreakIndex(', 'int, float)', 'int'),
  \ javaapi#method(0,1,'getAdvanceBetween(', 'int, int)', 'float'),
  \ javaapi#method(0,1,'getLayout(', 'int, int)', 'TextLayout'),
  \ javaapi#method(0,1,'insertChar(', 'AttributedCharacterIterator, int)', 'void'),
  \ javaapi#method(0,1,'deleteChar(', 'AttributedCharacterIterator, int)', 'void'),
  \ ])

call javaapi#class('TransformAttribute', 'Serializable', [
  \ javaapi#field(1,1,'IDENTITY', 'TransformAttribute'),
  \ javaapi#method(0,1,'TransformAttribute(', 'AffineTransform)', ''),
  \ javaapi#method(0,1,'getTransform(', ')', 'AffineTransform'),
  \ javaapi#method(0,1,'isIdentity(', ')', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#namespace('java.awt.font')

call javaapi#class('LineMetrics', '', [
  \ javaapi#method(0,1,'LineMetrics(', ')', ''),
  \ javaapi#method(0,1,'getNumChars(', ')', 'int'),
  \ javaapi#method(0,1,'getAscent(', ')', 'float'),
  \ javaapi#method(0,1,'getDescent(', ')', 'float'),
  \ javaapi#method(0,1,'getLeading(', ')', 'float'),
  \ javaapi#method(0,1,'getHeight(', ')', 'float'),
  \ javaapi#method(0,1,'getBaselineIndex(', ')', 'int'),
  \ javaapi#method(0,1,'getBaselineOffsets(', ')', 'float'),
  \ javaapi#method(0,1,'getStrikethroughOffset(', ')', 'float'),
  \ javaapi#method(0,1,'getStrikethroughThickness(', ')', 'float'),
  \ javaapi#method(0,1,'getUnderlineOffset(', ')', 'float'),
  \ javaapi#method(0,1,'getUnderlineThickness(', ')', 'float'),
  \ ])

call javaapi#namespace('java.awt.font')

call javaapi#class('GlyphVector', 'Cloneable', [
  \ javaapi#field(1,1,'FLAG_HAS_TRANSFORMS', 'int'),
  \ javaapi#field(1,1,'FLAG_HAS_POSITION_ADJUSTMENTS', 'int'),
  \ javaapi#field(1,1,'FLAG_RUN_RTL', 'int'),
  \ javaapi#field(1,1,'FLAG_COMPLEX_GLYPHS', 'int'),
  \ javaapi#field(1,1,'FLAG_MASK', 'int'),
  \ javaapi#method(0,1,'GlyphVector(', ')', ''),
  \ javaapi#method(0,1,'getFont(', ')', 'Font'),
  \ javaapi#method(0,1,'getFontRenderContext(', ')', 'FontRenderContext'),
  \ javaapi#method(0,1,'performDefaultLayout(', ')', 'void'),
  \ javaapi#method(0,1,'getNumGlyphs(', ')', 'int'),
  \ javaapi#method(0,1,'getGlyphCode(', 'int)', 'int'),
  \ javaapi#method(0,1,'getGlyphCodes(', 'int, int, int[])', 'int'),
  \ javaapi#method(0,1,'getGlyphCharIndex(', 'int)', 'int'),
  \ javaapi#method(0,1,'getGlyphCharIndices(', 'int, int, int[])', 'int'),
  \ javaapi#method(0,1,'getLogicalBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getVisualBounds(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getPixelBounds(', 'FontRenderContext, float, float)', 'Rectangle'),
  \ javaapi#method(0,1,'getOutline(', ')', 'Shape'),
  \ javaapi#method(0,1,'getOutline(', 'float, float)', 'Shape'),
  \ javaapi#method(0,1,'getGlyphOutline(', 'int)', 'Shape'),
  \ javaapi#method(0,1,'getGlyphOutline(', 'int, float, float)', 'Shape'),
  \ javaapi#method(0,1,'getGlyphPosition(', 'int)', 'Point2D'),
  \ javaapi#method(0,1,'setGlyphPosition(', 'int, Point2D)', 'void'),
  \ javaapi#method(0,1,'getGlyphTransform(', 'int)', 'AffineTransform'),
  \ javaapi#method(0,1,'setGlyphTransform(', 'int, AffineTransform)', 'void'),
  \ javaapi#method(0,1,'getLayoutFlags(', ')', 'int'),
  \ javaapi#method(0,1,'getGlyphPositions(', 'int, int, float[])', 'float'),
  \ javaapi#method(0,1,'getGlyphLogicalBounds(', 'int)', 'Shape'),
  \ javaapi#method(0,1,'getGlyphVisualBounds(', 'int)', 'Shape'),
  \ javaapi#method(0,1,'getGlyphPixelBounds(', 'int, FontRenderContext, float, float)', 'Rectangle'),
  \ javaapi#method(0,1,'getGlyphMetrics(', 'int)', 'GlyphMetrics'),
  \ javaapi#method(0,1,'getGlyphJustificationInfo(', 'int)', 'GlyphJustificationInfo'),
  \ javaapi#method(0,1,'equals(', 'GlyphVector)', 'boolean'),
  \ ])

call javaapi#namespace('java.awt.font')

call javaapi#class('FontRenderContext', '', [
  \ javaapi#method(0,0,'FontRenderContext(', ')', ''),
  \ javaapi#method(0,1,'FontRenderContext(', 'AffineTransform, boolean, boolean)', ''),
  \ javaapi#method(0,1,'FontRenderContext(', 'AffineTransform, Object, Object)', ''),
  \ javaapi#method(0,1,'isTransformed(', ')', 'boolean'),
  \ javaapi#method(0,1,'getTransformType(', ')', 'int'),
  \ javaapi#method(0,1,'getTransform(', ')', 'AffineTransform'),
  \ javaapi#method(0,1,'isAntiAliased(', ')', 'boolean'),
  \ javaapi#method(0,1,'usesFractionalMetrics(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAntiAliasingHint(', ')', 'Object'),
  \ javaapi#method(0,1,'getFractionalMetricsHint(', ')', 'Object'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'equals(', 'FontRenderContext)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ ])

call javaapi#namespace('java.awt.font')

call javaapi#class('TextAttribute', 'Attribute', [
  \ javaapi#field(1,1,'FAMILY', 'TextAttribute'),
  \ javaapi#field(1,1,'WEIGHT', 'TextAttribute'),
  \ javaapi#field(1,1,'WEIGHT_EXTRA_LIGHT', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_LIGHT', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_DEMILIGHT', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_REGULAR', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_SEMIBOLD', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_MEDIUM', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_DEMIBOLD', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_BOLD', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_HEAVY', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_EXTRABOLD', 'Float'),
  \ javaapi#field(1,1,'WEIGHT_ULTRABOLD', 'Float'),
  \ javaapi#field(1,1,'WIDTH', 'TextAttribute'),
  \ javaapi#field(1,1,'WIDTH_CONDENSED', 'Float'),
  \ javaapi#field(1,1,'WIDTH_SEMI_CONDENSED', 'Float'),
  \ javaapi#field(1,1,'WIDTH_REGULAR', 'Float'),
  \ javaapi#field(1,1,'WIDTH_SEMI_EXTENDED', 'Float'),
  \ javaapi#field(1,1,'WIDTH_EXTENDED', 'Float'),
  \ javaapi#field(1,1,'POSTURE', 'TextAttribute'),
  \ javaapi#field(1,1,'POSTURE_REGULAR', 'Float'),
  \ javaapi#field(1,1,'POSTURE_OBLIQUE', 'Float'),
  \ javaapi#field(1,1,'SIZE', 'TextAttribute'),
  \ javaapi#field(1,1,'TRANSFORM', 'TextAttribute'),
  \ javaapi#field(1,1,'SUPERSCRIPT', 'TextAttribute'),
  \ javaapi#field(1,1,'SUPERSCRIPT_SUPER', 'Integer'),
  \ javaapi#field(1,1,'SUPERSCRIPT_SUB', 'Integer'),
  \ javaapi#field(1,1,'FONT', 'TextAttribute'),
  \ javaapi#field(1,1,'CHAR_REPLACEMENT', 'TextAttribute'),
  \ javaapi#field(1,1,'FOREGROUND', 'TextAttribute'),
  \ javaapi#field(1,1,'BACKGROUND', 'TextAttribute'),
  \ javaapi#field(1,1,'UNDERLINE', 'TextAttribute'),
  \ javaapi#field(1,1,'UNDERLINE_ON', 'Integer'),
  \ javaapi#field(1,1,'STRIKETHROUGH', 'TextAttribute'),
  \ javaapi#field(1,1,'STRIKETHROUGH_ON', 'Boolean'),
  \ javaapi#field(1,1,'RUN_DIRECTION', 'TextAttribute'),
  \ javaapi#field(1,1,'RUN_DIRECTION_LTR', 'Boolean'),
  \ javaapi#field(1,1,'RUN_DIRECTION_RTL', 'Boolean'),
  \ javaapi#field(1,1,'BIDI_EMBEDDING', 'TextAttribute'),
  \ javaapi#field(1,1,'JUSTIFICATION', 'TextAttribute'),
  \ javaapi#field(1,1,'JUSTIFICATION_FULL', 'Float'),
  \ javaapi#field(1,1,'JUSTIFICATION_NONE', 'Float'),
  \ javaapi#field(1,1,'INPUT_METHOD_HIGHLIGHT', 'TextAttribute'),
  \ javaapi#field(1,1,'INPUT_METHOD_UNDERLINE', 'TextAttribute'),
  \ javaapi#field(1,1,'UNDERLINE_LOW_ONE_PIXEL', 'Integer'),
  \ javaapi#field(1,1,'UNDERLINE_LOW_TWO_PIXEL', 'Integer'),
  \ javaapi#field(1,1,'UNDERLINE_LOW_DOTTED', 'Integer'),
  \ javaapi#field(1,1,'UNDERLINE_LOW_GRAY', 'Integer'),
  \ javaapi#field(1,1,'UNDERLINE_LOW_DASHED', 'Integer'),
  \ javaapi#field(1,1,'SWAP_COLORS', 'TextAttribute'),
  \ javaapi#field(1,1,'SWAP_COLORS_ON', 'Boolean'),
  \ javaapi#field(1,1,'NUMERIC_SHAPING', 'TextAttribute'),
  \ javaapi#field(1,1,'KERNING', 'TextAttribute'),
  \ javaapi#field(1,1,'KERNING_ON', 'Integer'),
  \ javaapi#field(1,1,'LIGATURES', 'TextAttribute'),
  \ javaapi#field(1,1,'LIGATURES_ON', 'Integer'),
  \ javaapi#field(1,1,'TRACKING', 'TextAttribute'),
  \ javaapi#field(1,1,'TRACKING_TIGHT', 'Float'),
  \ javaapi#field(1,1,'TRACKING_LOOSE', 'Float'),
  \ javaapi#method(0,0,'TextAttribute(', 'String)', ''),
  \ javaapi#method(0,0,'readResolve(', ') throws InvalidObjectException', 'Object'),
  \ ])

