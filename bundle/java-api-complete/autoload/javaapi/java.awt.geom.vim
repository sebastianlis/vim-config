call javaapi#namespace('java.awt.geom')

call javaapi#class('Arc2D', 'RectangularShape', [
  \ javaapi#field(1,1,'OPEN', 'int'),
  \ javaapi#field(1,1,'CHORD', 'int'),
  \ javaapi#field(1,1,'PIE', 'int'),
  \ javaapi#method(0,0,'Arc2D(', ')', ''),
  \ javaapi#method(0,0,'Arc2D(', 'int)', ''),
  \ javaapi#method(0,1,'getAngleStart(', ')', 'double'),
  \ javaapi#method(0,1,'getAngleExtent(', ')', 'double'),
  \ javaapi#method(0,1,'getArcType(', ')', 'int'),
  \ javaapi#method(0,1,'getStartPoint(', ')', 'Point2D'),
  \ javaapi#method(0,1,'getEndPoint(', ')', 'Point2D'),
  \ javaapi#method(0,1,'setArc(', 'double, double, double, double, double, double, int)', 'void'),
  \ javaapi#method(0,1,'setArc(', 'Point2D, Dimension2D, double, double, int)', 'void'),
  \ javaapi#method(0,1,'setArc(', 'Rectangle2D, double, double, int)', 'void'),
  \ javaapi#method(0,1,'setArc(', 'Arc2D)', 'void'),
  \ javaapi#method(0,1,'setArcByCenter(', 'double, double, double, double, double, int)', 'void'),
  \ javaapi#method(0,1,'setArcByTangent(', 'Point2D, Point2D, Point2D, double)', 'void'),
  \ javaapi#method(0,1,'setAngleStart(', 'double)', 'void'),
  \ javaapi#method(0,1,'setAngleExtent(', 'double)', 'void'),
  \ javaapi#method(0,1,'setAngleStart(', 'Point2D)', 'void'),
  \ javaapi#method(0,1,'setAngles(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setAngles(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,1,'setArcType(', 'int)', 'void'),
  \ javaapi#method(0,1,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'getBounds2D(', ')', 'Rectangle2D'),
  \ javaapi#method(0,0,'makeBounds(', 'double, double, double, double)', 'Rectangle2D'),
  \ javaapi#method(0,1,'containsAngle(', 'double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('ArcIterator', 'PathIterator', [
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Area', 'Cloneable', [
  \ javaapi#method(0,1,'Area(', ')', ''),
  \ javaapi#method(0,1,'Area(', 'Shape)', ''),
  \ javaapi#method(0,1,'add(', 'Area)', 'void'),
  \ javaapi#method(0,1,'subtract(', 'Area)', 'void'),
  \ javaapi#method(0,1,'intersect(', 'Area)', 'void'),
  \ javaapi#method(0,1,'exclusiveOr(', 'Area)', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'isPolygonal(', ')', 'boolean'),
  \ javaapi#method(0,1,'isRectangular(', ')', 'boolean'),
  \ javaapi#method(0,1,'isSingular(', ')', 'boolean'),
  \ javaapi#method(0,1,'getBounds2D(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ javaapi#method(0,1,'equals(', 'Area)', 'boolean'),
  \ javaapi#method(0,1,'transform(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,1,'createTransformedArea(', 'AffineTransform)', 'Area'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ ])

call javaapi#class('AreaIterator', 'PathIterator', [
  \ javaapi#method(0,1,'AreaIterator(', 'Vector, AffineTransform)', ''),
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('CubicCurve2D', 'Cloneable', [
  \ javaapi#method(0,0,'CubicCurve2D(', ')', ''),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'getP1(', ')', 'Point2D'),
  \ javaapi#method(0,1,'getCtrlX1(', ')', 'double'),
  \ javaapi#method(0,1,'getCtrlY1(', ')', 'double'),
  \ javaapi#method(0,1,'getCtrlP1(', ')', 'Point2D'),
  \ javaapi#method(0,1,'getCtrlX2(', ')', 'double'),
  \ javaapi#method(0,1,'getCtrlY2(', ')', 'double'),
  \ javaapi#method(0,1,'getCtrlP2(', ')', 'Point2D'),
  \ javaapi#method(0,1,'getX2(', ')', 'double'),
  \ javaapi#method(0,1,'getY2(', ')', 'double'),
  \ javaapi#method(0,1,'getP2(', ')', 'Point2D'),
  \ javaapi#method(0,1,'setCurve(', 'double, double, double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'double[], int)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'Point2D, Point2D, Point2D, Point2D)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'Point2D[], int)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'CubicCurve2D)', 'void'),
  \ javaapi#method(1,1,'getFlatnessSq(', 'double, double, double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,1,'getFlatness(', 'double, double, double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,1,'getFlatnessSq(', 'double[], int)', 'double'),
  \ javaapi#method(1,1,'getFlatness(', 'double[], int)', 'double'),
  \ javaapi#method(0,1,'getFlatnessSq(', ')', 'double'),
  \ javaapi#method(0,1,'getFlatness(', ')', 'double'),
  \ javaapi#method(0,1,'subdivide(', 'CubicCurve2D, CubicCurve2D)', 'void'),
  \ javaapi#method(1,1,'subdivide(', 'CubicCurve2D, CubicCurve2D, CubicCurve2D)', 'void'),
  \ javaapi#method(1,1,'subdivide(', 'double[], int, double[], int, double[], int)', 'void'),
  \ javaapi#method(1,1,'solveCubic(', 'double[])', 'int'),
  \ javaapi#method(1,1,'solveCubic(', 'double[], double[])', 'int'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('CubicIterator', 'PathIterator', [
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Ellipse2D', 'RectangularShape', [
  \ javaapi#method(0,0,'Ellipse2D(', ')', ''),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('EllipseIterator', 'PathIterator', [
  \ javaapi#field(1,1,'CtrlVal', 'double'),
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('FlatteningPathIterator', 'PathIterator', [
  \ javaapi#method(0,1,'FlatteningPathIterator(', 'PathIterator, double)', ''),
  \ javaapi#method(0,1,'FlatteningPathIterator(', 'PathIterator, double, int)', ''),
  \ javaapi#method(0,1,'getFlatness(', ')', 'double'),
  \ javaapi#method(0,1,'getRecursionLimit(', ')', 'int'),
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('IllegalPathStateException', 'RuntimeException', [
  \ javaapi#method(0,1,'IllegalPathStateException(', ')', ''),
  \ javaapi#method(0,1,'IllegalPathStateException(', 'String)', ''),
  \ ])

call javaapi#class('Line2D', 'Cloneable', [
  \ javaapi#method(0,0,'Line2D(', ')', ''),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'getP1(', ')', 'Point2D'),
  \ javaapi#method(0,1,'getX2(', ')', 'double'),
  \ javaapi#method(0,1,'getY2(', ')', 'double'),
  \ javaapi#method(0,1,'getP2(', ')', 'Point2D'),
  \ javaapi#method(0,1,'setLine(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setLine(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,1,'setLine(', 'Line2D)', 'void'),
  \ javaapi#method(1,1,'relativeCCW(', 'double, double, double, double, double, double)', 'int'),
  \ javaapi#method(0,1,'relativeCCW(', 'double, double)', 'int'),
  \ javaapi#method(0,1,'relativeCCW(', 'Point2D)', 'int'),
  \ javaapi#method(1,1,'linesIntersect(', 'double, double, double, double, double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersectsLine(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersectsLine(', 'Line2D)', 'boolean'),
  \ javaapi#method(1,1,'ptSegDistSq(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,1,'ptSegDist(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(0,1,'ptSegDistSq(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'ptSegDistSq(', 'Point2D)', 'double'),
  \ javaapi#method(0,1,'ptSegDist(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'ptSegDist(', 'Point2D)', 'double'),
  \ javaapi#method(1,1,'ptLineDistSq(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,1,'ptLineDist(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(0,1,'ptLineDistSq(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'ptLineDistSq(', 'Point2D)', 'double'),
  \ javaapi#method(0,1,'ptLineDist(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'ptLineDist(', 'Point2D)', 'double'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('LineIterator', 'PathIterator', [
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('NoninvertibleTransformException', 'Exception', [
  \ javaapi#method(0,1,'NoninvertibleTransformException(', 'String)', ''),
  \ ])

call javaapi#interface('PathIterator', '', [
  \ javaapi#field(1,1,'WIND_EVEN_ODD', 'int'),
  \ javaapi#field(1,1,'WIND_NON_ZERO', 'int'),
  \ javaapi#field(1,1,'SEG_MOVETO', 'int'),
  \ javaapi#field(1,1,'SEG_LINETO', 'int'),
  \ javaapi#field(1,1,'SEG_QUADTO', 'int'),
  \ javaapi#field(1,1,'SEG_CUBICTO', 'int'),
  \ javaapi#field(1,1,'SEG_CLOSE', 'int'),
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('QuadCurve2D', 'Cloneable', [
  \ javaapi#method(0,0,'QuadCurve2D(', ')', ''),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'getP1(', ')', 'Point2D'),
  \ javaapi#method(0,1,'getCtrlX(', ')', 'double'),
  \ javaapi#method(0,1,'getCtrlY(', ')', 'double'),
  \ javaapi#method(0,1,'getCtrlPt(', ')', 'Point2D'),
  \ javaapi#method(0,1,'getX2(', ')', 'double'),
  \ javaapi#method(0,1,'getY2(', ')', 'double'),
  \ javaapi#method(0,1,'getP2(', ')', 'Point2D'),
  \ javaapi#method(0,1,'setCurve(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'double[], int)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'Point2D, Point2D, Point2D)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'Point2D[], int)', 'void'),
  \ javaapi#method(0,1,'setCurve(', 'QuadCurve2D)', 'void'),
  \ javaapi#method(1,1,'getFlatnessSq(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,1,'getFlatness(', 'double, double, double, double, double, double)', 'double'),
  \ javaapi#method(1,1,'getFlatnessSq(', 'double[], int)', 'double'),
  \ javaapi#method(1,1,'getFlatness(', 'double[], int)', 'double'),
  \ javaapi#method(0,1,'getFlatnessSq(', ')', 'double'),
  \ javaapi#method(0,1,'getFlatness(', ')', 'double'),
  \ javaapi#method(0,1,'subdivide(', 'QuadCurve2D, QuadCurve2D)', 'void'),
  \ javaapi#method(1,1,'subdivide(', 'QuadCurve2D, QuadCurve2D, QuadCurve2D)', 'void'),
  \ javaapi#method(1,1,'subdivide(', 'double[], int, double[], int, double[], int)', 'void'),
  \ javaapi#method(1,1,'solveQuadratic(', 'double[])', 'int'),
  \ javaapi#method(1,1,'solveQuadratic(', 'double[], double[])', 'int'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('QuadIterator', 'PathIterator', [
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('RectIterator', 'PathIterator', [
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('RoundRectIterator', 'PathIterator', [
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'isDone(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ')', 'void'),
  \ javaapi#method(0,1,'currentSegment(', 'float[])', 'int'),
  \ javaapi#method(0,1,'currentSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('RoundRectangle2D', 'RectangularShape', [
  \ javaapi#method(0,0,'RoundRectangle2D(', ')', ''),
  \ javaapi#method(0,1,'getArcWidth(', ')', 'double'),
  \ javaapi#method(0,1,'getArcHeight(', ')', 'double'),
  \ javaapi#method(0,1,'setRoundRect(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setRoundRect(', 'RoundRectangle2D)', 'void'),
  \ javaapi#method(0,1,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#namespace('java.awt.geom')

call javaapi#class('GeneralPath', 'Float', [
  \ javaapi#method(0,1,'GeneralPath(', ')', ''),
  \ javaapi#method(0,1,'GeneralPath(', 'int)', ''),
  \ javaapi#method(0,1,'GeneralPath(', 'int, int)', ''),
  \ javaapi#method(0,1,'GeneralPath(', 'Shape)', ''),
  \ ])

call javaapi#namespace('java.awt.geom')

call javaapi#class('Path2D', 'Cloneable', [
  \ javaapi#field(1,1,'WIND_EVEN_ODD', 'int'),
  \ javaapi#field(1,1,'WIND_NON_ZERO', 'int'),
  \ javaapi#method(0,1,'moveTo(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'lineTo(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'quadTo(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'curveTo(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'closePath(', ')', 'void'),
  \ javaapi#method(0,1,'append(', 'Shape, boolean)', 'void'),
  \ javaapi#method(0,1,'append(', 'PathIterator, boolean)', 'void'),
  \ javaapi#method(0,1,'getWindingRule(', ')', 'int'),
  \ javaapi#method(0,1,'setWindingRule(', 'int)', 'void'),
  \ javaapi#method(0,1,'getCurrentPoint(', ')', 'Point2D'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'transform(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,1,'createTransformedShape(', 'AffineTransform)', 'Shape'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(1,1,'contains(', 'PathIterator, double, double)', 'boolean'),
  \ javaapi#method(1,1,'contains(', 'PathIterator, Point2D)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(1,1,'contains(', 'PathIterator, double, double, double, double)', 'boolean'),
  \ javaapi#method(1,1,'contains(', 'PathIterator, Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(1,1,'intersects(', 'PathIterator, double, double, double, double)', 'boolean'),
  \ javaapi#method(1,1,'intersects(', 'PathIterator, Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#namespace('java.awt.geom')

call javaapi#class('RectangularShape', 'Cloneable', [
  \ javaapi#method(0,0,'RectangularShape(', ')', ''),
  \ javaapi#method(0,1,'getX(', ')', 'double'),
  \ javaapi#method(0,1,'getY(', ')', 'double'),
  \ javaapi#method(0,1,'getWidth(', ')', 'double'),
  \ javaapi#method(0,1,'getHeight(', ')', 'double'),
  \ javaapi#method(0,1,'getMinX(', ')', 'double'),
  \ javaapi#method(0,1,'getMinY(', ')', 'double'),
  \ javaapi#method(0,1,'getMaxX(', ')', 'double'),
  \ javaapi#method(0,1,'getMaxY(', ')', 'double'),
  \ javaapi#method(0,1,'getCenterX(', ')', 'double'),
  \ javaapi#method(0,1,'getCenterY(', ')', 'double'),
  \ javaapi#method(0,1,'getFrame(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setFrame(', 'Point2D, Dimension2D)', 'void'),
  \ javaapi#method(0,1,'setFrame(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'setFrameFromDiagonal(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setFrameFromDiagonal(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,1,'setFrameFromCenter(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setFrameFromCenter(', 'Point2D, Point2D)', 'void'),
  \ javaapi#method(0,1,'contains(', 'Point2D)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Rectangle2D)', 'boolean'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('Rectangle2D', 'RectangularShape', [
  \ javaapi#field(1,1,'OUT_LEFT', 'int'),
  \ javaapi#field(1,1,'OUT_TOP', 'int'),
  \ javaapi#field(1,1,'OUT_RIGHT', 'int'),
  \ javaapi#field(1,1,'OUT_BOTTOM', 'int'),
  \ javaapi#method(0,0,'Rectangle2D(', ')', ''),
  \ javaapi#method(0,1,'setRect(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setRect(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'intersectsLine(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersectsLine(', 'Line2D)', 'boolean'),
  \ javaapi#method(0,1,'outcode(', 'double, double)', 'int'),
  \ javaapi#method(0,1,'outcode(', 'Point2D)', 'int'),
  \ javaapi#method(0,1,'setFrame(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'getBounds2D(', ')', 'Rectangle2D'),
  \ javaapi#method(0,1,'contains(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'intersects(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'createIntersection(', 'Rectangle2D)', 'Rectangle2D'),
  \ javaapi#method(1,1,'intersect(', 'Rectangle2D, Rectangle2D, Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'createUnion(', 'Rectangle2D)', 'Rectangle2D'),
  \ javaapi#method(1,1,'union(', 'Rectangle2D, Rectangle2D, Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'add(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'add(', 'Point2D)', 'void'),
  \ javaapi#method(0,1,'add(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform)', 'PathIterator'),
  \ javaapi#method(0,1,'getPathIterator(', 'AffineTransform, double)', 'PathIterator'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#namespace('java.awt.geom')

call javaapi#class('Point2D', 'Cloneable', [
  \ javaapi#method(0,0,'Point2D(', ')', ''),
  \ javaapi#method(0,1,'getX(', ')', 'double'),
  \ javaapi#method(0,1,'getY(', ')', 'double'),
  \ javaapi#method(0,1,'setLocation(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'setLocation(', 'Point2D)', 'void'),
  \ javaapi#method(1,1,'distanceSq(', 'double, double, double, double)', 'double'),
  \ javaapi#method(1,1,'distance(', 'double, double, double, double)', 'double'),
  \ javaapi#method(0,1,'distanceSq(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'distanceSq(', 'Point2D)', 'double'),
  \ javaapi#method(0,1,'distance(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'distance(', 'Point2D)', 'double'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#namespace('java.awt.geom')

call javaapi#class('Dimension2D', 'Cloneable', [
  \ javaapi#method(0,0,'Dimension2D(', ')', ''),
  \ javaapi#method(0,1,'getWidth(', ')', 'double'),
  \ javaapi#method(0,1,'getHeight(', ')', 'double'),
  \ javaapi#method(0,1,'setSize(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'setSize(', 'Dimension2D)', 'void'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#namespace('java.awt.geom')

call javaapi#class('AffineTransform', 'Serializable', [
  \ javaapi#field(1,1,'TYPE_IDENTITY', 'int'),
  \ javaapi#field(1,1,'TYPE_TRANSLATION', 'int'),
  \ javaapi#field(1,1,'TYPE_UNIFORM_SCALE', 'int'),
  \ javaapi#field(1,1,'TYPE_GENERAL_SCALE', 'int'),
  \ javaapi#field(1,1,'TYPE_MASK_SCALE', 'int'),
  \ javaapi#field(1,1,'TYPE_FLIP', 'int'),
  \ javaapi#field(1,1,'TYPE_QUADRANT_ROTATION', 'int'),
  \ javaapi#field(1,1,'TYPE_GENERAL_ROTATION', 'int'),
  \ javaapi#field(1,1,'TYPE_MASK_ROTATION', 'int'),
  \ javaapi#field(1,1,'TYPE_GENERAL_TRANSFORM', 'int'),
  \ javaapi#method(0,1,'AffineTransform(', ')', ''),
  \ javaapi#method(0,1,'AffineTransform(', 'AffineTransform)', ''),
  \ javaapi#method(0,1,'AffineTransform(', 'float, float, float, float, float, float)', ''),
  \ javaapi#method(0,1,'AffineTransform(', 'float[])', ''),
  \ javaapi#method(0,1,'AffineTransform(', 'double, double, double, double, double, double)', ''),
  \ javaapi#method(0,1,'AffineTransform(', 'double[])', ''),
  \ javaapi#method(1,1,'getTranslateInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(1,1,'getRotateInstance(', 'double)', 'AffineTransform'),
  \ javaapi#method(1,1,'getRotateInstance(', 'double, double, double)', 'AffineTransform'),
  \ javaapi#method(1,1,'getRotateInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(1,1,'getRotateInstance(', 'double, double, double, double)', 'AffineTransform'),
  \ javaapi#method(1,1,'getQuadrantRotateInstance(', 'int)', 'AffineTransform'),
  \ javaapi#method(1,1,'getQuadrantRotateInstance(', 'int, double, double)', 'AffineTransform'),
  \ javaapi#method(1,1,'getScaleInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(1,1,'getShearInstance(', 'double, double)', 'AffineTransform'),
  \ javaapi#method(0,1,'getType(', ')', 'int'),
  \ javaapi#method(0,1,'getDeterminant(', ')', 'double'),
  \ javaapi#method(0,1,'getMatrix(', 'double[])', 'void'),
  \ javaapi#method(0,1,'getScaleX(', ')', 'double'),
  \ javaapi#method(0,1,'getScaleY(', ')', 'double'),
  \ javaapi#method(0,1,'getShearX(', ')', 'double'),
  \ javaapi#method(0,1,'getShearY(', ')', 'double'),
  \ javaapi#method(0,1,'getTranslateX(', ')', 'double'),
  \ javaapi#method(0,1,'getTranslateY(', ')', 'double'),
  \ javaapi#method(0,1,'translate(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'rotate(', 'double)', 'void'),
  \ javaapi#method(0,1,'rotate(', 'double, double, double)', 'void'),
  \ javaapi#method(0,1,'rotate(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'rotate(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'quadrantRotate(', 'int)', 'void'),
  \ javaapi#method(0,1,'quadrantRotate(', 'int, double, double)', 'void'),
  \ javaapi#method(0,1,'scale(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'shear(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'setToIdentity(', ')', 'void'),
  \ javaapi#method(0,1,'setToTranslation(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'setToRotation(', 'double)', 'void'),
  \ javaapi#method(0,1,'setToRotation(', 'double, double, double)', 'void'),
  \ javaapi#method(0,1,'setToRotation(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'setToRotation(', 'double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'setToQuadrantRotation(', 'int)', 'void'),
  \ javaapi#method(0,1,'setToQuadrantRotation(', 'int, double, double)', 'void'),
  \ javaapi#method(0,1,'setToScale(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'setToShear(', 'double, double)', 'void'),
  \ javaapi#method(0,1,'setTransform(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,1,'setTransform(', 'double, double, double, double, double, double)', 'void'),
  \ javaapi#method(0,1,'concatenate(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,1,'preConcatenate(', 'AffineTransform)', 'void'),
  \ javaapi#method(0,1,'createInverse(', ') throws NoninvertibleTransformException', 'AffineTransform'),
  \ javaapi#method(0,1,'invert(', ') throws NoninvertibleTransformException', 'void'),
  \ javaapi#method(0,1,'transform(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'transform(', 'Point2D[], int, Point2D[], int, int)', 'void'),
  \ javaapi#method(0,1,'transform(', 'float[], int, float[], int, int)', 'void'),
  \ javaapi#method(0,1,'transform(', 'double[], int, double[], int, int)', 'void'),
  \ javaapi#method(0,1,'transform(', 'float[], int, double[], int, int)', 'void'),
  \ javaapi#method(0,1,'transform(', 'double[], int, float[], int, int)', 'void'),
  \ javaapi#method(0,1,'inverseTransform(', 'Point2D, Point2D) throws NoninvertibleTransformException', 'Point2D'),
  \ javaapi#method(0,1,'inverseTransform(', 'double[], int, double[], int, int) throws NoninvertibleTransformException', 'void'),
  \ javaapi#method(0,1,'deltaTransform(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'deltaTransform(', 'double[], int, double[], int, int)', 'void'),
  \ javaapi#method(0,1,'createTransformedShape(', 'Shape)', 'Shape'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'isIdentity(', ')', 'boolean'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

