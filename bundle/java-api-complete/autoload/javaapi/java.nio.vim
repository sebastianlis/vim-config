call javaapi#namespace('java.nio')

call javaapi#class('BufferOverflowException', 'RuntimeException', [
  \ javaapi#method(0,1,'BufferOverflowException(', ')', ''),
  \ ])

call javaapi#class('BufferUnderflowException', 'RuntimeException', [
  \ javaapi#method(0,1,'BufferUnderflowException(', ')', ''),
  \ ])

call javaapi#class('ByteBufferAsCharBufferL', 'CharBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'char'),
  \ javaapi#method(0,1,'get(', 'int)', 'char'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('ByteBufferAsCharBufferRB', 'ByteBufferAsCharBufferB', [
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('ByteBufferAsCharBufferRL', 'ByteBufferAsCharBufferL', [
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('ByteBufferAsDoubleBufferB', 'DoubleBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'double'),
  \ javaapi#method(0,1,'get(', 'int)', 'double'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsDoubleBufferL', 'DoubleBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'double'),
  \ javaapi#method(0,1,'get(', 'int)', 'double'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsDoubleBufferRB', 'ByteBufferAsDoubleBufferB', [
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsDoubleBufferRL', 'ByteBufferAsDoubleBufferL', [
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsFloatBufferB', 'FloatBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'float'),
  \ javaapi#method(0,1,'get(', 'int)', 'float'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsFloatBufferL', 'FloatBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'float'),
  \ javaapi#method(0,1,'get(', 'int)', 'float'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsFloatBufferRB', 'ByteBufferAsFloatBufferB', [
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsFloatBufferRL', 'ByteBufferAsFloatBufferL', [
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsIntBufferL', 'IntBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'int'),
  \ javaapi#method(0,1,'get(', 'int)', 'int'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsIntBufferRB', 'ByteBufferAsIntBufferB', [
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsIntBufferRL', 'ByteBufferAsIntBufferL', [
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsLongBufferB', 'LongBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'long'),
  \ javaapi#method(0,1,'get(', 'int)', 'long'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsLongBufferL', 'LongBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'long'),
  \ javaapi#method(0,1,'get(', 'int)', 'long'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsLongBufferRB', 'ByteBufferAsLongBufferB', [
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsLongBufferRL', 'ByteBufferAsLongBufferL', [
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsShortBufferL', 'ShortBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'short'),
  \ javaapi#method(0,1,'get(', 'int)', 'short'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsShortBufferRB', 'ByteBufferAsShortBufferB', [
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('ByteBufferAsShortBufferRL', 'ByteBufferAsShortBufferL', [
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectByteBufferR', 'DirectByteBuffer', [
  \ javaapi#method(0,0,'DirectByteBufferR(', 'int, long, FileDescriptor, Runnable)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'int, byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'ByteBuffer)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'putChar(', 'char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putChar(', 'int, char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asCharBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'putShort(', 'short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putShort(', 'int, short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asShortBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'putInt(', 'int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putInt(', 'int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asIntBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'putLong(', 'long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putLong(', 'int, long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asLongBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'putFloat(', 'float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putFloat(', 'int, float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asFloatBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'putDouble(', 'double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putDouble(', 'int, double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asDoubleBuffer(', ')', 'DoubleBuffer'),
  \ ])

call javaapi#class('DirectCharBufferRS', 'DirectCharBufferS', [
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'CharBuffer)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('DirectCharBufferRU', 'DirectCharBufferU', [
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'CharBuffer)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('DirectCharBufferS', 'CharBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'char'),
  \ javaapi#method(0,1,'get(', 'int)', 'char'),
  \ javaapi#method(0,1,'get(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'CharBuffer)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('DirectCharBufferU', 'CharBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'char'),
  \ javaapi#method(0,1,'get(', 'int)', 'char'),
  \ javaapi#method(0,1,'get(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'CharBuffer)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('DirectDoubleBufferRS', 'DirectDoubleBufferS', [
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'DoubleBuffer)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectDoubleBufferRU', 'DirectDoubleBufferU', [
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'DoubleBuffer)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectDoubleBufferS', 'DoubleBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'double'),
  \ javaapi#method(0,1,'get(', 'int)', 'double'),
  \ javaapi#method(0,1,'get(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'DoubleBuffer)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectDoubleBufferU', 'DoubleBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'double'),
  \ javaapi#method(0,1,'get(', 'int)', 'double'),
  \ javaapi#method(0,1,'get(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'DoubleBuffer)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectFloatBufferRS', 'DirectFloatBufferS', [
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'FloatBuffer)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectFloatBufferRU', 'DirectFloatBufferU', [
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'FloatBuffer)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectFloatBufferS', 'FloatBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'float'),
  \ javaapi#method(0,1,'get(', 'int)', 'float'),
  \ javaapi#method(0,1,'get(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'FloatBuffer)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectFloatBufferU', 'FloatBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'float'),
  \ javaapi#method(0,1,'get(', 'int)', 'float'),
  \ javaapi#method(0,1,'get(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'FloatBuffer)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectIntBufferRS', 'DirectIntBufferS', [
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'IntBuffer)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectIntBufferRU', 'DirectIntBufferU', [
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'IntBuffer)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectIntBufferS', 'IntBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'int'),
  \ javaapi#method(0,1,'get(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'IntBuffer)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectIntBufferU', 'IntBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'int'),
  \ javaapi#method(0,1,'get(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'IntBuffer)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectLongBufferRS', 'DirectLongBufferS', [
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'LongBuffer)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectLongBufferRU', 'DirectLongBufferU', [
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'LongBuffer)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectLongBufferS', 'LongBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'long'),
  \ javaapi#method(0,1,'get(', 'int)', 'long'),
  \ javaapi#method(0,1,'get(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'LongBuffer)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectLongBufferU', 'LongBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'long'),
  \ javaapi#method(0,1,'get(', 'int)', 'long'),
  \ javaapi#method(0,1,'get(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'LongBuffer)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectShortBufferRS', 'DirectShortBufferS', [
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'ShortBuffer)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectShortBufferRU', 'DirectShortBufferU', [
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'ShortBuffer)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectShortBufferS', 'ShortBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'short'),
  \ javaapi#method(0,1,'get(', 'int)', 'short'),
  \ javaapi#method(0,1,'get(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'ShortBuffer)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DirectShortBufferU', 'ShortBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'short'),
  \ javaapi#method(0,1,'get(', 'int)', 'short'),
  \ javaapi#method(0,1,'get(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'ShortBuffer)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('DoubleBuffer', 'Buffer', [
  \ javaapi#method(1,1,'allocate(', 'int)', 'DoubleBuffer'),
  \ javaapi#method(1,1,'wrap(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(1,1,'wrap(', 'double[])', 'DoubleBuffer'),
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'double'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'get(', 'int)', 'double'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'get(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'get(', 'double[])', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'DoubleBuffer)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[])', 'DoubleBuffer'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'double'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'DoubleBuffer)', 'int'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ ])

call javaapi#class('FloatBuffer', 'Buffer', [
  \ javaapi#method(1,1,'allocate(', 'int)', 'FloatBuffer'),
  \ javaapi#method(1,1,'wrap(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(1,1,'wrap(', 'float[])', 'FloatBuffer'),
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'float'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'get(', 'int)', 'float'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'get(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'get(', 'float[])', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'FloatBuffer)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[])', 'FloatBuffer'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'float'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'FloatBuffer)', 'int'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ ])

call javaapi#class('HeapByteBufferR', 'HeapByteBuffer', [
  \ javaapi#method(0,0,'HeapByteBufferR(', 'byte[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'int, byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'ByteBuffer)', 'ByteBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'putChar(', 'char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putChar(', 'int, char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asCharBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'putShort(', 'short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putShort(', 'int, short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asShortBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'putInt(', 'int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putInt(', 'int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asIntBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'putLong(', 'long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putLong(', 'int, long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asLongBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'putFloat(', 'float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putFloat(', 'int, float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asFloatBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'putDouble(', 'double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putDouble(', 'int, double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asDoubleBuffer(', ')', 'DoubleBuffer'),
  \ ])

call javaapi#class('HeapCharBufferR', 'HeapCharBuffer', [
  \ javaapi#method(0,0,'HeapCharBufferR(', 'char[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'CharBuffer)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('HeapDoubleBuffer', 'DoubleBuffer', [
  \ javaapi#method(0,0,'HeapDoubleBuffer(', 'double[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'double'),
  \ javaapi#method(0,1,'get(', 'int)', 'double'),
  \ javaapi#method(0,1,'get(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'DoubleBuffer)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapDoubleBufferR', 'HeapDoubleBuffer', [
  \ javaapi#method(0,0,'HeapDoubleBufferR(', 'double[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'int, double)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'double[], int, int)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'put(', 'DoubleBuffer)', 'DoubleBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapFloatBuffer', 'FloatBuffer', [
  \ javaapi#method(0,0,'HeapFloatBuffer(', 'float[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'float'),
  \ javaapi#method(0,1,'get(', 'int)', 'float'),
  \ javaapi#method(0,1,'get(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'FloatBuffer)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapFloatBufferR', 'HeapFloatBuffer', [
  \ javaapi#method(0,0,'HeapFloatBufferR(', 'float[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'int, float)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'float[], int, int)', 'FloatBuffer'),
  \ javaapi#method(0,1,'put(', 'FloatBuffer)', 'FloatBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapIntBuffer', 'IntBuffer', [
  \ javaapi#method(0,0,'HeapIntBuffer(', 'int[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'int'),
  \ javaapi#method(0,1,'get(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'IntBuffer)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapIntBufferR', 'HeapIntBuffer', [
  \ javaapi#method(0,0,'HeapIntBufferR(', 'int[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'IntBuffer)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapLongBuffer', 'LongBuffer', [
  \ javaapi#method(0,0,'HeapLongBuffer(', 'long[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'long'),
  \ javaapi#method(0,1,'get(', 'int)', 'long'),
  \ javaapi#method(0,1,'get(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'LongBuffer)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapLongBufferR', 'HeapLongBuffer', [
  \ javaapi#method(0,0,'HeapLongBufferR(', 'long[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'LongBuffer)', 'LongBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapShortBuffer', 'ShortBuffer', [
  \ javaapi#method(0,0,'HeapShortBuffer(', 'short[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'short'),
  \ javaapi#method(0,1,'get(', 'int)', 'short'),
  \ javaapi#method(0,1,'get(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'ShortBuffer)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('HeapShortBufferR', 'HeapShortBuffer', [
  \ javaapi#method(0,0,'HeapShortBufferR(', 'short[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'ShortBuffer)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('InvalidMarkException', 'IllegalStateException', [
  \ javaapi#method(0,1,'InvalidMarkException(', ')', ''),
  \ ])

call javaapi#class('LongBuffer', 'Buffer', [
  \ javaapi#method(1,1,'allocate(', 'int)', 'LongBuffer'),
  \ javaapi#method(1,1,'wrap(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(1,1,'wrap(', 'long[])', 'LongBuffer'),
  \ javaapi#method(0,1,'slice(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'long'),
  \ javaapi#method(0,1,'put(', 'long)', 'LongBuffer'),
  \ javaapi#method(0,1,'get(', 'int)', 'long'),
  \ javaapi#method(0,1,'put(', 'int, long)', 'LongBuffer'),
  \ javaapi#method(0,1,'get(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'get(', 'long[])', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'LongBuffer)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[], int, int)', 'LongBuffer'),
  \ javaapi#method(0,1,'put(', 'long[])', 'LongBuffer'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'long'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'compact(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'LongBuffer)', 'int'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ ])

call javaapi#class('ReadOnlyBufferException', 'UnsupportedOperationException', [
  \ javaapi#method(0,1,'ReadOnlyBufferException(', ')', ''),
  \ ])

call javaapi#class('StringCharBuffer', 'CharBuffer', [
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'char'),
  \ javaapi#method(0,1,'get(', 'int)', 'char'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('ByteBufferAsCharBufferB', 'CharBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'char'),
  \ javaapi#method(0,1,'get(', 'int)', 'char'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('ShortBuffer', 'Buffer', [
  \ javaapi#method(1,1,'allocate(', 'int)', 'ShortBuffer'),
  \ javaapi#method(1,1,'wrap(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(1,1,'wrap(', 'short[])', 'ShortBuffer'),
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'short'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'get(', 'int)', 'short'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'get(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'get(', 'short[])', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'ShortBuffer)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[], int, int)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'short[])', 'ShortBuffer'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'short'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'ShortBuffer)', 'int'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ ])

call javaapi#class('ByteBufferAsShortBufferB', 'ShortBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'short'),
  \ javaapi#method(0,1,'get(', 'int)', 'short'),
  \ javaapi#method(0,1,'put(', 'short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'put(', 'int, short)', 'ShortBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#class('IntBuffer', 'Buffer', [
  \ javaapi#method(1,1,'allocate(', 'int)', 'IntBuffer'),
  \ javaapi#method(1,1,'wrap(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(1,1,'wrap(', 'int[])', 'IntBuffer'),
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'int'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'get(', 'int)', 'int'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'get(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'get(', 'int[])', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'IntBuffer)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[], int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int[])', 'IntBuffer'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'int'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'IntBuffer)', 'int'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ ])

call javaapi#class('ByteBufferAsIntBufferB', 'IntBuffer', [
  \ javaapi#field(0,0,'bb', 'ByteBuffer'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#method(0,1,'slice(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'int'),
  \ javaapi#method(0,1,'get(', 'int)', 'int'),
  \ javaapi#method(0,1,'put(', 'int)', 'IntBuffer'),
  \ javaapi#method(0,1,'put(', 'int, int)', 'IntBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('DirectByteBuffer', 'MappedByteBuffer', [
  \ javaapi#field(1,0,'unsafe', 'Unsafe'),
  \ javaapi#field(1,0,'unaligned', 'boolean'),
  \ javaapi#method(0,1,'attachment(', ')', 'Object'),
  \ javaapi#method(0,1,'cleaner(', ')', 'Cleaner'),
  \ javaapi#method(0,0,'DirectByteBuffer(', 'int, long, FileDescriptor, Runnable)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'address(', ')', 'long'),
  \ javaapi#method(0,1,'get(', ')', 'byte'),
  \ javaapi#method(0,1,'get(', 'int)', 'byte'),
  \ javaapi#method(0,1,'get(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'int, byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'ByteBuffer)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'getChar(', ')', 'char'),
  \ javaapi#method(0,1,'getChar(', 'int)', 'char'),
  \ javaapi#method(0,1,'putChar(', 'char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putChar(', 'int, char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asCharBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'getShort(', ')', 'short'),
  \ javaapi#method(0,1,'getShort(', 'int)', 'short'),
  \ javaapi#method(0,1,'putShort(', 'short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putShort(', 'int, short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asShortBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'getInt(', ')', 'int'),
  \ javaapi#method(0,1,'getInt(', 'int)', 'int'),
  \ javaapi#method(0,1,'putInt(', 'int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putInt(', 'int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asIntBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'getLong(', ')', 'long'),
  \ javaapi#method(0,1,'getLong(', 'int)', 'long'),
  \ javaapi#method(0,1,'putLong(', 'long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putLong(', 'int, long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asLongBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'getFloat(', ')', 'float'),
  \ javaapi#method(0,1,'getFloat(', 'int)', 'float'),
  \ javaapi#method(0,1,'putFloat(', 'float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putFloat(', 'int, float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asFloatBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'getDouble(', ')', 'double'),
  \ javaapi#method(0,1,'getDouble(', 'int)', 'double'),
  \ javaapi#method(0,1,'putDouble(', 'double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putDouble(', 'int, double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asDoubleBuffer(', ')', 'DoubleBuffer'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('MappedByteBuffer', 'ByteBuffer', [
  \ javaapi#method(0,1,'isLoaded(', ')', 'boolean'),
  \ javaapi#method(0,1,'load(', ')', 'MappedByteBuffer'),
  \ javaapi#method(0,1,'force(', ')', 'MappedByteBuffer'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('HeapCharBuffer', 'CharBuffer', [
  \ javaapi#method(0,0,'HeapCharBuffer(', 'char[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'char'),
  \ javaapi#method(0,1,'get(', 'int)', 'char'),
  \ javaapi#method(0,1,'get(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'CharBuffer)', 'CharBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('CharBuffer', 'Buffer', [
  \ javaapi#method(1,1,'allocate(', 'int)', 'CharBuffer'),
  \ javaapi#method(1,1,'wrap(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(1,1,'wrap(', 'char[])', 'CharBuffer'),
  \ javaapi#method(0,1,'read(', 'CharBuffer) throws IOException', 'int'),
  \ javaapi#method(1,1,'wrap(', 'CharSequence, int, int)', 'CharBuffer'),
  \ javaapi#method(1,1,'wrap(', 'CharSequence)', 'CharBuffer'),
  \ javaapi#method(0,1,'slice(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'char'),
  \ javaapi#method(0,1,'put(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'get(', 'int)', 'char'),
  \ javaapi#method(0,1,'put(', 'int, char)', 'CharBuffer'),
  \ javaapi#method(0,1,'get(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'get(', 'char[])', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'CharBuffer)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[], int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'char[])', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'String, int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'put(', 'String)', 'CharBuffer'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'char'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'compact(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'CharBuffer)', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'length(', ')', 'int'),
  \ javaapi#method(0,1,'charAt(', 'int)', 'char'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'append(', 'CharSequence)', 'CharBuffer'),
  \ javaapi#method(0,1,'append(', 'CharSequence, int, int)', 'CharBuffer'),
  \ javaapi#method(0,1,'append(', 'char)', 'CharBuffer'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ javaapi#method(0,1,'append(', 'char) throws IOException', 'Appendable'),
  \ javaapi#method(0,1,'append(', 'CharSequence, int, int) throws IOException', 'Appendable'),
  \ javaapi#method(0,1,'append(', 'CharSequence) throws IOException', 'Appendable'),
  \ javaapi#method(0,1,'subSequence(', 'int, int)', 'CharSequence'),
  \ ])

call javaapi#class('ByteOrder', '', [
  \ javaapi#field(1,1,'BIG_ENDIAN', 'ByteOrder'),
  \ javaapi#field(1,1,'LITTLE_ENDIAN', 'ByteOrder'),
  \ javaapi#method(1,1,'nativeOrder(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('Bits', '', [
  \ ])

call javaapi#class('HeapByteBuffer', 'ByteBuffer', [
  \ javaapi#method(0,0,'HeapByteBuffer(', 'byte[], int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'slice(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ByteBuffer'),
  \ javaapi#method(0,0,'ix(', 'int)', 'int'),
  \ javaapi#method(0,1,'get(', ')', 'byte'),
  \ javaapi#method(0,1,'get(', 'int)', 'byte'),
  \ javaapi#method(0,1,'get(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'put(', 'byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'int, byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'ByteBuffer)', 'ByteBuffer'),
  \ javaapi#method(0,1,'compact(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'getChar(', ')', 'char'),
  \ javaapi#method(0,1,'getChar(', 'int)', 'char'),
  \ javaapi#method(0,1,'putChar(', 'char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putChar(', 'int, char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asCharBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'getShort(', ')', 'short'),
  \ javaapi#method(0,1,'getShort(', 'int)', 'short'),
  \ javaapi#method(0,1,'putShort(', 'short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putShort(', 'int, short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asShortBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'getInt(', ')', 'int'),
  \ javaapi#method(0,1,'getInt(', 'int)', 'int'),
  \ javaapi#method(0,1,'putInt(', 'int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putInt(', 'int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asIntBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'getLong(', ')', 'long'),
  \ javaapi#method(0,1,'getLong(', 'int)', 'long'),
  \ javaapi#method(0,1,'putLong(', 'long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putLong(', 'int, long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asLongBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'getFloat(', ')', 'float'),
  \ javaapi#method(0,1,'getFloat(', 'int)', 'float'),
  \ javaapi#method(0,1,'putFloat(', 'float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putFloat(', 'int, float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asFloatBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'getDouble(', ')', 'double'),
  \ javaapi#method(0,1,'getDouble(', 'int)', 'double'),
  \ javaapi#method(0,1,'putDouble(', 'double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'putDouble(', 'int, double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asDoubleBuffer(', ')', 'DoubleBuffer'),
  \ ])

call javaapi#class('ByteBuffer', 'Buffer', [
  \ javaapi#method(1,1,'allocateDirect(', 'int)', 'ByteBuffer'),
  \ javaapi#method(1,1,'allocate(', 'int)', 'ByteBuffer'),
  \ javaapi#method(1,1,'wrap(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(1,1,'wrap(', 'byte[])', 'ByteBuffer'),
  \ javaapi#method(0,1,'slice(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'duplicate(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'asReadOnlyBuffer(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'get(', ')', 'byte'),
  \ javaapi#method(0,1,'put(', 'byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'get(', 'int)', 'byte'),
  \ javaapi#method(0,1,'put(', 'int, byte)', 'ByteBuffer'),
  \ javaapi#method(0,1,'get(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'get(', 'byte[])', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'ByteBuffer)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte[], int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'put(', 'byte[])', 'ByteBuffer'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'byte'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'compact(', ')', 'ByteBuffer'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'ByteBuffer)', 'int'),
  \ javaapi#method(0,1,'order(', ')', 'ByteOrder'),
  \ javaapi#method(0,1,'order(', 'ByteOrder)', 'ByteBuffer'),
  \ javaapi#method(0,1,'getChar(', ')', 'char'),
  \ javaapi#method(0,1,'putChar(', 'char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'getChar(', 'int)', 'char'),
  \ javaapi#method(0,1,'putChar(', 'int, char)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asCharBuffer(', ')', 'CharBuffer'),
  \ javaapi#method(0,1,'getShort(', ')', 'short'),
  \ javaapi#method(0,1,'putShort(', 'short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'getShort(', 'int)', 'short'),
  \ javaapi#method(0,1,'putShort(', 'int, short)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asShortBuffer(', ')', 'ShortBuffer'),
  \ javaapi#method(0,1,'getInt(', ')', 'int'),
  \ javaapi#method(0,1,'putInt(', 'int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'getInt(', 'int)', 'int'),
  \ javaapi#method(0,1,'putInt(', 'int, int)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asIntBuffer(', ')', 'IntBuffer'),
  \ javaapi#method(0,1,'getLong(', ')', 'long'),
  \ javaapi#method(0,1,'putLong(', 'long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'getLong(', 'int)', 'long'),
  \ javaapi#method(0,1,'putLong(', 'int, long)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asLongBuffer(', ')', 'LongBuffer'),
  \ javaapi#method(0,1,'getFloat(', ')', 'float'),
  \ javaapi#method(0,1,'putFloat(', 'float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'getFloat(', 'int)', 'float'),
  \ javaapi#method(0,1,'putFloat(', 'int, float)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asFloatBuffer(', ')', 'FloatBuffer'),
  \ javaapi#method(0,1,'getDouble(', ')', 'double'),
  \ javaapi#method(0,1,'putDouble(', 'double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'getDouble(', 'int)', 'double'),
  \ javaapi#method(0,1,'putDouble(', 'int, double)', 'ByteBuffer'),
  \ javaapi#method(0,1,'asDoubleBuffer(', ')', 'DoubleBuffer'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ ])

call javaapi#namespace('java.nio')

call javaapi#class('Buffer', '', [
  \ javaapi#method(0,1,'capacity(', ')', 'int'),
  \ javaapi#method(0,1,'position(', ')', 'int'),
  \ javaapi#method(0,1,'position(', 'int)', 'Buffer'),
  \ javaapi#method(0,1,'limit(', ')', 'int'),
  \ javaapi#method(0,1,'limit(', 'int)', 'Buffer'),
  \ javaapi#method(0,1,'mark(', ')', 'Buffer'),
  \ javaapi#method(0,1,'reset(', ')', 'Buffer'),
  \ javaapi#method(0,1,'clear(', ')', 'Buffer'),
  \ javaapi#method(0,1,'flip(', ')', 'Buffer'),
  \ javaapi#method(0,1,'rewind(', ')', 'Buffer'),
  \ javaapi#method(0,1,'remaining(', ')', 'int'),
  \ javaapi#method(0,1,'hasRemaining(', ')', 'boolean'),
  \ javaapi#method(0,1,'isReadOnly(', ')', 'boolean'),
  \ javaapi#method(0,1,'hasArray(', ')', 'boolean'),
  \ javaapi#method(0,1,'array(', ')', 'Object'),
  \ javaapi#method(0,1,'arrayOffset(', ')', 'int'),
  \ javaapi#method(0,1,'isDirect(', ')', 'boolean'),
  \ ])

