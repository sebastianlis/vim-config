call javaapi#namespace('java.awt.image')

call javaapi#class('AffineTransformOp', 'RasterOp', [
  \ javaapi#field(1,1,'TYPE_NEAREST_NEIGHBOR', 'int'),
  \ javaapi#field(1,1,'TYPE_BILINEAR', 'int'),
  \ javaapi#field(1,1,'TYPE_BICUBIC', 'int'),
  \ javaapi#method(0,1,'AffineTransformOp(', 'AffineTransform, RenderingHints)', ''),
  \ javaapi#method(0,1,'AffineTransformOp(', 'AffineTransform, int)', ''),
  \ javaapi#method(0,1,'getInterpolationType(', ')', 'int'),
  \ javaapi#method(0,1,'filter(', 'BufferedImage, BufferedImage)', 'BufferedImage'),
  \ javaapi#method(0,1,'filter(', 'Raster, WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getBounds2D(', 'BufferedImage)', 'Rectangle2D'),
  \ javaapi#method(0,1,'getBounds2D(', 'Raster)', 'Rectangle2D'),
  \ javaapi#method(0,1,'createCompatibleDestImage(', 'BufferedImage, ColorModel)', 'BufferedImage'),
  \ javaapi#method(0,1,'createCompatibleDestRaster(', 'Raster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getTransform(', ')', 'AffineTransform'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('AreaAveragingScaleFilter', 'ReplicateScaleFilter', [
  \ javaapi#method(0,1,'AreaAveragingScaleFilter(', 'int, int)', ''),
  \ javaapi#method(0,1,'setHints(', 'int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ ])

call javaapi#class('BandCombineOp', 'RasterOp', [
  \ javaapi#method(0,1,'BandCombineOp(', 'float[][], RenderingHints)', ''),
  \ javaapi#method(0,1,'getMatrix(', ')', 'float[]'),
  \ javaapi#method(0,1,'filter(', 'Raster, WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getBounds2D(', 'Raster)', 'Rectangle2D'),
  \ javaapi#method(0,1,'createCompatibleDestRaster(', 'Raster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('BandedSampleModel', 'ComponentSampleModel', [
  \ javaapi#method(0,1,'BandedSampleModel(', 'int, int, int, int)', ''),
  \ javaapi#method(0,1,'BandedSampleModel(', 'int, int, int, int, int[], int[])', ''),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'createSubsetSampleModel(', 'int[])', 'SampleModel'),
  \ javaapi#method(0,1,'createDataBuffer(', ')', 'DataBuffer'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, Object, DataBuffer)', 'Object'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSample(', 'int, int, int, DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSampleFloat(', 'int, int, int, DataBuffer)', 'float'),
  \ javaapi#method(0,1,'getSampleDouble(', 'int, int, int, DataBuffer)', 'double'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, Object, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, int, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, float, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, double, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ ])

call javaapi#class('BufferedImageFilter', 'ImageFilter', [
  \ javaapi#method(0,1,'BufferedImageFilter(', 'BufferedImageOp)', ''),
  \ javaapi#method(0,1,'getBufferedImageOp(', ')', 'BufferedImageOp'),
  \ javaapi#method(0,1,'setDimensions(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setColorModel(', 'ColorModel)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ javaapi#method(0,1,'imageComplete(', 'int)', 'void'),
  \ ])

call javaapi#interface('BufferedImageOp', '', [
  \ javaapi#method(0,1,'filter(', 'BufferedImage, BufferedImage)', 'BufferedImage'),
  \ javaapi#method(0,1,'getBounds2D(', 'BufferedImage)', 'Rectangle2D'),
  \ javaapi#method(0,1,'createCompatibleDestImage(', 'BufferedImage, ColorModel)', 'BufferedImage'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('ByteLookupTable', 'LookupTable', [
  \ javaapi#method(0,1,'ByteLookupTable(', 'int, byte[][])', ''),
  \ javaapi#method(0,1,'ByteLookupTable(', 'int, byte[])', ''),
  \ javaapi#method(0,1,'getTable(', ')', 'byte[]'),
  \ javaapi#method(0,1,'lookupPixel(', 'int[], int[])', 'int'),
  \ javaapi#method(0,1,'lookupPixel(', 'byte[], byte[])', 'byte'),
  \ ])

call javaapi#class('ColorConvertOp', 'RasterOp', [
  \ javaapi#method(0,1,'ColorConvertOp(', 'RenderingHints)', ''),
  \ javaapi#method(0,1,'ColorConvertOp(', 'ColorSpace, RenderingHints)', ''),
  \ javaapi#method(0,1,'ColorConvertOp(', 'ColorSpace, ColorSpace, RenderingHints)', ''),
  \ javaapi#method(0,1,'ColorConvertOp(', 'ICC_Profile[], RenderingHints)', ''),
  \ javaapi#method(0,1,'getICC_Profiles(', ')', 'ICC_Profile'),
  \ javaapi#method(0,1,'filter(', 'BufferedImage, BufferedImage)', 'BufferedImage'),
  \ javaapi#method(0,1,'filter(', 'Raster, WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getBounds2D(', 'BufferedImage)', 'Rectangle2D'),
  \ javaapi#method(0,1,'getBounds2D(', 'Raster)', 'Rectangle2D'),
  \ javaapi#method(0,1,'createCompatibleDestImage(', 'BufferedImage, ColorModel)', 'BufferedImage'),
  \ javaapi#method(0,1,'createCompatibleDestRaster(', 'Raster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('ComponentColorModel', 'ColorModel', [
  \ javaapi#method(0,1,'ComponentColorModel(', 'ColorSpace, int[], boolean, boolean, int, int)', ''),
  \ javaapi#method(0,1,'ComponentColorModel(', 'ColorSpace, boolean, boolean, int, int)', ''),
  \ javaapi#method(0,1,'getRed(', 'int)', 'int'),
  \ javaapi#method(0,1,'getGreen(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBlue(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAlpha(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRed(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getGreen(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getBlue(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getAlpha(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int, Object)', 'Object'),
  \ javaapi#method(0,1,'getComponents(', 'int, int[], int)', 'int'),
  \ javaapi#method(0,1,'getComponents(', 'Object, int[], int)', 'int'),
  \ javaapi#method(0,1,'getUnnormalizedComponents(', 'float[], int, int[], int)', 'int'),
  \ javaapi#method(0,1,'getNormalizedComponents(', 'int[], int, float[], int)', 'float'),
  \ javaapi#method(0,1,'getDataElement(', 'int[], int)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int[], int, Object)', 'Object'),
  \ javaapi#method(0,1,'getDataElement(', 'float[], int)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'float[], int, Object)', 'Object'),
  \ javaapi#method(0,1,'getNormalizedComponents(', 'Object, float[], int)', 'float'),
  \ javaapi#method(0,1,'coerceData(', 'WritableRaster, boolean)', 'ColorModel'),
  \ javaapi#method(0,1,'isCompatibleRaster(', 'Raster)', 'boolean'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'isCompatibleSampleModel(', 'SampleModel)', 'boolean'),
  \ javaapi#method(0,1,'getAlphaRaster(', 'WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('ConvolveOp', 'RasterOp', [
  \ javaapi#field(1,1,'EDGE_ZERO_FILL', 'int'),
  \ javaapi#field(1,1,'EDGE_NO_OP', 'int'),
  \ javaapi#method(0,1,'ConvolveOp(', 'Kernel, int, RenderingHints)', ''),
  \ javaapi#method(0,1,'ConvolveOp(', 'Kernel)', ''),
  \ javaapi#method(0,1,'getEdgeCondition(', ')', 'int'),
  \ javaapi#method(0,1,'getKernel(', ')', 'Kernel'),
  \ javaapi#method(0,1,'filter(', 'BufferedImage, BufferedImage)', 'BufferedImage'),
  \ javaapi#method(0,1,'filter(', 'Raster, WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'createCompatibleDestImage(', 'BufferedImage, ColorModel)', 'BufferedImage'),
  \ javaapi#method(0,1,'createCompatibleDestRaster(', 'Raster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getBounds2D(', 'BufferedImage)', 'Rectangle2D'),
  \ javaapi#method(0,1,'getBounds2D(', 'Raster)', 'Rectangle2D'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('CropImageFilter', 'ImageFilter', [
  \ javaapi#method(0,1,'CropImageFilter(', 'int, int, int, int)', ''),
  \ javaapi#method(0,1,'setProperties(', 'Hashtable<?, ?>)', 'void'),
  \ javaapi#method(0,1,'setDimensions(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ ])

call javaapi#class('DataBufferDouble', 'DataBuffer', [
  \ javaapi#method(0,1,'DataBufferDouble(', 'int)', ''),
  \ javaapi#method(0,1,'DataBufferDouble(', 'int, int)', ''),
  \ javaapi#method(0,1,'DataBufferDouble(', 'double[], int)', ''),
  \ javaapi#method(0,1,'DataBufferDouble(', 'double[], int, int)', ''),
  \ javaapi#method(0,1,'DataBufferDouble(', 'double[][], int)', ''),
  \ javaapi#method(0,1,'DataBufferDouble(', 'double[][], int, int[])', ''),
  \ javaapi#method(0,1,'getData(', ')', 'double'),
  \ javaapi#method(0,1,'getData(', 'int)', 'double'),
  \ javaapi#method(0,1,'getBankData(', ')', 'double[]'),
  \ javaapi#method(0,1,'getElem(', 'int)', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'setElem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setElem(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'getElemFloat(', 'int)', 'float'),
  \ javaapi#method(0,1,'getElemFloat(', 'int, int)', 'float'),
  \ javaapi#method(0,1,'setElemFloat(', 'int, float)', 'void'),
  \ javaapi#method(0,1,'setElemFloat(', 'int, int, float)', 'void'),
  \ javaapi#method(0,1,'getElemDouble(', 'int)', 'double'),
  \ javaapi#method(0,1,'getElemDouble(', 'int, int)', 'double'),
  \ javaapi#method(0,1,'setElemDouble(', 'int, double)', 'void'),
  \ javaapi#method(0,1,'setElemDouble(', 'int, int, double)', 'void'),
  \ ])

call javaapi#class('DataBufferFloat', 'DataBuffer', [
  \ javaapi#method(0,1,'DataBufferFloat(', 'int)', ''),
  \ javaapi#method(0,1,'DataBufferFloat(', 'int, int)', ''),
  \ javaapi#method(0,1,'DataBufferFloat(', 'float[], int)', ''),
  \ javaapi#method(0,1,'DataBufferFloat(', 'float[], int, int)', ''),
  \ javaapi#method(0,1,'DataBufferFloat(', 'float[][], int)', ''),
  \ javaapi#method(0,1,'DataBufferFloat(', 'float[][], int, int[])', ''),
  \ javaapi#method(0,1,'getData(', ')', 'float'),
  \ javaapi#method(0,1,'getData(', 'int)', 'float'),
  \ javaapi#method(0,1,'getBankData(', ')', 'float[]'),
  \ javaapi#method(0,1,'getElem(', 'int)', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'setElem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setElem(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'getElemFloat(', 'int)', 'float'),
  \ javaapi#method(0,1,'getElemFloat(', 'int, int)', 'float'),
  \ javaapi#method(0,1,'setElemFloat(', 'int, float)', 'void'),
  \ javaapi#method(0,1,'setElemFloat(', 'int, int, float)', 'void'),
  \ javaapi#method(0,1,'getElemDouble(', 'int)', 'double'),
  \ javaapi#method(0,1,'getElemDouble(', 'int, int)', 'double'),
  \ javaapi#method(0,1,'setElemDouble(', 'int, double)', 'void'),
  \ javaapi#method(0,1,'setElemDouble(', 'int, int, double)', 'void'),
  \ ])

call javaapi#class('DataBufferShort', 'DataBuffer', [
  \ javaapi#method(0,1,'DataBufferShort(', 'int)', ''),
  \ javaapi#method(0,1,'DataBufferShort(', 'int, int)', ''),
  \ javaapi#method(0,1,'DataBufferShort(', 'short[], int)', ''),
  \ javaapi#method(0,1,'DataBufferShort(', 'short[], int, int)', ''),
  \ javaapi#method(0,1,'DataBufferShort(', 'short[][], int)', ''),
  \ javaapi#method(0,1,'DataBufferShort(', 'short[][], int, int[])', ''),
  \ javaapi#method(0,1,'getData(', ')', 'short'),
  \ javaapi#method(0,1,'getData(', 'int)', 'short'),
  \ javaapi#method(0,1,'getBankData(', ')', 'short[]'),
  \ javaapi#method(0,1,'getElem(', 'int)', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'setElem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setElem(', 'int, int, int)', 'void'),
  \ ])

call javaapi#class('DataBufferUShort', 'DataBuffer', [
  \ javaapi#method(0,1,'DataBufferUShort(', 'int)', ''),
  \ javaapi#method(0,1,'DataBufferUShort(', 'int, int)', ''),
  \ javaapi#method(0,1,'DataBufferUShort(', 'short[], int)', ''),
  \ javaapi#method(0,1,'DataBufferUShort(', 'short[], int, int)', ''),
  \ javaapi#method(0,1,'DataBufferUShort(', 'short[][], int)', ''),
  \ javaapi#method(0,1,'DataBufferUShort(', 'short[][], int, int[])', ''),
  \ javaapi#method(0,1,'getData(', ')', 'short'),
  \ javaapi#method(0,1,'getData(', 'int)', 'short'),
  \ javaapi#method(0,1,'getBankData(', ')', 'short[]'),
  \ javaapi#method(0,1,'getElem(', 'int)', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'setElem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setElem(', 'int, int, int)', 'void'),
  \ ])

call javaapi#class('ImagingOpException', 'RuntimeException', [
  \ javaapi#method(0,1,'ImagingOpException(', 'String)', ''),
  \ ])

call javaapi#class('Kernel', 'Cloneable', [
  \ javaapi#method(0,1,'Kernel(', 'int, int, float[])', ''),
  \ javaapi#method(0,1,'getXOrigin(', ')', 'int'),
  \ javaapi#method(0,1,'getYOrigin(', ')', 'int'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getKernelData(', 'float[])', 'float'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('LookupOp', 'RasterOp', [
  \ javaapi#method(0,1,'LookupOp(', 'LookupTable, RenderingHints)', ''),
  \ javaapi#method(0,1,'getTable(', ')', 'LookupTable'),
  \ javaapi#method(0,1,'filter(', 'BufferedImage, BufferedImage)', 'BufferedImage'),
  \ javaapi#method(0,1,'filter(', 'Raster, WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getBounds2D(', 'BufferedImage)', 'Rectangle2D'),
  \ javaapi#method(0,1,'getBounds2D(', 'Raster)', 'Rectangle2D'),
  \ javaapi#method(0,1,'createCompatibleDestImage(', 'BufferedImage, ColorModel)', 'BufferedImage'),
  \ javaapi#method(0,1,'createCompatibleDestRaster(', 'Raster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('LookupTable', '', [
  \ javaapi#method(0,0,'LookupTable(', 'int, int)', ''),
  \ javaapi#method(0,1,'getNumComponents(', ')', 'int'),
  \ javaapi#method(0,1,'getOffset(', ')', 'int'),
  \ javaapi#method(0,1,'lookupPixel(', 'int[], int[])', 'int'),
  \ ])

call javaapi#class('MemoryImageSource', 'ImageProducer', [
  \ javaapi#method(0,1,'MemoryImageSource(', 'int, int, ColorModel, byte[], int, int)', ''),
  \ javaapi#method(0,1,'MemoryImageSource(', 'int, int, ColorModel, byte[], int, int, Hashtable<?, ?>)', ''),
  \ javaapi#method(0,1,'MemoryImageSource(', 'int, int, ColorModel, int[], int, int)', ''),
  \ javaapi#method(0,1,'MemoryImageSource(', 'int, int, ColorModel, int[], int, int, Hashtable<?, ?>)', ''),
  \ javaapi#method(0,1,'MemoryImageSource(', 'int, int, int[], int, int)', ''),
  \ javaapi#method(0,1,'MemoryImageSource(', 'int, int, int[], int, int, Hashtable<?, ?>)', ''),
  \ javaapi#method(0,1,'addConsumer(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'isConsumer(', 'ImageConsumer)', 'boolean'),
  \ javaapi#method(0,1,'removeConsumer(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'startProduction(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'requestTopDownLeftRightResend(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'setAnimated(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'setFullBufferUpdates(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'newPixels(', ')', 'void'),
  \ javaapi#method(0,1,'newPixels(', 'int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'newPixels(', 'int, int, int, int, boolean)', 'void'),
  \ javaapi#method(0,1,'newPixels(', 'byte[], ColorModel, int, int)', 'void'),
  \ javaapi#method(0,1,'newPixels(', 'int[], ColorModel, int, int)', 'void'),
  \ ])

call javaapi#class('MultiPixelPackedSampleModel', 'SampleModel', [
  \ javaapi#method(0,1,'MultiPixelPackedSampleModel(', 'int, int, int, int)', ''),
  \ javaapi#method(0,1,'MultiPixelPackedSampleModel(', 'int, int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'createDataBuffer(', ')', 'DataBuffer'),
  \ javaapi#method(0,1,'getNumDataElements(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleSize(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleSize(', 'int)', 'int'),
  \ javaapi#method(0,1,'getOffset(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getBitOffset(', 'int)', 'int'),
  \ javaapi#method(0,1,'getScanlineStride(', ')', 'int'),
  \ javaapi#method(0,1,'getPixelBitStride(', ')', 'int'),
  \ javaapi#method(0,1,'getDataBitOffset(', ')', 'int'),
  \ javaapi#method(0,1,'getTransferType(', ')', 'int'),
  \ javaapi#method(0,1,'createSubsetSampleModel(', 'int[])', 'SampleModel'),
  \ javaapi#method(0,1,'getSample(', 'int, int, int, DataBuffer)', 'int'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, int, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, Object, DataBuffer)', 'Object'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, Object, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ ])

call javaapi#class('PixelGrabber', 'ImageConsumer', [
  \ javaapi#method(0,1,'PixelGrabber(', 'Image, int, int, int, int, int[], int, int)', ''),
  \ javaapi#method(0,1,'PixelGrabber(', 'ImageProducer, int, int, int, int, int[], int, int)', ''),
  \ javaapi#method(0,1,'PixelGrabber(', 'Image, int, int, int, int, boolean)', ''),
  \ javaapi#method(0,1,'startGrabbing(', ')', 'void'),
  \ javaapi#method(0,1,'abortGrabbing(', ')', 'void'),
  \ javaapi#method(0,1,'grabPixels(', ') throws InterruptedException', 'boolean'),
  \ javaapi#method(0,1,'grabPixels(', 'long) throws InterruptedException', 'boolean'),
  \ javaapi#method(0,1,'getStatus(', ')', 'int'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getPixels(', ')', 'Object'),
  \ javaapi#method(0,1,'getColorModel(', ')', 'ColorModel'),
  \ javaapi#method(0,1,'setDimensions(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setHints(', 'int)', 'void'),
  \ javaapi#method(0,1,'setProperties(', 'Hashtable<?, ?>)', 'void'),
  \ javaapi#method(0,1,'setColorModel(', 'ColorModel)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ javaapi#method(0,1,'imageComplete(', 'int)', 'void'),
  \ javaapi#method(0,1,'status(', ')', 'int'),
  \ ])

call javaapi#class('RasterFormatException', 'RuntimeException', [
  \ javaapi#method(0,1,'RasterFormatException(', 'String)', ''),
  \ ])

call javaapi#interface('RasterOp', '', [
  \ javaapi#method(0,1,'filter(', 'Raster, WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getBounds2D(', 'Raster)', 'Rectangle2D'),
  \ javaapi#method(0,1,'createCompatibleDestRaster(', 'Raster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('ReplicateScaleFilter', 'ImageFilter', [
  \ javaapi#field(0,0,'srcWidth', 'int'),
  \ javaapi#field(0,0,'srcHeight', 'int'),
  \ javaapi#field(0,0,'destWidth', 'int'),
  \ javaapi#field(0,0,'destHeight', 'int'),
  \ javaapi#field(0,0,'srcrows', 'int'),
  \ javaapi#field(0,0,'srccols', 'int'),
  \ javaapi#field(0,0,'outpixbuf', 'Object'),
  \ javaapi#method(0,1,'ReplicateScaleFilter(', 'int, int)', ''),
  \ javaapi#method(0,1,'setProperties(', 'Hashtable<?, ?>)', 'void'),
  \ javaapi#method(0,1,'setDimensions(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ ])

call javaapi#class('RescaleOp', 'RasterOp', [
  \ javaapi#method(0,1,'RescaleOp(', 'float[], float[], RenderingHints)', ''),
  \ javaapi#method(0,1,'RescaleOp(', 'float, float, RenderingHints)', ''),
  \ javaapi#method(0,1,'getScaleFactors(', 'float[])', 'float'),
  \ javaapi#method(0,1,'getOffsets(', 'float[])', 'float'),
  \ javaapi#method(0,1,'getNumFactors(', ')', 'int'),
  \ javaapi#method(0,1,'filter(', 'BufferedImage, BufferedImage)', 'BufferedImage'),
  \ javaapi#method(0,1,'filter(', 'Raster, WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getBounds2D(', 'BufferedImage)', 'Rectangle2D'),
  \ javaapi#method(0,1,'getBounds2D(', 'Raster)', 'Rectangle2D'),
  \ javaapi#method(0,1,'createCompatibleDestImage(', 'BufferedImage, ColorModel)', 'BufferedImage'),
  \ javaapi#method(0,1,'createCompatibleDestRaster(', 'Raster)', 'WritableRaster'),
  \ javaapi#method(0,1,'getPoint2D(', 'Point2D, Point2D)', 'Point2D'),
  \ javaapi#method(0,1,'getRenderingHints(', ')', 'RenderingHints'),
  \ ])

call javaapi#class('ShortLookupTable', 'LookupTable', [
  \ javaapi#method(0,1,'ShortLookupTable(', 'int, short[][])', ''),
  \ javaapi#method(0,1,'ShortLookupTable(', 'int, short[])', ''),
  \ javaapi#method(0,1,'getTable(', ')', 'short[]'),
  \ javaapi#method(0,1,'lookupPixel(', 'int[], int[])', 'int'),
  \ javaapi#method(0,1,'lookupPixel(', 'short[], short[])', 'short'),
  \ ])

call javaapi#interface('TileObserver', '', [
  \ javaapi#method(0,1,'tileUpdate(', 'WritableRenderedImage, int, int, boolean)', 'void'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#class('FilteredImageSource', 'ImageProducer', [
  \ javaapi#method(0,1,'FilteredImageSource(', 'ImageProducer, ImageFilter)', ''),
  \ javaapi#method(0,1,'addConsumer(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'isConsumer(', 'ImageConsumer)', 'boolean'),
  \ javaapi#method(0,1,'removeConsumer(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'startProduction(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'requestTopDownLeftRightResend(', 'ImageConsumer)', 'void'),
  \ ])

call javaapi#class('ImageFilter', 'Cloneable', [
  \ javaapi#field(0,0,'consumer', 'ImageConsumer'),
  \ javaapi#method(0,1,'ImageFilter(', ')', ''),
  \ javaapi#method(0,1,'getFilterInstance(', 'ImageConsumer)', 'ImageFilter'),
  \ javaapi#method(0,1,'setDimensions(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setProperties(', 'Hashtable<?, ?>)', 'void'),
  \ javaapi#method(0,1,'setColorModel(', 'ColorModel)', 'void'),
  \ javaapi#method(0,1,'setHints(', 'int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ javaapi#method(0,1,'imageComplete(', 'int)', 'void'),
  \ javaapi#method(0,1,'resendTopDownLeftRight(', 'ImageProducer)', 'void'),
  \ javaapi#method(0,1,'clone(', ')', 'Object'),
  \ ])

call javaapi#class('RGBImageFilter', 'ImageFilter', [
  \ javaapi#field(0,0,'origmodel', 'ColorModel'),
  \ javaapi#field(0,0,'newmodel', 'ColorModel'),
  \ javaapi#field(0,0,'canFilterIndexColorModel', 'boolean'),
  \ javaapi#method(0,1,'RGBImageFilter(', ')', ''),
  \ javaapi#method(0,1,'setColorModel(', 'ColorModel)', 'void'),
  \ javaapi#method(0,1,'substituteColorModel(', 'ColorModel, ColorModel)', 'void'),
  \ javaapi#method(0,1,'filterIndexColorModel(', 'IndexColorModel)', 'IndexColorModel'),
  \ javaapi#method(0,1,'filterRGBPixels(', 'int, int, int, int, int[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ javaapi#method(0,1,'filterRGB(', 'int, int, int)', 'int'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#class('SinglePixelPackedSampleModel', 'SampleModel', [
  \ javaapi#method(0,1,'SinglePixelPackedSampleModel(', 'int, int, int, int[])', ''),
  \ javaapi#method(0,1,'SinglePixelPackedSampleModel(', 'int, int, int, int, int[])', ''),
  \ javaapi#method(0,1,'getNumDataElements(', ')', 'int'),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'createDataBuffer(', ')', 'DataBuffer'),
  \ javaapi#method(0,1,'getSampleSize(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleSize(', 'int)', 'int'),
  \ javaapi#method(0,1,'getOffset(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getBitOffsets(', ')', 'int'),
  \ javaapi#method(0,1,'getBitMasks(', ')', 'int'),
  \ javaapi#method(0,1,'getScanlineStride(', ')', 'int'),
  \ javaapi#method(0,1,'createSubsetSampleModel(', 'int[])', 'SampleModel'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, Object, DataBuffer)', 'Object'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSample(', 'int, int, int, DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, Object, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, int, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ ])

call javaapi#class('DataBufferInt', 'DataBuffer', [
  \ javaapi#method(0,1,'DataBufferInt(', 'int)', ''),
  \ javaapi#method(0,1,'DataBufferInt(', 'int, int)', ''),
  \ javaapi#method(0,1,'DataBufferInt(', 'int[], int)', ''),
  \ javaapi#method(0,1,'DataBufferInt(', 'int[], int, int)', ''),
  \ javaapi#method(0,1,'DataBufferInt(', 'int[][], int)', ''),
  \ javaapi#method(0,1,'DataBufferInt(', 'int[][], int, int[])', ''),
  \ javaapi#method(0,1,'getData(', ')', 'int'),
  \ javaapi#method(0,1,'getData(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBankData(', ')', 'int[]'),
  \ javaapi#method(0,1,'getElem(', 'int)', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'setElem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setElem(', 'int, int, int)', 'void'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#interface('RenderedImage', '', [
  \ javaapi#method(0,1,'getSources(', ')', 'Vector'),
  \ javaapi#method(0,1,'getProperty(', 'String)', 'Object'),
  \ javaapi#method(0,1,'getPropertyNames(', ')', 'String'),
  \ javaapi#method(0,1,'getColorModel(', ')', 'ColorModel'),
  \ javaapi#method(0,1,'getSampleModel(', ')', 'SampleModel'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getMinX(', ')', 'int'),
  \ javaapi#method(0,1,'getMinY(', ')', 'int'),
  \ javaapi#method(0,1,'getNumXTiles(', ')', 'int'),
  \ javaapi#method(0,1,'getNumYTiles(', ')', 'int'),
  \ javaapi#method(0,1,'getMinTileX(', ')', 'int'),
  \ javaapi#method(0,1,'getMinTileY(', ')', 'int'),
  \ javaapi#method(0,1,'getTileWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getTileHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getTileGridXOffset(', ')', 'int'),
  \ javaapi#method(0,1,'getTileGridYOffset(', ')', 'int'),
  \ javaapi#method(0,1,'getTile(', 'int, int)', 'Raster'),
  \ javaapi#method(0,1,'getData(', ')', 'Raster'),
  \ javaapi#method(0,1,'getData(', 'Rectangle)', 'Raster'),
  \ javaapi#method(0,1,'copyData(', 'WritableRaster)', 'WritableRaster'),
  \ ])

call javaapi#interface('WritableRenderedImage', 'RenderedImage', [
  \ javaapi#method(0,1,'addTileObserver(', 'TileObserver)', 'void'),
  \ javaapi#method(0,1,'removeTileObserver(', 'TileObserver)', 'void'),
  \ javaapi#method(0,1,'getWritableTile(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'releaseWritableTile(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'isTileWritable(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'getWritableTileIndices(', ')', 'Point'),
  \ javaapi#method(0,1,'hasTileWriters(', ')', 'boolean'),
  \ javaapi#method(0,1,'setData(', 'Raster)', 'void'),
  \ ])

call javaapi#class('BufferedImage', 'Image', [
  \ javaapi#field(1,1,'TYPE_CUSTOM', 'int'),
  \ javaapi#field(1,1,'TYPE_INT_RGB', 'int'),
  \ javaapi#field(1,1,'TYPE_INT_ARGB', 'int'),
  \ javaapi#field(1,1,'TYPE_INT_ARGB_PRE', 'int'),
  \ javaapi#field(1,1,'TYPE_INT_BGR', 'int'),
  \ javaapi#field(1,1,'TYPE_3BYTE_BGR', 'int'),
  \ javaapi#field(1,1,'TYPE_4BYTE_ABGR', 'int'),
  \ javaapi#field(1,1,'TYPE_4BYTE_ABGR_PRE', 'int'),
  \ javaapi#field(1,1,'TYPE_USHORT_565_RGB', 'int'),
  \ javaapi#field(1,1,'TYPE_USHORT_555_RGB', 'int'),
  \ javaapi#field(1,1,'TYPE_BYTE_GRAY', 'int'),
  \ javaapi#field(1,1,'TYPE_USHORT_GRAY', 'int'),
  \ javaapi#field(1,1,'TYPE_BYTE_BINARY', 'int'),
  \ javaapi#field(1,1,'TYPE_BYTE_INDEXED', 'int'),
  \ javaapi#method(0,1,'BufferedImage(', 'int, int, int)', ''),
  \ javaapi#method(0,1,'BufferedImage(', 'int, int, int, IndexColorModel)', ''),
  \ javaapi#method(0,1,'BufferedImage(', 'ColorModel, WritableRaster, boolean, Hashtable<?, ?>)', ''),
  \ javaapi#method(0,1,'getType(', ')', 'int'),
  \ javaapi#method(0,1,'getColorModel(', ')', 'ColorModel'),
  \ javaapi#method(0,1,'getRaster(', ')', 'WritableRaster'),
  \ javaapi#method(0,1,'getAlphaRaster(', ')', 'WritableRaster'),
  \ javaapi#method(0,1,'getRGB(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'int, int, int, int, int[], int, int)', 'int'),
  \ javaapi#method(0,1,'setRGB(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'setRGB(', 'int, int, int, int, int[], int, int)', 'void'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getWidth(', 'ImageObserver)', 'int'),
  \ javaapi#method(0,1,'getHeight(', 'ImageObserver)', 'int'),
  \ javaapi#method(0,1,'getSource(', ')', 'ImageProducer'),
  \ javaapi#method(0,1,'getProperty(', 'String, ImageObserver)', 'Object'),
  \ javaapi#method(0,1,'getProperty(', 'String)', 'Object'),
  \ javaapi#method(0,1,'getGraphics(', ')', 'Graphics'),
  \ javaapi#method(0,1,'createGraphics(', ')', 'Graphics2D'),
  \ javaapi#method(0,1,'getSubimage(', 'int, int, int, int)', 'BufferedImage'),
  \ javaapi#method(0,1,'isAlphaPremultiplied(', ')', 'boolean'),
  \ javaapi#method(0,1,'coerceData(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'getSources(', ')', 'Vector'),
  \ javaapi#method(0,1,'getPropertyNames(', ')', 'String'),
  \ javaapi#method(0,1,'getMinX(', ')', 'int'),
  \ javaapi#method(0,1,'getMinY(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleModel(', ')', 'SampleModel'),
  \ javaapi#method(0,1,'getNumXTiles(', ')', 'int'),
  \ javaapi#method(0,1,'getNumYTiles(', ')', 'int'),
  \ javaapi#method(0,1,'getMinTileX(', ')', 'int'),
  \ javaapi#method(0,1,'getMinTileY(', ')', 'int'),
  \ javaapi#method(0,1,'getTileWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getTileHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getTileGridXOffset(', ')', 'int'),
  \ javaapi#method(0,1,'getTileGridYOffset(', ')', 'int'),
  \ javaapi#method(0,1,'getTile(', 'int, int)', 'Raster'),
  \ javaapi#method(0,1,'getData(', ')', 'Raster'),
  \ javaapi#method(0,1,'getData(', 'Rectangle)', 'Raster'),
  \ javaapi#method(0,1,'copyData(', 'WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'setData(', 'Raster)', 'void'),
  \ javaapi#method(0,1,'addTileObserver(', 'TileObserver)', 'void'),
  \ javaapi#method(0,1,'removeTileObserver(', 'TileObserver)', 'void'),
  \ javaapi#method(0,1,'isTileWritable(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'getWritableTileIndices(', ')', 'Point'),
  \ javaapi#method(0,1,'hasTileWriters(', ')', 'boolean'),
  \ javaapi#method(0,1,'getWritableTile(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'releaseWritableTile(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'getTransparency(', ')', 'int'),
  \ ])

call javaapi#class('WritableRaster', 'Raster', [
  \ javaapi#method(0,0,'WritableRaster(', 'SampleModel, Point)', ''),
  \ javaapi#method(0,0,'WritableRaster(', 'SampleModel, DataBuffer, Point)', ''),
  \ javaapi#method(0,0,'WritableRaster(', 'SampleModel, DataBuffer, Rectangle, Point, WritableRaster)', ''),
  \ javaapi#method(0,1,'getWritableParent(', ')', 'WritableRaster'),
  \ javaapi#method(0,1,'createWritableTranslatedChild(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'createWritableChild(', 'int, int, int, int, int, int, int[])', 'WritableRaster'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, Object)', 'void'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, Raster)', 'void'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, int, int, Object)', 'void'),
  \ javaapi#method(0,1,'setRect(', 'Raster)', 'void'),
  \ javaapi#method(0,1,'setRect(', 'int, int, Raster)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, int[])', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, float[])', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, double[])', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, int[])', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, float[])', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, double[])', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, int)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, float)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, double)', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, int[])', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, float[])', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, double[])', 'void'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#class('SampleModel', '', [
  \ javaapi#field(0,0,'width', 'int'),
  \ javaapi#field(0,0,'height', 'int'),
  \ javaapi#field(0,0,'numBands', 'int'),
  \ javaapi#field(0,0,'dataType', 'int'),
  \ javaapi#method(0,1,'SampleModel(', 'int, int, int, int)', ''),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getNumBands(', ')', 'int'),
  \ javaapi#method(0,1,'getNumDataElements(', ')', 'int'),
  \ javaapi#method(0,1,'getDataType(', ')', 'int'),
  \ javaapi#method(0,1,'getTransferType(', ')', 'int'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, Object, DataBuffer)', 'Object'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, int, int, Object, DataBuffer)', 'Object'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, Object, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, int, int, Object, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, float[], DataBuffer)', 'float'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, double[], DataBuffer)', 'double'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, float[], DataBuffer)', 'float'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, double[], DataBuffer)', 'double'),
  \ javaapi#method(0,1,'getSample(', 'int, int, int, DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSampleFloat(', 'int, int, int, DataBuffer)', 'float'),
  \ javaapi#method(0,1,'getSampleDouble(', 'int, int, int, DataBuffer)', 'double'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, float[], DataBuffer)', 'float'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, double[], DataBuffer)', 'double'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, float[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, double[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, float[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, double[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, int, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, float, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, double, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, float[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, double[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'createSubsetSampleModel(', 'int[])', 'SampleModel'),
  \ javaapi#method(0,1,'createDataBuffer(', ')', 'DataBuffer'),
  \ javaapi#method(0,1,'getSampleSize(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleSize(', 'int)', 'int'),
  \ ])

call javaapi#class('ComponentSampleModel', 'SampleModel', [
  \ javaapi#field(0,0,'bandOffsets', 'int'),
  \ javaapi#field(0,0,'bankIndices', 'int'),
  \ javaapi#field(0,0,'numBands', 'int'),
  \ javaapi#field(0,0,'numBanks', 'int'),
  \ javaapi#field(0,0,'scanlineStride', 'int'),
  \ javaapi#field(0,0,'pixelStride', 'int'),
  \ javaapi#method(0,1,'ComponentSampleModel(', 'int, int, int, int, int, int[])', ''),
  \ javaapi#method(0,1,'ComponentSampleModel(', 'int, int, int, int, int, int[], int[])', ''),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'createSubsetSampleModel(', 'int[])', 'SampleModel'),
  \ javaapi#method(0,1,'createDataBuffer(', ')', 'DataBuffer'),
  \ javaapi#method(0,1,'getOffset(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getOffset(', 'int, int, int)', 'int'),
  \ javaapi#method(0,1,'getSampleSize(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleSize(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBankIndices(', ')', 'int'),
  \ javaapi#method(0,1,'getBandOffsets(', ')', 'int'),
  \ javaapi#method(0,1,'getScanlineStride(', ')', 'int'),
  \ javaapi#method(0,1,'getPixelStride(', ')', 'int'),
  \ javaapi#method(0,1,'getNumDataElements(', ')', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, Object, DataBuffer)', 'Object'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSample(', 'int, int, int, DataBuffer)', 'int'),
  \ javaapi#method(0,1,'getSampleFloat(', 'int, int, int, DataBuffer)', 'float'),
  \ javaapi#method(0,1,'getSampleDouble(', 'int, int, int, DataBuffer)', 'double'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'int'),
  \ javaapi#method(0,1,'setDataElements(', 'int, int, Object, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixel(', 'int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, int, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, float, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSample(', 'int, int, int, double, DataBuffer)', 'void'),
  \ javaapi#method(0,1,'setSamples(', 'int, int, int, int, int, int[], DataBuffer)', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ ])

call javaapi#class('PixelInterleavedSampleModel', 'ComponentSampleModel', [
  \ javaapi#method(0,1,'PixelInterleavedSampleModel(', 'int, int, int, int, int, int[])', ''),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'createSubsetSampleModel(', 'int[])', 'SampleModel'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ ])

call javaapi#class('DataBuffer', '', [
  \ javaapi#field(1,1,'TYPE_BYTE', 'int'),
  \ javaapi#field(1,1,'TYPE_USHORT', 'int'),
  \ javaapi#field(1,1,'TYPE_SHORT', 'int'),
  \ javaapi#field(1,1,'TYPE_INT', 'int'),
  \ javaapi#field(1,1,'TYPE_FLOAT', 'int'),
  \ javaapi#field(1,1,'TYPE_DOUBLE', 'int'),
  \ javaapi#field(1,1,'TYPE_UNDEFINED', 'int'),
  \ javaapi#field(0,0,'dataType', 'int'),
  \ javaapi#field(0,0,'banks', 'int'),
  \ javaapi#field(0,0,'offset', 'int'),
  \ javaapi#field(0,0,'size', 'int'),
  \ javaapi#field(0,0,'offsets', 'int'),
  \ javaapi#method(1,1,'getDataTypeSize(', 'int)', 'int'),
  \ javaapi#method(0,0,'DataBuffer(', 'int, int)', ''),
  \ javaapi#method(0,0,'DataBuffer(', 'int, int, int)', ''),
  \ javaapi#method(0,0,'DataBuffer(', 'int, int, int, int)', ''),
  \ javaapi#method(0,0,'DataBuffer(', 'int, int, int, int[])', ''),
  \ javaapi#method(0,1,'getDataType(', ')', 'int'),
  \ javaapi#method(0,1,'getSize(', ')', 'int'),
  \ javaapi#method(0,1,'getOffset(', ')', 'int'),
  \ javaapi#method(0,1,'getOffsets(', ')', 'int'),
  \ javaapi#method(0,1,'getNumBanks(', ')', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int)', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'setElem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setElem(', 'int, int, int)', 'void'),
  \ javaapi#method(0,1,'getElemFloat(', 'int)', 'float'),
  \ javaapi#method(0,1,'getElemFloat(', 'int, int)', 'float'),
  \ javaapi#method(0,1,'setElemFloat(', 'int, float)', 'void'),
  \ javaapi#method(0,1,'setElemFloat(', 'int, int, float)', 'void'),
  \ javaapi#method(0,1,'getElemDouble(', 'int)', 'double'),
  \ javaapi#method(0,1,'getElemDouble(', 'int, int)', 'double'),
  \ javaapi#method(0,1,'setElemDouble(', 'int, double)', 'void'),
  \ javaapi#method(0,1,'setElemDouble(', 'int, int, double)', 'void'),
  \ ])

call javaapi#class('DataBufferByte', 'DataBuffer', [
  \ javaapi#method(0,1,'DataBufferByte(', 'int)', ''),
  \ javaapi#method(0,1,'DataBufferByte(', 'int, int)', ''),
  \ javaapi#method(0,1,'DataBufferByte(', 'byte[], int)', ''),
  \ javaapi#method(0,1,'DataBufferByte(', 'byte[], int, int)', ''),
  \ javaapi#method(0,1,'DataBufferByte(', 'byte[][], int)', ''),
  \ javaapi#method(0,1,'DataBufferByte(', 'byte[][], int, int[])', ''),
  \ javaapi#method(0,1,'getData(', ')', 'byte'),
  \ javaapi#method(0,1,'getData(', 'int)', 'byte'),
  \ javaapi#method(0,1,'getBankData(', ')', 'byte[]'),
  \ javaapi#method(0,1,'getElem(', 'int)', 'int'),
  \ javaapi#method(0,1,'getElem(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'setElem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setElem(', 'int, int, int)', 'void'),
  \ ])

call javaapi#class('Raster', '', [
  \ javaapi#field(0,0,'sampleModel', 'SampleModel'),
  \ javaapi#field(0,0,'dataBuffer', 'DataBuffer'),
  \ javaapi#field(0,0,'minX', 'int'),
  \ javaapi#field(0,0,'minY', 'int'),
  \ javaapi#field(0,0,'width', 'int'),
  \ javaapi#field(0,0,'height', 'int'),
  \ javaapi#field(0,0,'sampleModelTranslateX', 'int'),
  \ javaapi#field(0,0,'sampleModelTranslateY', 'int'),
  \ javaapi#field(0,0,'numBands', 'int'),
  \ javaapi#field(0,0,'numDataElements', 'int'),
  \ javaapi#field(0,0,'parent', 'Raster'),
  \ javaapi#method(1,1,'createInterleavedRaster(', 'int, int, int, int, Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createInterleavedRaster(', 'int, int, int, int, int, int[], Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createBandedRaster(', 'int, int, int, int, Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createBandedRaster(', 'int, int, int, int, int[], int[], Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createPackedRaster(', 'int, int, int, int[], Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createPackedRaster(', 'int, int, int, int, int, Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createInterleavedRaster(', 'DataBuffer, int, int, int, int, int[], Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createBandedRaster(', 'DataBuffer, int, int, int, int[], int[], Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createPackedRaster(', 'DataBuffer, int, int, int, int[], Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createPackedRaster(', 'DataBuffer, int, int, int, Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createRaster(', 'SampleModel, DataBuffer, Point)', 'Raster'),
  \ javaapi#method(1,1,'createWritableRaster(', 'SampleModel, Point)', 'WritableRaster'),
  \ javaapi#method(1,1,'createWritableRaster(', 'SampleModel, DataBuffer, Point)', 'WritableRaster'),
  \ javaapi#method(0,0,'Raster(', 'SampleModel, Point)', ''),
  \ javaapi#method(0,0,'Raster(', 'SampleModel, DataBuffer, Point)', ''),
  \ javaapi#method(0,0,'Raster(', 'SampleModel, DataBuffer, Rectangle, Point, Raster)', ''),
  \ javaapi#method(0,1,'getParent(', ')', 'Raster'),
  \ javaapi#method(0,1,'getSampleModelTranslateX(', ')', 'int'),
  \ javaapi#method(0,1,'getSampleModelTranslateY(', ')', 'int'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', ')', 'WritableRaster'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', 'Rectangle)', 'WritableRaster'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', 'int, int, int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'createTranslatedChild(', 'int, int)', 'Raster'),
  \ javaapi#method(0,1,'createChild(', 'int, int, int, int, int, int, int[])', 'Raster'),
  \ javaapi#method(0,1,'getBounds(', ')', 'Rectangle'),
  \ javaapi#method(0,1,'getMinX(', ')', 'int'),
  \ javaapi#method(0,1,'getMinY(', ')', 'int'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getNumBands(', ')', 'int'),
  \ javaapi#method(0,1,'getNumDataElements(', ')', 'int'),
  \ javaapi#method(0,1,'getTransferType(', ')', 'int'),
  \ javaapi#method(0,1,'getDataBuffer(', ')', 'DataBuffer'),
  \ javaapi#method(0,1,'getSampleModel(', ')', 'SampleModel'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, Object)', 'Object'),
  \ javaapi#method(0,1,'getDataElements(', 'int, int, int, int, Object)', 'Object'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, int[])', 'int'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, float[])', 'float'),
  \ javaapi#method(0,1,'getPixel(', 'int, int, double[])', 'double'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, int[])', 'int'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, float[])', 'float'),
  \ javaapi#method(0,1,'getPixels(', 'int, int, int, int, double[])', 'double'),
  \ javaapi#method(0,1,'getSample(', 'int, int, int)', 'int'),
  \ javaapi#method(0,1,'getSampleFloat(', 'int, int, int)', 'float'),
  \ javaapi#method(0,1,'getSampleDouble(', 'int, int, int)', 'double'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, int[])', 'int'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, float[])', 'float'),
  \ javaapi#method(0,1,'getSamples(', 'int, int, int, int, int, double[])', 'double'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#interface('ImageConsumer', '', [
  \ javaapi#field(1,1,'RANDOMPIXELORDER', 'int'),
  \ javaapi#field(1,1,'TOPDOWNLEFTRIGHT', 'int'),
  \ javaapi#field(1,1,'COMPLETESCANLINES', 'int'),
  \ javaapi#field(1,1,'SINGLEPASS', 'int'),
  \ javaapi#field(1,1,'SINGLEFRAME', 'int'),
  \ javaapi#field(1,1,'IMAGEERROR', 'int'),
  \ javaapi#field(1,1,'SINGLEFRAMEDONE', 'int'),
  \ javaapi#field(1,1,'STATICIMAGEDONE', 'int'),
  \ javaapi#field(1,1,'IMAGEABORTED', 'int'),
  \ javaapi#method(0,1,'setDimensions(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setProperties(', 'Hashtable<?, ?>)', 'void'),
  \ javaapi#method(0,1,'setColorModel(', 'ColorModel)', 'void'),
  \ javaapi#method(0,1,'setHints(', 'int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, byte[], int, int)', 'void'),
  \ javaapi#method(0,1,'setPixels(', 'int, int, int, int, ColorModel, int[], int, int)', 'void'),
  \ javaapi#method(0,1,'imageComplete(', 'int)', 'void'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#interface('ImageProducer', '', [
  \ javaapi#method(0,1,'addConsumer(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'isConsumer(', 'ImageConsumer)', 'boolean'),
  \ javaapi#method(0,1,'removeConsumer(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'startProduction(', 'ImageConsumer)', 'void'),
  \ javaapi#method(0,1,'requestTopDownLeftRightResend(', 'ImageConsumer)', 'void'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#class('VolatileImage', 'Image', [
  \ javaapi#field(1,1,'IMAGE_OK', 'int'),
  \ javaapi#field(1,1,'IMAGE_RESTORED', 'int'),
  \ javaapi#field(1,1,'IMAGE_INCOMPATIBLE', 'int'),
  \ javaapi#field(0,0,'transparency', 'int'),
  \ javaapi#method(0,1,'VolatileImage(', ')', ''),
  \ javaapi#method(0,1,'getSnapshot(', ')', 'BufferedImage'),
  \ javaapi#method(0,1,'getWidth(', ')', 'int'),
  \ javaapi#method(0,1,'getHeight(', ')', 'int'),
  \ javaapi#method(0,1,'getSource(', ')', 'ImageProducer'),
  \ javaapi#method(0,1,'getGraphics(', ')', 'Graphics'),
  \ javaapi#method(0,1,'createGraphics(', ')', 'Graphics2D'),
  \ javaapi#method(0,1,'validate(', 'GraphicsConfiguration)', 'int'),
  \ javaapi#method(0,1,'contentsLost(', ')', 'boolean'),
  \ javaapi#method(0,1,'getCapabilities(', ')', 'ImageCapabilities'),
  \ javaapi#method(0,1,'getTransparency(', ')', 'int'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#class('IndexColorModel', 'ColorModel', [
  \ javaapi#method(0,1,'IndexColorModel(', 'int, int, byte[], byte[], byte[])', ''),
  \ javaapi#method(0,1,'IndexColorModel(', 'int, int, byte[], byte[], byte[], int)', ''),
  \ javaapi#method(0,1,'IndexColorModel(', 'int, int, byte[], byte[], byte[], byte[])', ''),
  \ javaapi#method(0,1,'IndexColorModel(', 'int, int, byte[], int, boolean)', ''),
  \ javaapi#method(0,1,'IndexColorModel(', 'int, int, byte[], int, boolean, int)', ''),
  \ javaapi#method(0,1,'IndexColorModel(', 'int, int, int[], int, boolean, int, int)', ''),
  \ javaapi#method(0,1,'IndexColorModel(', 'int, int, int[], int, int, BigInteger)', ''),
  \ javaapi#method(0,1,'getTransparency(', ')', 'int'),
  \ javaapi#method(0,1,'getComponentSize(', ')', 'int'),
  \ javaapi#method(0,1,'getMapSize(', ')', 'int'),
  \ javaapi#method(0,1,'getTransparentPixel(', ')', 'int'),
  \ javaapi#method(0,1,'getReds(', 'byte[])', 'void'),
  \ javaapi#method(0,1,'getGreens(', 'byte[])', 'void'),
  \ javaapi#method(0,1,'getBlues(', 'byte[])', 'void'),
  \ javaapi#method(0,1,'getAlphas(', 'byte[])', 'void'),
  \ javaapi#method(0,1,'getRGBs(', 'int[])', 'void'),
  \ javaapi#method(0,1,'getRed(', 'int)', 'int'),
  \ javaapi#method(0,1,'getGreen(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBlue(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAlpha(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int, Object)', 'Object'),
  \ javaapi#method(0,1,'getComponents(', 'int, int[], int)', 'int'),
  \ javaapi#method(0,1,'getComponents(', 'Object, int[], int)', 'int'),
  \ javaapi#method(0,1,'getDataElement(', 'int[], int)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int[], int, Object)', 'Object'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'isCompatibleRaster(', 'Raster)', 'boolean'),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'isCompatibleSampleModel(', 'SampleModel)', 'boolean'),
  \ javaapi#method(0,1,'convertToIntDiscrete(', 'Raster, boolean)', 'BufferedImage'),
  \ javaapi#method(0,1,'isValid(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isValid(', ')', 'boolean'),
  \ javaapi#method(0,1,'getValidPixels(', ')', 'BigInteger'),
  \ javaapi#method(0,1,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#class('PackedColorModel', 'ColorModel', [
  \ javaapi#method(0,1,'PackedColorModel(', 'ColorSpace, int, int[], int, boolean, int, int)', ''),
  \ javaapi#method(0,1,'PackedColorModel(', 'ColorSpace, int, int, int, int, int, boolean, int, int)', ''),
  \ javaapi#method(0,1,'getMask(', 'int)', 'int'),
  \ javaapi#method(0,1,'getMasks(', ')', 'int'),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'isCompatibleSampleModel(', 'SampleModel)', 'boolean'),
  \ javaapi#method(0,1,'getAlphaRaster(', 'WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ ])

call javaapi#class('DirectColorModel', 'PackedColorModel', [
  \ javaapi#method(0,1,'DirectColorModel(', 'int, int, int, int)', ''),
  \ javaapi#method(0,1,'DirectColorModel(', 'int, int, int, int, int)', ''),
  \ javaapi#method(0,1,'DirectColorModel(', 'ColorSpace, int, int, int, int, int, boolean, int)', ''),
  \ javaapi#method(0,1,'getRedMask(', ')', 'int'),
  \ javaapi#method(0,1,'getGreenMask(', ')', 'int'),
  \ javaapi#method(0,1,'getBlueMask(', ')', 'int'),
  \ javaapi#method(0,1,'getAlphaMask(', ')', 'int'),
  \ javaapi#method(0,1,'getRed(', 'int)', 'int'),
  \ javaapi#method(0,1,'getGreen(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBlue(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAlpha(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRed(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getGreen(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getBlue(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getAlpha(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int, Object)', 'Object'),
  \ javaapi#method(0,1,'getComponents(', 'int, int[], int)', 'int'),
  \ javaapi#method(0,1,'getComponents(', 'Object, int[], int)', 'int'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'getDataElement(', 'int[], int)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int[], int, Object)', 'Object'),
  \ javaapi#method(0,1,'coerceData(', 'WritableRaster, boolean)', 'ColorModel'),
  \ javaapi#method(0,1,'isCompatibleRaster(', 'Raster)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('ColorModel', 'Transparency', [
  \ javaapi#field(0,0,'pixel_bits', 'int'),
  \ javaapi#field(0,0,'transferType', 'int'),
  \ javaapi#method(1,1,'getRGBdefault(', ')', 'ColorModel'),
  \ javaapi#method(0,1,'ColorModel(', 'int)', ''),
  \ javaapi#method(0,0,'ColorModel(', 'int, int[], ColorSpace, boolean, boolean, int, int)', ''),
  \ javaapi#method(0,1,'hasAlpha(', ')', 'boolean'),
  \ javaapi#method(0,1,'isAlphaPremultiplied(', ')', 'boolean'),
  \ javaapi#method(0,1,'getTransferType(', ')', 'int'),
  \ javaapi#method(0,1,'getPixelSize(', ')', 'int'),
  \ javaapi#method(0,1,'getComponentSize(', 'int)', 'int'),
  \ javaapi#method(0,1,'getComponentSize(', ')', 'int'),
  \ javaapi#method(0,1,'getTransparency(', ')', 'int'),
  \ javaapi#method(0,1,'getNumComponents(', ')', 'int'),
  \ javaapi#method(0,1,'getNumColorComponents(', ')', 'int'),
  \ javaapi#method(0,1,'getRed(', 'int)', 'int'),
  \ javaapi#method(0,1,'getGreen(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBlue(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAlpha(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRed(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getGreen(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getBlue(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getAlpha(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getRGB(', 'Object)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int, Object)', 'Object'),
  \ javaapi#method(0,1,'getComponents(', 'int, int[], int)', 'int'),
  \ javaapi#method(0,1,'getComponents(', 'Object, int[], int)', 'int'),
  \ javaapi#method(0,1,'getUnnormalizedComponents(', 'float[], int, int[], int)', 'int'),
  \ javaapi#method(0,1,'getNormalizedComponents(', 'int[], int, float[], int)', 'float'),
  \ javaapi#method(0,1,'getDataElement(', 'int[], int)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'int[], int, Object)', 'Object'),
  \ javaapi#method(0,1,'getDataElement(', 'float[], int)', 'int'),
  \ javaapi#method(0,1,'getDataElements(', 'float[], int, Object)', 'Object'),
  \ javaapi#method(0,1,'getNormalizedComponents(', 'Object, float[], int)', 'float'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'getColorSpace(', ')', 'ColorSpace'),
  \ javaapi#method(0,1,'coerceData(', 'WritableRaster, boolean)', 'ColorModel'),
  \ javaapi#method(0,1,'isCompatibleRaster(', 'Raster)', 'boolean'),
  \ javaapi#method(0,1,'createCompatibleWritableRaster(', 'int, int)', 'WritableRaster'),
  \ javaapi#method(0,1,'createCompatibleSampleModel(', 'int, int)', 'SampleModel'),
  \ javaapi#method(0,1,'isCompatibleSampleModel(', 'SampleModel)', 'boolean'),
  \ javaapi#method(0,1,'finalize(', ')', 'void'),
  \ javaapi#method(0,1,'getAlphaRaster(', 'WritableRaster)', 'WritableRaster'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#class('BufferStrategy', '', [
  \ javaapi#method(0,1,'BufferStrategy(', ')', ''),
  \ javaapi#method(0,1,'getCapabilities(', ')', 'BufferCapabilities'),
  \ javaapi#method(0,1,'getDrawGraphics(', ')', 'Graphics'),
  \ javaapi#method(0,1,'contentsLost(', ')', 'boolean'),
  \ javaapi#method(0,1,'contentsRestored(', ')', 'boolean'),
  \ javaapi#method(0,1,'show(', ')', 'void'),
  \ javaapi#method(0,1,'dispose(', ')', 'void'),
  \ ])

call javaapi#namespace('java.awt.image')

call javaapi#interface('ImageObserver', '', [
  \ javaapi#field(1,1,'WIDTH', 'int'),
  \ javaapi#field(1,1,'HEIGHT', 'int'),
  \ javaapi#field(1,1,'PROPERTIES', 'int'),
  \ javaapi#field(1,1,'SOMEBITS', 'int'),
  \ javaapi#field(1,1,'FRAMEBITS', 'int'),
  \ javaapi#field(1,1,'ALLBITS', 'int'),
  \ javaapi#field(1,1,'ERROR', 'int'),
  \ javaapi#field(1,1,'ABORT', 'int'),
  \ javaapi#method(0,1,'imageUpdate(', 'Image, int, int, int, int, int)', 'boolean'),
  \ ])

