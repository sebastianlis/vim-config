call javaapi#namespace('com.sun.org.apache.xpath.internal.axes')

call javaapi#class('AttributeIterator', 'ChildTestIterator', [
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ ])

call javaapi#class('AxesWalker', 'PredicatedNodeTest', [
  \ javaapi#field(0,0,'m_nextWalker', 'AxesWalker'),
  \ javaapi#field(0,0,'m_axis', 'int'),
  \ javaapi#field(0,0,'m_traverser', 'DTMAxisTraverser'),
  \ javaapi#method(0,1,'AxesWalker(', 'LocPathIterator, int)', ''),
  \ javaapi#method(0,1,'wi(', ')', 'WalkingIterator'),
  \ javaapi#method(0,1,'init(', 'Compiler, int, int) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'getRoot(', ')', 'int'),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'setRoot(', 'int)', 'void'),
  \ javaapi#method(0,1,'getCurrentNode(', ')', 'int'),
  \ javaapi#method(0,1,'setNextWalker(', 'AxesWalker)', 'void'),
  \ javaapi#method(0,1,'getNextWalker(', ')', 'AxesWalker'),
  \ javaapi#method(0,1,'setPrevWalker(', 'AxesWalker)', 'void'),
  \ javaapi#method(0,1,'getPrevWalker(', ')', 'AxesWalker'),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'getLastPos(', 'XPathContext)', 'int'),
  \ javaapi#method(0,1,'setDefaultDTM(', 'DTM)', 'void'),
  \ javaapi#method(0,1,'getDTM(', 'int)', 'DTM'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'callVisitors(', 'ExpressionOwner, XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'getExpression(', ')', 'Expression'),
  \ javaapi#method(0,1,'setExpression(', 'Expression)', 'void'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('BasicTestIterator', 'LocPathIterator', [
  \ javaapi#method(0,0,'BasicTestIterator(', ')', ''),
  \ javaapi#method(0,0,'BasicTestIterator(', 'PrefixResolver)', ''),
  \ javaapi#method(0,0,'BasicTestIterator(', 'Compiler, int, int) throws TransformerException', ''),
  \ javaapi#method(0,0,'BasicTestIterator(', 'Compiler, int, int, boolean) throws TransformerException', ''),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'cloneWithReset(', ') throws CloneNotSupportedException', 'DTMIterator'),
  \ ])

call javaapi#class('ChildIterator', 'LocPathIterator', [
  \ javaapi#method(0,1,'asNode(', 'XPathContext) throws TransformerException', 'int'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ ])

call javaapi#class('ChildTestIterator', 'BasicTestIterator', [
  \ javaapi#field(0,0,'m_traverser', 'DTMAxisTraverser'),
  \ javaapi#method(0,1,'ChildTestIterator(', 'DTMAxisTraverser)', ''),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'cloneWithReset(', ') throws CloneNotSupportedException', 'DTMIterator'),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ ])

call javaapi#interface('ContextNodeList', '', [
  \ javaapi#method(0,1,'getCurrentNode(', ')', 'Node'),
  \ javaapi#method(0,1,'getCurrentPos(', ')', 'int'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'setShouldCacheNodes(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'runTo(', 'int)', 'void'),
  \ javaapi#method(0,1,'setCurrentPos(', 'int)', 'void'),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'isFresh(', ')', 'boolean'),
  \ javaapi#method(0,1,'cloneWithReset(', ') throws CloneNotSupportedException', 'NodeIterator'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'setLast(', 'int)', 'void'),
  \ ])

call javaapi#class('DescendantIterator', 'LocPathIterator', [
  \ javaapi#field(0,0,'m_traverser', 'DTMAxisTraverser'),
  \ javaapi#field(0,0,'m_axis', 'int'),
  \ javaapi#field(0,0,'m_extendedTypeID', 'int'),
  \ javaapi#method(0,1,'DescendantIterator(', ')', ''),
  \ javaapi#method(0,1,'cloneWithReset(', ') throws CloneNotSupportedException', 'DTMIterator'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'asNode(', 'XPathContext) throws TransformerException', 'int'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('FilterExprIterator', 'BasicTestIterator', [
  \ javaapi#method(0,1,'FilterExprIterator(', ')', ''),
  \ javaapi#method(0,1,'FilterExprIterator(', 'Expression)', ''),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,1,'getInnerExpression(', ')', 'Expression'),
  \ javaapi#method(0,1,'setInnerExpression(', 'Expression)', 'void'),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'callPredicateVisitors(', 'XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('FilterExprIteratorSimple', 'LocPathIterator', [
  \ javaapi#method(0,1,'FilterExprIteratorSimple(', ')', ''),
  \ javaapi#method(0,1,'FilterExprIteratorSimple(', 'Expression)', ''),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(1,1,'executeFilterExpr(', 'int, XPathContext, PrefixResolver, boolean, int, Expression) throws WrappedRuntimeException', 'XNodeSet'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,1,'getInnerExpression(', ')', 'Expression'),
  \ javaapi#method(0,1,'setInnerExpression(', 'Expression)', 'void'),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'callPredicateVisitors(', 'XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ ])

call javaapi#class('FilterExprWalker', 'AxesWalker', [
  \ javaapi#method(0,1,'FilterExprWalker(', 'WalkingIterator)', ''),
  \ javaapi#method(0,1,'init(', 'Compiler, int, int) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'setRoot(', 'int)', 'void'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,1,'acceptNode(', 'int)', 'short'),
  \ javaapi#method(0,1,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'getLastPos(', 'XPathContext)', 'int'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,1,'getInnerExpression(', ')', 'Expression'),
  \ javaapi#method(0,1,'setInnerExpression(', 'Expression)', 'void'),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'callPredicateVisitors(', 'XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('HasPositionalPredChecker', 'XPathVisitor', [
  \ javaapi#method(0,1,'HasPositionalPredChecker(', ')', ''),
  \ javaapi#method(1,1,'check(', 'LocPathIterator)', 'boolean'),
  \ javaapi#method(0,1,'visitFunction(', 'ExpressionOwner, Function)', 'boolean'),
  \ javaapi#method(0,1,'visitPredicate(', 'ExpressionOwner, Expression)', 'boolean'),
  \ ])

call javaapi#class('IteratorPool', 'Serializable', [
  \ javaapi#method(0,1,'IteratorPool(', 'DTMIterator)', ''),
  \ javaapi#method(0,1,'getInstanceOrThrow(', ') throws CloneNotSupportedException', 'DTMIterator'),
  \ javaapi#method(0,1,'getInstance(', ')', 'DTMIterator'),
  \ javaapi#method(0,1,'freeInstance(', 'DTMIterator)', 'void'),
  \ ])

call javaapi#class('LocPathIterator', 'PredicatedNodeTest', [
  \ javaapi#field(0,0,'m_allowDetach', 'boolean'),
  \ javaapi#field(0,0,'m_clones', 'IteratorPool'),
  \ javaapi#field(0,0,'m_cdtm', 'DTM'),
  \ javaapi#field(0,1,'m_lastFetched', 'int'),
  \ javaapi#field(0,0,'m_context', 'int'),
  \ javaapi#field(0,0,'m_currentContextNode', 'int'),
  \ javaapi#field(0,0,'m_pos', 'int'),
  \ javaapi#field(0,0,'m_length', 'int'),
  \ javaapi#field(0,0,'m_execContext', 'XPathContext'),
  \ javaapi#method(0,0,'LocPathIterator(', ')', ''),
  \ javaapi#method(0,0,'LocPathIterator(', 'PrefixResolver)', ''),
  \ javaapi#method(0,0,'LocPathIterator(', 'Compiler, int, int) throws TransformerException', ''),
  \ javaapi#method(0,0,'LocPathIterator(', 'Compiler, int, int, boolean) throws TransformerException', ''),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'setEnvironment(', 'Object)', 'void'),
  \ javaapi#method(0,1,'getDTM(', 'int)', 'DTM'),
  \ javaapi#method(0,1,'getDTMManager(', ')', 'DTMManager'),
  \ javaapi#method(0,1,'execute(', 'XPathContext) throws TransformerException', 'XObject'),
  \ javaapi#method(0,1,'executeCharsToContentHandler(', 'XPathContext, ContentHandler) throws TransformerException, SAXException', 'void'),
  \ javaapi#method(0,1,'asIterator(', 'XPathContext, int) throws TransformerException', 'DTMIterator'),
  \ javaapi#method(0,1,'isNodesetExpr(', ')', 'boolean'),
  \ javaapi#method(0,1,'asNode(', 'XPathContext) throws TransformerException', 'int'),
  \ javaapi#method(0,1,'bool(', 'XPathContext) throws TransformerException', 'boolean'),
  \ javaapi#method(0,1,'setIsTopLevel(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getIsTopLevel(', ')', 'boolean'),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,0,'setNextPosition(', 'int)', 'void'),
  \ javaapi#method(0,1,'getCurrentPos(', ')', 'int'),
  \ javaapi#method(0,1,'setShouldCacheNodes(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isMutable(', ')', 'boolean'),
  \ javaapi#method(0,1,'setCurrentPos(', 'int)', 'void'),
  \ javaapi#method(0,1,'incrementCurrentPos(', ')', 'void'),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'item(', 'int)', 'int'),
  \ javaapi#method(0,1,'setItem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ javaapi#method(0,1,'isFresh(', ')', 'boolean'),
  \ javaapi#method(0,1,'previousNode(', ')', 'int'),
  \ javaapi#method(0,1,'getWhatToShow(', ')', 'int'),
  \ javaapi#method(0,1,'getFilter(', ')', 'DTMFilter'),
  \ javaapi#method(0,1,'getRoot(', ')', 'int'),
  \ javaapi#method(0,1,'getExpandEntityReferences(', ')', 'boolean'),
  \ javaapi#method(0,1,'allowDetachToRelease(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'cloneWithReset(', ') throws CloneNotSupportedException', 'DTMIterator'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,0,'returnNextNode(', 'int)', 'int'),
  \ javaapi#method(0,1,'getCurrentNode(', ')', 'int'),
  \ javaapi#method(0,1,'runTo(', 'int)', 'void'),
  \ javaapi#method(0,1,'getFoundLast(', ')', 'boolean'),
  \ javaapi#method(0,1,'getXPathContext(', ')', 'XPathContext'),
  \ javaapi#method(0,1,'getContext(', ')', 'int'),
  \ javaapi#method(0,1,'getCurrentContextNode(', ')', 'int'),
  \ javaapi#method(0,1,'setCurrentContextNode(', 'int)', 'void'),
  \ javaapi#method(0,1,'getPrefixResolver(', ')', 'PrefixResolver'),
  \ javaapi#method(0,1,'callVisitors(', 'ExpressionOwner, XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'getLastPos(', 'XPathContext)', 'int'),
  \ ])

call javaapi#class('MatchPatternIterator', 'LocPathIterator', [
  \ javaapi#field(0,0,'m_pattern', 'StepPattern'),
  \ javaapi#field(0,0,'m_superAxis', 'int'),
  \ javaapi#field(0,0,'m_traverser', 'DTMAxisTraverser'),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'acceptNode(', 'int, XPathContext)', 'short'),
  \ ])

call javaapi#class('NodeSequence', 'XObject', [
  \ javaapi#field(0,0,'m_last', 'int'),
  \ javaapi#field(0,0,'m_next', 'int'),
  \ javaapi#field(0,0,'m_iter', 'DTMIterator'),
  \ javaapi#field(0,0,'m_dtmMgr', 'DTMManager'),
  \ javaapi#method(0,0,'getVector(', ')', 'NodeVector'),
  \ javaapi#method(0,0,'SetVector(', 'NodeVector)', 'void'),
  \ javaapi#method(0,1,'hasCache(', ')', 'boolean'),
  \ javaapi#method(0,1,'setIter(', 'DTMIterator)', 'void'),
  \ javaapi#method(0,1,'getContainedIter(', ')', 'DTMIterator'),
  \ javaapi#method(0,1,'NodeSequence(', 'Object)', ''),
  \ javaapi#method(0,1,'NodeSequence(', ')', ''),
  \ javaapi#method(0,1,'getDTM(', 'int)', 'DTM'),
  \ javaapi#method(0,1,'getDTMManager(', ')', 'DTMManager'),
  \ javaapi#method(0,1,'getRoot(', ')', 'int'),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'getWhatToShow(', ')', 'int'),
  \ javaapi#method(0,1,'getExpandEntityReferences(', ')', 'boolean'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'previousNode(', ')', 'int'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'allowDetachToRelease(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getCurrentNode(', ')', 'int'),
  \ javaapi#method(0,1,'isFresh(', ')', 'boolean'),
  \ javaapi#method(0,1,'setShouldCacheNodes(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isMutable(', ')', 'boolean'),
  \ javaapi#method(0,1,'getCurrentPos(', ')', 'int'),
  \ javaapi#method(0,1,'runTo(', 'int)', 'void'),
  \ javaapi#method(0,1,'setCurrentPos(', 'int)', 'void'),
  \ javaapi#method(0,1,'item(', 'int)', 'int'),
  \ javaapi#method(0,1,'setItem(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ javaapi#method(0,1,'cloneWithReset(', ') throws CloneNotSupportedException', 'DTMIterator'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,0,'addNodeInDocOrder(', 'int)', 'int'),
  \ javaapi#method(0,0,'setObject(', 'Object)', 'void'),
  \ javaapi#method(0,0,'getIteratorCache(', ')', 'IteratorCache'),
  \ ])

call javaapi#class('OneStepIterator', 'ChildTestIterator', [
  \ javaapi#field(0,0,'m_axis', 'int'),
  \ javaapi#field(0,0,'m_iterator', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'OneStepIterator(', 'DTMAxisIterator, int) throws TransformerException', ''),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,1,'cloneWithReset(', ') throws CloneNotSupportedException', 'DTMIterator'),
  \ javaapi#method(0,1,'isReverseAxes(', ')', 'boolean'),
  \ javaapi#method(0,0,'getProximityPosition(', 'int)', 'int'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ javaapi#method(0,0,'countProximityPosition(', 'int)', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('OneStepIteratorForward', 'ChildTestIterator', [
  \ javaapi#field(0,0,'m_axis', 'int'),
  \ javaapi#method(0,1,'OneStepIteratorForward(', 'int)', ''),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#interface('PathComponent', '', [
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ ])

call javaapi#class('PredicatedNodeTest', 'NodeTest', [
  \ javaapi#field(0,0,'m_predCount', 'int'),
  \ javaapi#field(0,0,'m_foundLast', 'boolean'),
  \ javaapi#field(0,0,'m_lpi', 'LocPathIterator'),
  \ javaapi#field(0,0,'m_proximityPositions', 'int'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,1,'getPredicateCount(', ')', 'int'),
  \ javaapi#method(0,1,'setPredicateCount(', 'int)', 'void'),
  \ javaapi#method(0,0,'initPredicateInfo(', 'Compiler, int) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'getPredicate(', 'int)', 'Expression'),
  \ javaapi#method(0,1,'getProximityPosition(', ')', 'int'),
  \ javaapi#method(0,1,'getProximityPosition(', 'XPathContext)', 'int'),
  \ javaapi#method(0,1,'getLastPos(', 'XPathContext)', 'int'),
  \ javaapi#method(0,0,'getProximityPosition(', 'int)', 'int'),
  \ javaapi#method(0,1,'resetProximityPositions(', ')', 'void'),
  \ javaapi#method(0,1,'initProximityPosition(', 'int) throws TransformerException', 'void'),
  \ javaapi#method(0,0,'countProximityPosition(', 'int)', 'void'),
  \ javaapi#method(0,1,'isReverseAxes(', ')', 'boolean'),
  \ javaapi#method(0,1,'getPredicateIndex(', ')', 'int'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,0,'nodeToString(', 'int)', 'String'),
  \ javaapi#method(0,1,'acceptNode(', 'int)', 'short'),
  \ javaapi#method(0,1,'getLocPathIterator(', ')', 'LocPathIterator'),
  \ javaapi#method(0,1,'setLocPathIterator(', 'LocPathIterator)', 'void'),
  \ javaapi#method(0,1,'canTraverseOutsideSubtree(', ')', 'boolean'),
  \ javaapi#method(0,1,'callPredicateVisitors(', 'XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('RTFIterator', 'NodeSetDTM', [
  \ javaapi#method(0,1,'RTFIterator(', 'int, DTMManager)', ''),
  \ ])

call javaapi#class('ReverseAxesWalker', 'AxesWalker', [
  \ javaapi#field(0,0,'m_iterator', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setRoot(', 'int)', 'void'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,0,'getNextNode(', ')', 'int'),
  \ javaapi#method(0,1,'isReverseAxes(', ')', 'boolean'),
  \ javaapi#method(0,0,'getProximityPosition(', 'int)', 'int'),
  \ javaapi#method(0,0,'countProximityPosition(', 'int)', 'void'),
  \ javaapi#method(0,1,'getLastPos(', 'XPathContext)', 'int'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ ])

call javaapi#class('SelfIteratorNoPredicate', 'LocPathIterator', [
  \ javaapi#method(0,1,'SelfIteratorNoPredicate(', ') throws TransformerException', ''),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'asNode(', 'XPathContext) throws TransformerException', 'int'),
  \ javaapi#method(0,1,'getLastPos(', 'XPathContext)', 'int'),
  \ ])

call javaapi#interface('SubContextList', '', [
  \ javaapi#method(0,1,'getLastPos(', 'XPathContext)', 'int'),
  \ javaapi#method(0,1,'getProximityPosition(', 'XPathContext)', 'int'),
  \ ])

call javaapi#class('UnionChildIterator', 'ChildTestIterator', [
  \ javaapi#method(0,1,'UnionChildIterator(', ')', ''),
  \ javaapi#method(0,1,'addNodeTest(', 'PredicatedNodeTest)', 'void'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,1,'acceptNode(', 'int)', 'short'),
  \ ])

call javaapi#class('UnionPathIterator', 'LocPathIterator', [
  \ javaapi#field(0,0,'m_exprs', 'LocPathIterator'),
  \ javaapi#field(0,0,'m_iterators', 'DTMIterator'),
  \ javaapi#method(0,1,'UnionPathIterator(', ')', ''),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'addIterator(', 'DTMIterator)', 'void'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'UnionPathIterator(', 'Compiler, int) throws TransformerException', ''),
  \ javaapi#method(1,1,'createUnionIterator(', 'Compiler, int) throws TransformerException', 'LocPathIterator'),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,0,'createDTMIterator(', 'Compiler, int) throws TransformerException', 'LocPathIterator'),
  \ javaapi#method(0,0,'loadLocationPaths(', 'Compiler, int, int) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'callVisitors(', 'ExpressionOwner, XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('WalkerFactory', '', [
  \ javaapi#field(1,1,'BITS_COUNT', 'int'),
  \ javaapi#field(1,1,'BITS_RESERVED', 'int'),
  \ javaapi#field(1,1,'BIT_PREDICATE', 'int'),
  \ javaapi#field(1,1,'BIT_ANCESTOR', 'int'),
  \ javaapi#field(1,1,'BIT_ANCESTOR_OR_SELF', 'int'),
  \ javaapi#field(1,1,'BIT_ATTRIBUTE', 'int'),
  \ javaapi#field(1,1,'BIT_CHILD', 'int'),
  \ javaapi#field(1,1,'BIT_DESCENDANT', 'int'),
  \ javaapi#field(1,1,'BIT_DESCENDANT_OR_SELF', 'int'),
  \ javaapi#field(1,1,'BIT_FOLLOWING', 'int'),
  \ javaapi#field(1,1,'BIT_FOLLOWING_SIBLING', 'int'),
  \ javaapi#field(1,1,'BIT_NAMESPACE', 'int'),
  \ javaapi#field(1,1,'BIT_PARENT', 'int'),
  \ javaapi#field(1,1,'BIT_PRECEDING', 'int'),
  \ javaapi#field(1,1,'BIT_PRECEDING_SIBLING', 'int'),
  \ javaapi#field(1,1,'BIT_SELF', 'int'),
  \ javaapi#field(1,1,'BIT_FILTER', 'int'),
  \ javaapi#field(1,1,'BIT_ROOT', 'int'),
  \ javaapi#field(1,1,'BITMASK_TRAVERSES_OUTSIDE_SUBTREE', 'int'),
  \ javaapi#field(1,1,'BIT_BACKWARDS_SELF', 'int'),
  \ javaapi#field(1,1,'BIT_ANY_DESCENDANT_FROM_ROOT', 'int'),
  \ javaapi#field(1,1,'BIT_NODETEST_ANY', 'int'),
  \ javaapi#field(1,1,'BIT_MATCH_PATTERN', 'int'),
  \ javaapi#method(0,1,'WalkerFactory(', ')', ''),
  \ javaapi#method(1,1,'isSet(', 'int, int)', 'boolean'),
  \ javaapi#method(1,1,'diagnoseIterator(', 'String, int, Compiler)', 'void'),
  \ javaapi#method(1,1,'newDTMIterator(', 'Compiler, int, boolean) throws TransformerException', 'DTMIterator'),
  \ javaapi#method(1,1,'getAxisFromStep(', 'Compiler, int) throws TransformerException', 'int'),
  \ javaapi#method(1,1,'getAnalysisBitFromAxes(', 'int)', 'int'),
  \ javaapi#method(1,1,'mightBeProximate(', 'Compiler, int, int) throws TransformerException', 'boolean'),
  \ javaapi#method(1,1,'isDownwardAxisOfMany(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'getAnalysisString(', 'int)', 'String'),
  \ javaapi#method(1,1,'hasPredicate(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isWild(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksAncestors(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksAttributes(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksNamespaces(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksChildren(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksDescendants(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksSubtree(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksSubtreeOnlyMaybeAbsolute(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksSubtreeOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksFilteredList(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksSubtreeOnlyFromRootOrContext(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksInDocOrder(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksFollowingOnlyMaybeAbsolute(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksUp(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksSideways(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksExtraNodes(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksExtraNodesOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isAbsolute(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksChildrenOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksChildrenAndExtraAndSelfOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksDescendantsAndExtraAndSelfOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksSelfOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksUpOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksDownOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'walksDownExtraOnly(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'canSkipSubtrees(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'canCrissCross(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isNaturalDocOrder(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isOneStep(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'getStepCount(', 'int)', 'int'),
  \ ])

call javaapi#class('WalkingIterator', 'LocPathIterator', [
  \ javaapi#field(0,0,'m_lastUsedWalker', 'AxesWalker'),
  \ javaapi#field(0,0,'m_firstWalker', 'AxesWalker'),
  \ javaapi#method(0,1,'WalkingIterator(', 'PrefixResolver)', ''),
  \ javaapi#method(0,1,'getAnalysisBits(', ')', 'int'),
  \ javaapi#method(0,1,'clone(', ') throws CloneNotSupportedException', 'Object'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'setRoot(', 'int, Object)', 'void'),
  \ javaapi#method(0,1,'nextNode(', ')', 'int'),
  \ javaapi#method(0,1,'getFirstWalker(', ')', 'AxesWalker'),
  \ javaapi#method(0,1,'setFirstWalker(', 'AxesWalker)', 'void'),
  \ javaapi#method(0,1,'setLastUsedWalker(', 'AxesWalker)', 'void'),
  \ javaapi#method(0,1,'getLastUsedWalker(', ')', 'AxesWalker'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ javaapi#method(0,1,'callVisitors(', 'ExpressionOwner, XPathVisitor)', 'void'),
  \ javaapi#method(0,1,'getExpression(', ')', 'Expression'),
  \ javaapi#method(0,1,'setExpression(', 'Expression)', 'void'),
  \ javaapi#method(0,1,'deepEquals(', 'Expression)', 'boolean'),
  \ ])

call javaapi#class('WalkingIteratorSorted', 'WalkingIterator', [
  \ javaapi#field(0,0,'m_inNaturalOrderStatic', 'boolean'),
  \ javaapi#method(0,1,'WalkingIteratorSorted(', 'PrefixResolver)', ''),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'fixupVariables(', 'Vector, int)', 'void'),
  \ ])

