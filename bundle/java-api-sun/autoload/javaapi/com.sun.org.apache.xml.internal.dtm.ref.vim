call javaapi#namespace('com.sun.org.apache.xml.internal.dtm.ref')

call javaapi#class('ChunkedIntArray', '', [
  \ ])

call javaapi#class('CoroutineManager', '', [
  \ javaapi#method(0,1,'CoroutineManager(', ')', ''),
  \ javaapi#method(0,1,'co_joinCoroutineSet(', 'int)', 'int'),
  \ javaapi#method(0,1,'co_entry_pause(', 'int) throws NoSuchMethodException', 'Object'),
  \ javaapi#method(0,1,'co_resume(', 'Object, int, int) throws NoSuchMethodException', 'Object'),
  \ javaapi#method(0,1,'co_exit(', 'int)', 'void'),
  \ javaapi#method(0,1,'co_exit_to(', 'Object, int, int) throws NoSuchMethodException', 'void'),
  \ ])

call javaapi#interface('CoroutineParser', '', [
  \ javaapi#method(0,1,'getParserCoroutineID(', ')', 'int'),
  \ javaapi#method(0,1,'getCoroutineManager(', ')', 'CoroutineManager'),
  \ javaapi#method(0,1,'setContentHandler(', 'ContentHandler)', 'void'),
  \ javaapi#method(0,1,'setLexHandler(', 'LexicalHandler)', 'void'),
  \ javaapi#method(0,1,'doParse(', 'InputSource, int)', 'Object'),
  \ javaapi#method(0,1,'doMore(', 'boolean, int)', 'Object'),
  \ javaapi#method(0,1,'doTerminate(', 'int)', 'void'),
  \ javaapi#method(0,1,'init(', 'CoroutineManager, int, XMLReader)', 'void'),
  \ ])

call javaapi#class('CustomStringPool', 'DTMStringPool', [
  \ javaapi#field(1,1,'NULL', 'int'),
  \ javaapi#method(0,1,'CustomStringPool(', ')', ''),
  \ javaapi#method(0,1,'removeAllElements(', ')', 'void'),
  \ javaapi#method(0,1,'indexToString(', 'int) throws ArrayIndexOutOfBoundsException', 'String'),
  \ javaapi#method(0,1,'stringToIndex(', 'String)', 'int'),
  \ ])

call javaapi#class('DTMAxisIterNodeList', 'DTMNodeListBase', [
  \ javaapi#method(0,1,'DTMAxisIterNodeList(', 'DTM, DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'getDTMAxisIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'item(', 'int)', 'Node'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ ])

call javaapi#class('DTMAxisIteratorBase', 'DTMAxisIterator', [
  \ javaapi#field(0,0,'_last', 'int'),
  \ javaapi#field(0,0,'_position', 'int'),
  \ javaapi#field(0,0,'_markedNode', 'int'),
  \ javaapi#field(0,0,'_startNode', 'int'),
  \ javaapi#field(0,0,'_includeSelf', 'boolean'),
  \ javaapi#field(0,0,'_isRestartable', 'boolean'),
  \ javaapi#method(0,1,'DTMAxisIteratorBase(', ')', ''),
  \ javaapi#method(0,1,'getStartNode(', ')', 'int'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'includeSelf(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'isReverse(', ')', 'boolean'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,0,'returnNode(', 'int)', 'int'),
  \ javaapi#method(0,0,'resetPosition(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'isDocOrdered(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAxis(', ')', 'int'),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getNodeByPosition(', 'int)', 'int'),
  \ ])

call javaapi#class('DTMChildIterNodeList', 'DTMNodeListBase', [
  \ javaapi#method(0,1,'DTMChildIterNodeList(', 'DTM, int)', ''),
  \ javaapi#method(0,1,'item(', 'int)', 'Node'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ ])

call javaapi#class('DTMDefaultBase', 'DTM', [
  \ javaapi#field(1,1,'ROOTNODE', 'int'),
  \ javaapi#field(0,0,'m_size', 'int'),
  \ javaapi#field(0,0,'m_exptype', 'SuballocatedIntVector'),
  \ javaapi#field(0,0,'m_firstch', 'SuballocatedIntVector'),
  \ javaapi#field(0,0,'m_nextsib', 'SuballocatedIntVector'),
  \ javaapi#field(0,0,'m_prevsib', 'SuballocatedIntVector'),
  \ javaapi#field(0,0,'m_parent', 'SuballocatedIntVector'),
  \ javaapi#field(0,0,'m_namespaceDeclSets', 'Vector'),
  \ javaapi#field(0,0,'m_namespaceDeclSetElements', 'SuballocatedIntVector'),
  \ javaapi#field(0,0,'m_elemIndexes', 'int[][]'),
  \ javaapi#field(1,1,'DEFAULT_BLOCKSIZE', 'int'),
  \ javaapi#field(1,1,'DEFAULT_NUMBLOCKS', 'int'),
  \ javaapi#field(1,1,'DEFAULT_NUMBLOCKS_SMALL', 'int'),
  \ javaapi#field(1,0,'NOTPROCESSED', 'int'),
  \ javaapi#field(0,1,'m_mgr', 'DTMManager'),
  \ javaapi#field(0,0,'m_mgrDefault', 'DTMManagerDefault'),
  \ javaapi#field(0,0,'m_dtmIdent', 'SuballocatedIntVector'),
  \ javaapi#field(0,0,'m_documentBaseURI', 'String'),
  \ javaapi#field(0,0,'m_wsfilter', 'DTMWSFilter'),
  \ javaapi#field(0,0,'m_shouldStripWS', 'boolean'),
  \ javaapi#field(0,0,'m_shouldStripWhitespaceStack', 'BoolStack'),
  \ javaapi#field(0,0,'m_xstrf', 'XMLStringFactory'),
  \ javaapi#field(0,0,'m_expandedNameTable', 'ExpandedNameTable'),
  \ javaapi#field(0,0,'m_indexing', 'boolean'),
  \ javaapi#field(0,0,'m_traversers', 'DTMAxisTraverser'),
  \ javaapi#method(0,1,'DTMDefaultBase(', 'DTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean)', ''),
  \ javaapi#method(0,1,'DTMDefaultBase(', 'DTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean, int, boolean, boolean)', ''),
  \ javaapi#method(0,0,'ensureSizeOfIndex(', 'int, int)', 'void'),
  \ javaapi#method(0,0,'indexNode(', 'int, int)', 'void'),
  \ javaapi#method(0,0,'findGTE(', 'int[], int, int, int)', 'int'),
  \ javaapi#method(0,0,'getNextNodeIdentity(', 'int)', 'int'),
  \ javaapi#method(0,0,'nextNode(', ')', 'boolean'),
  \ javaapi#method(0,0,'getNumberOfNodes(', ')', 'int'),
  \ javaapi#method(0,0,'_type(', 'int)', 'short'),
  \ javaapi#method(0,0,'_exptype(', 'int)', 'int'),
  \ javaapi#method(0,0,'_level(', 'int)', 'int'),
  \ javaapi#method(0,0,'_firstch(', 'int)', 'int'),
  \ javaapi#method(0,0,'_nextsib(', 'int)', 'int'),
  \ javaapi#method(0,0,'_prevsib(', 'int)', 'int'),
  \ javaapi#method(0,0,'_parent(', 'int)', 'int'),
  \ javaapi#method(0,1,'dumpDTM(', 'OutputStream)', 'void'),
  \ javaapi#method(0,1,'dumpNode(', 'int)', 'String'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean)', 'void'),
  \ javaapi#method(0,1,'hasChildNodes(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'makeNodeHandle(', 'int)', 'int'),
  \ javaapi#method(0,1,'makeNodeIdentity(', 'int)', 'int'),
  \ javaapi#method(0,1,'getFirstChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getTypedFirstChild(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getLastChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, String, String)', 'int'),
  \ javaapi#method(0,1,'getFirstAttribute(', 'int)', 'int'),
  \ javaapi#method(0,0,'getFirstAttributeIdentity(', 'int)', 'int'),
  \ javaapi#method(0,0,'getTypedAttribute(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getNextSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getTypedNextSibling(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getPreviousSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextAttribute(', 'int)', 'int'),
  \ javaapi#method(0,0,'getNextAttributeIdentity(', 'int)', 'int'),
  \ javaapi#method(0,0,'declareNamespaceInContext(', 'int, int)', 'void'),
  \ javaapi#method(0,0,'findNamespaceContext(', 'int)', 'SuballocatedIntVector'),
  \ javaapi#method(0,0,'findInSortedSuballocatedIntVector(', 'SuballocatedIntVector, int)', 'int'),
  \ javaapi#method(0,1,'getFirstNamespaceNode(', 'int, boolean)', 'int'),
  \ javaapi#method(0,1,'getNextNamespaceNode(', 'int, int, boolean)', 'int'),
  \ javaapi#method(0,1,'getParent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDocument(', ')', 'int'),
  \ javaapi#method(0,1,'getOwnerDocument(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDocumentRoot(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValue(', 'int)', 'XMLString'),
  \ javaapi#method(0,1,'getStringValueChunkCount(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValueChunk(', 'int, int, int[])', 'char'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'String, String, int)', 'int'),
  \ javaapi#method(0,1,'getLocalNameFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNodeName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeNameX(', 'int)', 'String'),
  \ javaapi#method(0,1,'getLocalName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getPrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeValue(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeType(', 'int)', 'short'),
  \ javaapi#method(0,1,'getLevel(', 'int)', 'short'),
  \ javaapi#method(0,1,'getNodeIdent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNodeHandle(', 'int)', 'int'),
  \ javaapi#method(0,1,'isSupported(', 'String, String)', 'boolean'),
  \ javaapi#method(0,1,'getDocumentBaseURI(', ')', 'String'),
  \ javaapi#method(0,1,'setDocumentBaseURI(', 'String)', 'void'),
  \ javaapi#method(0,1,'getDocumentSystemIdentifier(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentEncoding(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentStandalone(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentVersion(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentAllDeclarationsProcessed(', ')', 'boolean'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationSystemIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationPublicIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getElementById(', 'String)', 'int'),
  \ javaapi#method(0,1,'getUnparsedEntityURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'supportsPreStripping(', ')', 'boolean'),
  \ javaapi#method(0,1,'isNodeAfter(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'isCharacterElementContentWhitespace(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isDocumentAllDeclarationsProcessed(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'dispatchCharactersEvents(', 'int, ContentHandler, boolean) throws SAXException', 'void'),
  \ javaapi#method(0,1,'dispatchToEvents(', 'int, ContentHandler) throws SAXException', 'void'),
  \ javaapi#method(0,1,'getNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'appendChild(', 'int, boolean, boolean)', 'void'),
  \ javaapi#method(0,1,'appendTextChild(', 'String)', 'void'),
  \ javaapi#method(0,0,'error(', 'String)', 'void'),
  \ javaapi#method(0,0,'getShouldStripWhitespace(', ')', 'boolean'),
  \ javaapi#method(0,0,'pushShouldStripWhitespace(', 'boolean)', 'void'),
  \ javaapi#method(0,0,'popShouldStripWhitespace(', ')', 'void'),
  \ javaapi#method(0,0,'setShouldStripWhitespace(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'documentRegistration(', ')', 'void'),
  \ javaapi#method(0,1,'documentRelease(', ')', 'void'),
  \ javaapi#method(0,1,'migrateTo(', 'DTMManager)', 'void'),
  \ javaapi#method(0,1,'getManager(', ')', 'DTMManager'),
  \ javaapi#method(0,1,'getDTMIDs(', ')', 'SuballocatedIntVector'),
  \ ])

call javaapi#class('DTMDefaultBaseIterators', 'DTMDefaultBaseTraversers', [
  \ javaapi#method(0,1,'DTMDefaultBaseIterators(', 'DTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean)', ''),
  \ javaapi#method(0,1,'DTMDefaultBaseIterators(', 'DTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean, int, boolean, boolean)', ''),
  \ javaapi#method(0,1,'getTypedAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getAxisIterator(', 'int)', 'DTMAxisIterator'),
  \ ])

call javaapi#class('DTMDefaultBaseTraversers', 'DTMDefaultBase', [
  \ javaapi#method(0,1,'DTMDefaultBaseTraversers(', 'DTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean)', ''),
  \ javaapi#method(0,1,'DTMDefaultBaseTraversers(', 'DTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean, int, boolean, boolean)', ''),
  \ javaapi#method(0,1,'getAxisTraverser(', 'int)', 'DTMAxisTraverser'),
  \ ])

call javaapi#class('DTMDocumentImpl', 'LexicalHandler', [
  \ javaapi#field(1,0,'DOCHANDLE_SHIFT', 'byte'),
  \ javaapi#field(1,0,'NODEHANDLE_MASK', 'int'),
  \ javaapi#field(1,0,'DOCHANDLE_MASK', 'int'),
  \ javaapi#field(0,0,'m_currentNode', 'int'),
  \ javaapi#field(0,0,'m_documentBaseURI', 'String'),
  \ javaapi#method(0,1,'DTMDocumentImpl(', 'DTMManager, int, DTMWSFilter, XMLStringFactory)', ''),
  \ javaapi#method(0,1,'setIncrementalSAXSource(', 'IncrementalSAXSource)', 'void'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean)', 'void'),
  \ javaapi#method(0,1,'setLocalNameTable(', 'DTMStringPool)', 'void'),
  \ javaapi#method(0,1,'getLocalNameTable(', ')', 'DTMStringPool'),
  \ javaapi#method(0,1,'setNsNameTable(', 'DTMStringPool)', 'void'),
  \ javaapi#method(0,1,'getNsNameTable(', ')', 'DTMStringPool'),
  \ javaapi#method(0,1,'setPrefixNameTable(', 'DTMStringPool)', 'void'),
  \ javaapi#method(0,1,'getPrefixNameTable(', ')', 'DTMStringPool'),
  \ javaapi#method(0,1,'getContentHandler(', ')', 'ContentHandler'),
  \ javaapi#method(0,1,'getLexicalHandler(', ')', 'LexicalHandler'),
  \ javaapi#method(0,1,'getEntityResolver(', ')', 'EntityResolver'),
  \ javaapi#method(0,1,'getDTDHandler(', ')', 'DTDHandler'),
  \ javaapi#method(0,1,'getErrorHandler(', ')', 'ErrorHandler'),
  \ javaapi#method(0,1,'getDeclHandler(', ')', 'DeclHandler'),
  \ javaapi#method(0,1,'needsTwoThreads(', ')', 'boolean'),
  \ javaapi#method(0,1,'characters(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endElement(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endPrefixMapping(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'ignorableWhitespace(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'processingInstruction(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'setDocumentLocator(', 'Locator)', 'void'),
  \ javaapi#method(0,1,'skippedEntity(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'startElement(', 'String, String, String, Attributes) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startPrefixMapping(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'comment(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endCDATA(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endDTD(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endEntity(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startCDATA(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'startDTD(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startEntity(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'hasChildNodes(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getFirstChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getLastChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, String, String)', 'int'),
  \ javaapi#method(0,1,'getFirstAttribute(', 'int)', 'int'),
  \ javaapi#method(0,1,'getFirstNamespaceNode(', 'int, boolean)', 'int'),
  \ javaapi#method(0,1,'getNextSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getPreviousSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextAttribute(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextNamespaceNode(', 'int, int, boolean)', 'int'),
  \ javaapi#method(0,1,'getNextDescendant(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getNextFollowing(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getNextPreceding(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getParent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDocumentRoot(', ')', 'int'),
  \ javaapi#method(0,1,'getDocument(', ')', 'int'),
  \ javaapi#method(0,1,'getOwnerDocument(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDocumentRoot(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValue(', 'int)', 'XMLString'),
  \ javaapi#method(0,1,'getStringValueChunkCount(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValueChunk(', 'int, int, int[])', 'char'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'String, String, int)', 'int'),
  \ javaapi#method(0,1,'getLocalNameFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeNameX(', 'int)', 'String'),
  \ javaapi#method(0,1,'getLocalName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getPrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeValue(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeType(', 'int)', 'short'),
  \ javaapi#method(0,1,'getLevel(', 'int)', 'short'),
  \ javaapi#method(0,1,'isSupported(', 'String, String)', 'boolean'),
  \ javaapi#method(0,1,'getDocumentBaseURI(', ')', 'String'),
  \ javaapi#method(0,1,'setDocumentBaseURI(', 'String)', 'void'),
  \ javaapi#method(0,1,'getDocumentSystemIdentifier(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentEncoding(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentStandalone(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentVersion(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentAllDeclarationsProcessed(', ')', 'boolean'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationSystemIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationPublicIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getElementById(', 'String)', 'int'),
  \ javaapi#method(0,1,'getUnparsedEntityURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'supportsPreStripping(', ')', 'boolean'),
  \ javaapi#method(0,1,'isNodeAfter(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'isCharacterElementContentWhitespace(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isDocumentAllDeclarationsProcessed(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'dispatchCharactersEvents(', 'int, ContentHandler, boolean) throws SAXException', 'void'),
  \ javaapi#method(0,1,'dispatchToEvents(', 'int, ContentHandler) throws SAXException', 'void'),
  \ javaapi#method(0,1,'getNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'appendChild(', 'int, boolean, boolean)', 'void'),
  \ javaapi#method(0,1,'appendTextChild(', 'String)', 'void'),
  \ javaapi#method(0,1,'getAxisTraverser(', 'int)', 'DTMAxisTraverser'),
  \ javaapi#method(0,1,'getAxisIterator(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object)', 'void'),
  \ javaapi#method(0,1,'getSourceLocatorFor(', 'int)', 'SourceLocator'),
  \ javaapi#method(0,1,'documentRegistration(', ')', 'void'),
  \ javaapi#method(0,1,'documentRelease(', ')', 'void'),
  \ javaapi#method(0,1,'migrateTo(', 'DTMManager)', 'void'),
  \ ])

call javaapi#class('DTMManagerDefault', 'DTMManager', [
  \ javaapi#field(0,0,'m_dtms', 'DTM'),
  \ javaapi#field(0,0,'m_readerManager', 'XMLReaderManager'),
  \ javaapi#field(0,0,'m_defaultHandler', 'DefaultHandler'),
  \ javaapi#method(0,1,'addDTM(', 'DTM, int)', 'void'),
  \ javaapi#method(0,1,'addDTM(', 'DTM, int, int)', 'void'),
  \ javaapi#method(0,1,'getFirstFreeDTMID(', ')', 'int'),
  \ javaapi#method(0,1,'DTMManagerDefault(', ')', ''),
  \ javaapi#method(0,1,'getDTM(', 'Source, boolean, DTMWSFilter, boolean, boolean)', 'DTM'),
  \ javaapi#method(0,1,'getDTMHandleFromNode(', 'Node)', 'int'),
  \ javaapi#method(0,1,'getXMLReader(', 'Source)', 'XMLReader'),
  \ javaapi#method(0,1,'releaseXMLReader(', 'XMLReader)', 'void'),
  \ javaapi#method(0,1,'getDTM(', 'int)', 'DTM'),
  \ javaapi#method(0,1,'getDTMIdentity(', 'DTM)', 'int'),
  \ javaapi#method(0,1,'release(', 'DTM, boolean)', 'boolean'),
  \ javaapi#method(0,1,'createDocumentFragment(', ')', 'DTM'),
  \ javaapi#method(0,1,'createDTMIterator(', 'int, DTMFilter, boolean)', 'DTMIterator'),
  \ javaapi#method(0,1,'createDTMIterator(', 'String, PrefixResolver)', 'DTMIterator'),
  \ javaapi#method(0,1,'createDTMIterator(', 'int)', 'DTMIterator'),
  \ javaapi#method(0,1,'createDTMIterator(', 'Object, int)', 'DTMIterator'),
  \ javaapi#method(0,1,'getExpandedNameTable(', 'DTM)', 'ExpandedNameTable'),
  \ ])

call javaapi#class('DTMNamedNodeMap', 'NamedNodeMap', [
  \ javaapi#method(0,1,'DTMNamedNodeMap(', 'DTM, int)', ''),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ javaapi#method(0,1,'getNamedItem(', 'String)', 'Node'),
  \ javaapi#method(0,1,'item(', 'int)', 'Node'),
  \ javaapi#method(0,1,'setNamedItem(', 'Node)', 'Node'),
  \ javaapi#method(0,1,'removeNamedItem(', 'String)', 'Node'),
  \ javaapi#method(0,1,'getNamedItemNS(', 'String, String)', 'Node'),
  \ javaapi#method(0,1,'setNamedItemNS(', 'Node) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'removeNamedItemNS(', 'String, String) throws DOMException', 'Node'),
  \ ])

call javaapi#class('DTMNodeIterator', 'NodeIterator', [
  \ javaapi#method(0,1,'DTMNodeIterator(', 'DTMIterator)', ''),
  \ javaapi#method(0,1,'getDTMIterator(', ')', 'DTMIterator'),
  \ javaapi#method(0,1,'detach(', ')', 'void'),
  \ javaapi#method(0,1,'getExpandEntityReferences(', ')', 'boolean'),
  \ javaapi#method(0,1,'getFilter(', ')', 'NodeFilter'),
  \ javaapi#method(0,1,'getRoot(', ')', 'Node'),
  \ javaapi#method(0,1,'getWhatToShow(', ')', 'int'),
  \ javaapi#method(0,1,'nextNode(', ') throws DOMException', 'Node'),
  \ javaapi#method(0,1,'previousNode(', ')', 'Node'),
  \ ])

call javaapi#class('DTMNodeList', 'DTMNodeListBase', [
  \ javaapi#method(0,1,'DTMNodeList(', 'DTMIterator)', ''),
  \ javaapi#method(0,1,'getDTMIterator(', ')', 'DTMIterator'),
  \ javaapi#method(0,1,'item(', 'int)', 'Node'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ ])

call javaapi#class('DTMNodeListBase', 'NodeList', [
  \ javaapi#method(0,1,'DTMNodeListBase(', ')', ''),
  \ javaapi#method(0,1,'item(', 'int)', 'Node'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ ])

call javaapi#class('DTMNodeProxy', 'DocumentFragment', [
  \ javaapi#field(0,1,'dtm', 'DTM'),
  \ javaapi#field(0,0,'fDocumentURI', 'String'),
  \ javaapi#field(0,0,'actualEncoding', 'String'),
  \ javaapi#method(0,1,'DTMNodeProxy(', 'DTM, int)', ''),
  \ javaapi#method(0,1,'getDTM(', ')', 'DTM'),
  \ javaapi#method(0,1,'getDTMNodeNumber(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Node)', 'boolean'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'sameNodeAs(', 'Node)', 'boolean'),
  \ javaapi#method(0,1,'getNodeName(', ')', 'String'),
  \ javaapi#method(0,1,'getTarget(', ')', 'String'),
  \ javaapi#method(0,1,'getLocalName(', ')', 'String'),
  \ javaapi#method(0,1,'getPrefix(', ')', 'String'),
  \ javaapi#method(0,1,'setPrefix(', 'String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getNamespaceURI(', ')', 'String'),
  \ javaapi#method(0,1,'supports(', 'String, String)', 'boolean'),
  \ javaapi#method(0,1,'isSupported(', 'String, String)', 'boolean'),
  \ javaapi#method(0,1,'getNodeValue(', ') throws DOMException', 'String'),
  \ javaapi#method(0,1,'getStringValue(', ') throws DOMException', 'String'),
  \ javaapi#method(0,1,'setNodeValue(', 'String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getNodeType(', ')', 'short'),
  \ javaapi#method(0,1,'getParentNode(', ')', 'Node'),
  \ javaapi#method(0,1,'getOwnerNode(', ')', 'Node'),
  \ javaapi#method(0,1,'getChildNodes(', ')', 'NodeList'),
  \ javaapi#method(0,1,'getFirstChild(', ')', 'Node'),
  \ javaapi#method(0,1,'getLastChild(', ')', 'Node'),
  \ javaapi#method(0,1,'getPreviousSibling(', ')', 'Node'),
  \ javaapi#method(0,1,'getNextSibling(', ')', 'Node'),
  \ javaapi#method(0,1,'getAttributes(', ')', 'NamedNodeMap'),
  \ javaapi#method(0,1,'hasAttribute(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'hasAttributeNS(', 'String, String)', 'boolean'),
  \ javaapi#method(0,1,'getOwnerDocument(', ')', 'Document'),
  \ javaapi#method(0,1,'insertBefore(', 'Node, Node) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'replaceChild(', 'Node, Node) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'removeChild(', 'Node) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'appendChild(', 'Node) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'hasChildNodes(', ')', 'boolean'),
  \ javaapi#method(0,1,'cloneNode(', 'boolean)', 'Node'),
  \ javaapi#method(0,1,'getDoctype(', ')', 'DocumentType'),
  \ javaapi#method(0,1,'getImplementation(', ')', 'DOMImplementation'),
  \ javaapi#method(0,1,'getDocumentElement(', ')', 'Element'),
  \ javaapi#method(0,1,'createElement(', 'String) throws DOMException', 'Element'),
  \ javaapi#method(0,1,'createDocumentFragment(', ')', 'DocumentFragment'),
  \ javaapi#method(0,1,'createTextNode(', 'String)', 'Text'),
  \ javaapi#method(0,1,'createComment(', 'String)', 'Comment'),
  \ javaapi#method(0,1,'createCDATASection(', 'String) throws DOMException', 'CDATASection'),
  \ javaapi#method(0,1,'createProcessingInstruction(', 'String, String) throws DOMException', 'ProcessingInstruction'),
  \ javaapi#method(0,1,'createAttribute(', 'String) throws DOMException', 'Attr'),
  \ javaapi#method(0,1,'createEntityReference(', 'String) throws DOMException', 'EntityReference'),
  \ javaapi#method(0,1,'getElementsByTagName(', 'String)', 'NodeList'),
  \ javaapi#method(0,1,'importNode(', 'Node, boolean) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'createElementNS(', 'String, String) throws DOMException', 'Element'),
  \ javaapi#method(0,1,'createAttributeNS(', 'String, String) throws DOMException', 'Attr'),
  \ javaapi#method(0,1,'getElementsByTagNameNS(', 'String, String)', 'NodeList'),
  \ javaapi#method(0,1,'getElementById(', 'String)', 'Element'),
  \ javaapi#method(0,1,'splitText(', 'int) throws DOMException', 'Text'),
  \ javaapi#method(0,1,'getData(', ') throws DOMException', 'String'),
  \ javaapi#method(0,1,'setData(', 'String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ javaapi#method(0,1,'substringData(', 'int, int) throws DOMException', 'String'),
  \ javaapi#method(0,1,'appendData(', 'String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'insertData(', 'int, String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'deleteData(', 'int, int) throws DOMException', 'void'),
  \ javaapi#method(0,1,'replaceData(', 'int, int, String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getTagName(', ')', 'String'),
  \ javaapi#method(0,1,'getAttribute(', 'String)', 'String'),
  \ javaapi#method(0,1,'setAttribute(', 'String, String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'removeAttribute(', 'String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getAttributeNode(', 'String)', 'Attr'),
  \ javaapi#method(0,1,'setAttributeNode(', 'Attr) throws DOMException', 'Attr'),
  \ javaapi#method(0,1,'removeAttributeNode(', 'Attr) throws DOMException', 'Attr'),
  \ javaapi#method(0,1,'hasAttributes(', ')', 'boolean'),
  \ javaapi#method(0,1,'normalize(', ')', 'void'),
  \ javaapi#method(0,1,'getAttributeNS(', 'String, String)', 'String'),
  \ javaapi#method(0,1,'setAttributeNS(', 'String, String, String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'removeAttributeNS(', 'String, String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getAttributeNodeNS(', 'String, String)', 'Attr'),
  \ javaapi#method(0,1,'setAttributeNodeNS(', 'Attr) throws DOMException', 'Attr'),
  \ javaapi#method(0,1,'getName(', ')', 'String'),
  \ javaapi#method(0,1,'getSpecified(', ')', 'boolean'),
  \ javaapi#method(0,1,'getValue(', ')', 'String'),
  \ javaapi#method(0,1,'setValue(', 'String)', 'void'),
  \ javaapi#method(0,1,'getOwnerElement(', ')', 'Element'),
  \ javaapi#method(0,1,'adoptNode(', 'Node) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'getInputEncoding(', ')', 'String'),
  \ javaapi#method(0,1,'setEncoding(', 'String)', 'void'),
  \ javaapi#method(0,1,'getStandalone(', ')', 'boolean'),
  \ javaapi#method(0,1,'setStandalone(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getStrictErrorChecking(', ')', 'boolean'),
  \ javaapi#method(0,1,'setStrictErrorChecking(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getVersion(', ')', 'String'),
  \ javaapi#method(0,1,'setVersion(', 'String)', 'void'),
  \ javaapi#method(0,1,'setUserData(', 'String, Object, UserDataHandler)', 'Object'),
  \ javaapi#method(0,1,'getUserData(', 'String)', 'Object'),
  \ javaapi#method(0,1,'getFeature(', 'String, String)', 'Object'),
  \ javaapi#method(0,1,'isEqualNode(', 'Node)', 'boolean'),
  \ javaapi#method(0,1,'lookupNamespaceURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'isDefaultNamespace(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'lookupPrefix(', 'String)', 'String'),
  \ javaapi#method(0,1,'isSameNode(', 'Node)', 'boolean'),
  \ javaapi#method(0,1,'setTextContent(', 'String) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getTextContent(', ') throws DOMException', 'String'),
  \ javaapi#method(0,1,'compareDocumentPosition(', 'Node) throws DOMException', 'short'),
  \ javaapi#method(0,1,'getBaseURI(', ')', 'String'),
  \ javaapi#method(0,1,'renameNode(', 'Node, String, String) throws DOMException', 'Node'),
  \ javaapi#method(0,1,'normalizeDocument(', ')', 'void'),
  \ javaapi#method(0,1,'getDomConfig(', ')', 'DOMConfiguration'),
  \ javaapi#method(0,1,'setDocumentURI(', 'String)', 'void'),
  \ javaapi#method(0,1,'getDocumentURI(', ')', 'String'),
  \ javaapi#method(0,1,'getActualEncoding(', ')', 'String'),
  \ javaapi#method(0,1,'setActualEncoding(', 'String)', 'void'),
  \ javaapi#method(0,1,'replaceWholeText(', 'String) throws DOMException', 'Text'),
  \ javaapi#method(0,1,'getWholeText(', ')', 'String'),
  \ javaapi#method(0,1,'isElementContentWhitespace(', ')', 'boolean'),
  \ javaapi#method(0,1,'setIdAttribute(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'setIdAttribute(', 'String, boolean)', 'void'),
  \ javaapi#method(0,1,'setIdAttributeNode(', 'Attr, boolean)', 'void'),
  \ javaapi#method(0,1,'setIdAttributeNS(', 'String, String, boolean)', 'void'),
  \ javaapi#method(0,1,'getSchemaTypeInfo(', ')', 'TypeInfo'),
  \ javaapi#method(0,1,'isId(', ')', 'boolean'),
  \ javaapi#method(0,1,'getXmlEncoding(', ')', 'String'),
  \ javaapi#method(0,1,'setXmlEncoding(', 'String)', 'void'),
  \ javaapi#method(0,1,'getXmlStandalone(', ')', 'boolean'),
  \ javaapi#method(0,1,'setXmlStandalone(', 'boolean) throws DOMException', 'void'),
  \ javaapi#method(0,1,'getXmlVersion(', ')', 'String'),
  \ javaapi#method(0,1,'setXmlVersion(', 'String) throws DOMException', 'void'),
  \ ])

call javaapi#class('DTMSafeStringPool', 'DTMStringPool', [
  \ javaapi#method(0,1,'DTMSafeStringPool(', ')', ''),
  \ javaapi#method(0,1,'removeAllElements(', ')', 'void'),
  \ javaapi#method(0,1,'indexToString(', 'int) throws ArrayIndexOutOfBoundsException', 'String'),
  \ javaapi#method(0,1,'stringToIndex(', 'String)', 'int'),
  \ javaapi#method(1,1,'_main(', 'String[])', 'void'),
  \ ])

call javaapi#class('DTMStringPool', '', [
  \ javaapi#field(1,1,'NULL', 'int'),
  \ javaapi#method(0,1,'DTMStringPool(', 'int)', ''),
  \ javaapi#method(0,1,'DTMStringPool(', ')', ''),
  \ javaapi#method(0,1,'removeAllElements(', ')', 'void'),
  \ javaapi#method(0,1,'indexToString(', 'int) throws ArrayIndexOutOfBoundsException', 'String'),
  \ javaapi#method(0,1,'stringToIndex(', 'String)', 'int'),
  \ javaapi#method(1,1,'_main(', 'String[])', 'void'),
  \ ])

call javaapi#class('DTMTreeWalker', '', [
  \ javaapi#field(0,0,'m_dtm', 'DTM'),
  \ javaapi#method(0,1,'setDTM(', 'DTM)', 'void'),
  \ javaapi#method(0,1,'getcontentHandler(', ')', 'ContentHandler'),
  \ javaapi#method(0,1,'setcontentHandler(', 'ContentHandler)', 'void'),
  \ javaapi#method(0,1,'DTMTreeWalker(', ')', ''),
  \ javaapi#method(0,1,'DTMTreeWalker(', 'ContentHandler, DTM)', ''),
  \ javaapi#method(0,1,'traverse(', 'int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'traverse(', 'int, int) throws SAXException', 'void'),
  \ javaapi#method(0,0,'startNode(', 'int) throws SAXException', 'void'),
  \ javaapi#method(0,0,'endNode(', 'int) throws SAXException', 'void'),
  \ ])

call javaapi#class('EmptyIterator', 'DTMAxisIterator', [
  \ javaapi#method(1,1,'getInstance(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getStartNode(', ')', 'int'),
  \ javaapi#method(0,1,'isReverse(', ')', 'boolean'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getNodeByPosition(', 'int)', 'int'),
  \ ])

call javaapi#class('ExpandedNameTable', '', [
  \ javaapi#field(1,1,'ELEMENT', 'int'),
  \ javaapi#field(1,1,'ATTRIBUTE', 'int'),
  \ javaapi#field(1,1,'TEXT', 'int'),
  \ javaapi#field(1,1,'CDATA_SECTION', 'int'),
  \ javaapi#field(1,1,'ENTITY_REFERENCE', 'int'),
  \ javaapi#field(1,1,'ENTITY', 'int'),
  \ javaapi#field(1,1,'PROCESSING_INSTRUCTION', 'int'),
  \ javaapi#field(1,1,'COMMENT', 'int'),
  \ javaapi#field(1,1,'DOCUMENT', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_TYPE', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_FRAGMENT', 'int'),
  \ javaapi#field(1,1,'NOTATION', 'int'),
  \ javaapi#field(1,1,'NAMESPACE', 'int'),
  \ javaapi#method(0,1,'ExpandedNameTable(', ')', ''),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'String, String, int)', 'int'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'String, String, int, boolean)', 'int'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getLocalName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getLocalNameID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNamespace(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getType(', 'int)', 'short'),
  \ javaapi#method(0,1,'getSize(', ')', 'int'),
  \ javaapi#method(0,1,'getExtendedTypes(', ')', 'ExtendedType'),
  \ ])

call javaapi#class('ExtendedType', '', [
  \ javaapi#method(0,1,'ExtendedType(', 'int, String, String)', ''),
  \ javaapi#method(0,1,'ExtendedType(', 'int, String, String, int)', ''),
  \ javaapi#method(0,0,'redefine(', 'int, String, String)', 'void'),
  \ javaapi#method(0,0,'redefine(', 'int, String, String, int)', 'void'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'ExtendedType)', 'boolean'),
  \ javaapi#method(0,1,'getNodeType(', ')', 'int'),
  \ javaapi#method(0,1,'getLocalName(', ')', 'String'),
  \ javaapi#method(0,1,'getNamespace(', ')', 'String'),
  \ ])

call javaapi#interface('IncrementalSAXSource', '', [
  \ javaapi#method(0,1,'setContentHandler(', 'ContentHandler)', 'void'),
  \ javaapi#method(0,1,'setLexicalHandler(', 'LexicalHandler)', 'void'),
  \ javaapi#method(0,1,'setDTDHandler(', 'DTDHandler)', 'void'),
  \ javaapi#method(0,1,'deliverMoreNodes(', 'boolean)', 'Object'),
  \ javaapi#method(0,1,'startParse(', 'InputSource) throws SAXException', 'void'),
  \ ])

call javaapi#class('IncrementalSAXSource_Filter', 'Runnable', [
  \ javaapi#method(0,1,'IncrementalSAXSource_Filter(', ')', ''),
  \ javaapi#method(0,1,'IncrementalSAXSource_Filter(', 'CoroutineManager, int)', ''),
  \ javaapi#method(1,1,'createIncrementalSAXSource(', 'CoroutineManager, int)', 'IncrementalSAXSource'),
  \ javaapi#method(0,1,'init(', 'CoroutineManager, int, int)', 'void'),
  \ javaapi#method(0,1,'setXMLReader(', 'XMLReader)', 'void'),
  \ javaapi#method(0,1,'setContentHandler(', 'ContentHandler)', 'void'),
  \ javaapi#method(0,1,'setDTDHandler(', 'DTDHandler)', 'void'),
  \ javaapi#method(0,1,'setLexicalHandler(', 'LexicalHandler)', 'void'),
  \ javaapi#method(0,1,'setErrHandler(', 'ErrorHandler)', 'void'),
  \ javaapi#method(0,1,'setReturnFrequency(', 'int)', 'void'),
  \ javaapi#method(0,1,'characters(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endElement(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endPrefixMapping(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'ignorableWhitespace(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'processingInstruction(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'setDocumentLocator(', 'Locator)', 'void'),
  \ javaapi#method(0,1,'skippedEntity(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'startElement(', 'String, String, String, Attributes) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startPrefixMapping(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'comment(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endCDATA(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endDTD(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endEntity(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startCDATA(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'startDTD(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startEntity(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'notationDecl(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'unparsedEntityDecl(', 'String, String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'error(', 'SAXParseException) throws SAXException', 'void'),
  \ javaapi#method(0,1,'fatalError(', 'SAXParseException) throws SAXException', 'void'),
  \ javaapi#method(0,1,'warning(', 'SAXParseException) throws SAXException', 'void'),
  \ javaapi#method(0,1,'getSourceCoroutineID(', ')', 'int'),
  \ javaapi#method(0,1,'getControllerCoroutineID(', ')', 'int'),
  \ javaapi#method(0,1,'getCoroutineManager(', ')', 'CoroutineManager'),
  \ javaapi#method(0,0,'count_and_yield(', 'boolean) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startParse(', 'InputSource) throws SAXException', 'void'),
  \ javaapi#method(0,1,'run(', ')', 'void'),
  \ javaapi#method(0,1,'deliverMoreNodes(', 'boolean)', 'Object'),
  \ ])

call javaapi#class('IncrementalSAXSource_Xerces', 'IncrementalSAXSource', [
  \ javaapi#method(0,1,'IncrementalSAXSource_Xerces(', ') throws NoSuchMethodException', ''),
  \ javaapi#method(0,1,'IncrementalSAXSource_Xerces(', 'SAXParser) throws NoSuchMethodException', ''),
  \ javaapi#method(1,1,'createIncrementalSAXSource(', ')', 'IncrementalSAXSource'),
  \ javaapi#method(1,1,'createIncrementalSAXSource(', 'SAXParser)', 'IncrementalSAXSource'),
  \ javaapi#method(0,1,'setContentHandler(', 'ContentHandler)', 'void'),
  \ javaapi#method(0,1,'setLexicalHandler(', 'LexicalHandler)', 'void'),
  \ javaapi#method(0,1,'setDTDHandler(', 'DTDHandler)', 'void'),
  \ javaapi#method(0,1,'startParse(', 'InputSource) throws SAXException', 'void'),
  \ javaapi#method(0,1,'deliverMoreNodes(', 'boolean)', 'Object'),
  \ javaapi#method(1,1,'_main(', 'String[])', 'void'),
  \ ])

call javaapi#class('NodeLocator', 'SourceLocator', [
  \ javaapi#field(0,0,'m_publicId', 'String'),
  \ javaapi#field(0,0,'m_systemId', 'String'),
  \ javaapi#field(0,0,'m_lineNumber', 'int'),
  \ javaapi#field(0,0,'m_columnNumber', 'int'),
  \ javaapi#method(0,1,'NodeLocator(', 'String, String, int, int)', ''),
  \ javaapi#method(0,1,'getPublicId(', ')', 'String'),
  \ javaapi#method(0,1,'getSystemId(', ')', 'String'),
  \ javaapi#method(0,1,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,1,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

