call javaapi#namespace('com.sun.org.apache.xerces.internal.impl')

call javaapi#class('Constants', '', [
  \ javaapi#field(1,1,'NS_XMLSCHEMA', 'String'),
  \ javaapi#field(1,1,'NS_DTD', 'String'),
  \ javaapi#field(1,1,'SUN_SCHEMA_FEATURE_PREFIX', 'String'),
  \ javaapi#field(1,1,'SUN_REPORT_IGNORED_ELEMENT_CONTENT_WHITESPACE', 'String'),
  \ javaapi#field(1,1,'ZEPHYR_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,1,'STAX_PROPERTIES', 'String'),
  \ javaapi#field(1,1,'STAX_ENTITY_RESOLVER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'STAX_REPORT_CDATA_EVENT', 'String'),
  \ javaapi#field(1,1,'READER_IN_DEFINED_STATE', 'String'),
  \ javaapi#field(1,1,'ADD_NAMESPACE_DECL_AS_ATTRIBUTE', 'String'),
  \ javaapi#field(1,1,'ESCAPE_CHARACTERS', 'String'),
  \ javaapi#field(1,1,'REUSE_INSTANCE', 'String'),
  \ javaapi#field(1,1,'SUN_DOM_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,1,'SUN_DOM_ANCESTOR_CHECCK', 'String'),
  \ javaapi#field(1,1,'IGNORE_EXTERNAL_DTD', 'String'),
  \ javaapi#field(1,1,'SAX_FEATURE_PREFIX', 'String'),
  \ javaapi#field(1,1,'NAMESPACES_FEATURE', 'String'),
  \ javaapi#field(1,1,'NAMESPACE_PREFIXES_FEATURE', 'String'),
  \ javaapi#field(1,1,'STRING_INTERNING_FEATURE', 'String'),
  \ javaapi#field(1,1,'VALIDATION_FEATURE', 'String'),
  \ javaapi#field(1,1,'EXTERNAL_GENERAL_ENTITIES_FEATURE', 'String'),
  \ javaapi#field(1,1,'EXTERNAL_PARAMETER_ENTITIES_FEATURE', 'String'),
  \ javaapi#field(1,1,'LEXICAL_HANDLER_PARAMETER_ENTITIES_FEATURE', 'String'),
  \ javaapi#field(1,1,'IS_STANDALONE_FEATURE', 'String'),
  \ javaapi#field(1,1,'RESOLVE_DTD_URIS_FEATURE', 'String'),
  \ javaapi#field(1,1,'USE_ATTRIBUTES2_FEATURE', 'String'),
  \ javaapi#field(1,1,'USE_LOCATOR2_FEATURE', 'String'),
  \ javaapi#field(1,1,'USE_ENTITY_RESOLVER2_FEATURE', 'String'),
  \ javaapi#field(1,1,'UNICODE_NORMALIZATION_CHECKING_FEATURE', 'String'),
  \ javaapi#field(1,1,'XMLNS_URIS_FEATURE', 'String'),
  \ javaapi#field(1,1,'XML_11_FEATURE', 'String'),
  \ javaapi#field(1,1,'ALLOW_DTD_EVENTS_AFTER_ENDDTD_FEATURE', 'String'),
  \ javaapi#field(1,1,'SAX_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,1,'DECLARATION_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'LEXICAL_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'DOM_NODE_PROPERTY', 'String'),
  \ javaapi#field(1,1,'XML_STRING_PROPERTY', 'String'),
  \ javaapi#field(1,1,'FEATURE_SECURE_PROCESSING', 'String'),
  \ javaapi#field(1,1,'DOCUMENT_XML_VERSION_PROPERTY', 'String'),
  \ javaapi#field(1,1,'JAXP_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,1,'SCHEMA_SOURCE', 'String'),
  \ javaapi#field(1,1,'SCHEMA_LANGUAGE', 'String'),
  \ javaapi#field(1,1,'SYSTEM_PROPERTY_ELEMENT_ATTRIBUTE_LIMIT', 'String'),
  \ javaapi#field(1,1,'INCLUDE_COMMENTS_FEATURE', 'String'),
  \ javaapi#field(1,1,'CREATE_CDATA_NODES_FEATURE', 'String'),
  \ javaapi#field(1,1,'LOAD_AS_INFOSET', 'String'),
  \ javaapi#field(1,1,'DOM_CANONICAL_FORM', 'String'),
  \ javaapi#field(1,1,'DOM_CDATA_SECTIONS', 'String'),
  \ javaapi#field(1,1,'DOM_COMMENTS', 'String'),
  \ javaapi#field(1,1,'DOM_CHARSET_OVERRIDES_XML_ENCODING', 'String'),
  \ javaapi#field(1,1,'DOM_DATATYPE_NORMALIZATION', 'String'),
  \ javaapi#field(1,1,'DOM_ENTITIES', 'String'),
  \ javaapi#field(1,1,'DOM_INFOSET', 'String'),
  \ javaapi#field(1,1,'DOM_NAMESPACES', 'String'),
  \ javaapi#field(1,1,'DOM_NAMESPACE_DECLARATIONS', 'String'),
  \ javaapi#field(1,1,'DOM_SUPPORTED_MEDIATYPES_ONLY', 'String'),
  \ javaapi#field(1,1,'DOM_VALIDATE_IF_SCHEMA', 'String'),
  \ javaapi#field(1,1,'DOM_VALIDATE', 'String'),
  \ javaapi#field(1,1,'DOM_ELEMENT_CONTENT_WHITESPACE', 'String'),
  \ javaapi#field(1,1,'DOM_DISCARD_DEFAULT_CONTENT', 'String'),
  \ javaapi#field(1,1,'DOM_NORMALIZE_CHARACTERS', 'String'),
  \ javaapi#field(1,1,'DOM_CHECK_CHAR_NORMALIZATION', 'String'),
  \ javaapi#field(1,1,'DOM_WELLFORMED', 'String'),
  \ javaapi#field(1,1,'DOM_SPLIT_CDATA', 'String'),
  \ javaapi#field(1,1,'DOM_FORMAT_PRETTY_PRINT', 'String'),
  \ javaapi#field(1,1,'DOM_XMLDECL', 'String'),
  \ javaapi#field(1,1,'DOM_UNKNOWNCHARS', 'String'),
  \ javaapi#field(1,1,'DOM_CERTIFIED', 'String'),
  \ javaapi#field(1,1,'DOM_DISALLOW_DOCTYPE', 'String'),
  \ javaapi#field(1,1,'DOM_IGNORE_UNKNOWN_CHARACTER_DENORMALIZATIONS', 'String'),
  \ javaapi#field(1,1,'DOM_RESOURCE_RESOLVER', 'String'),
  \ javaapi#field(1,1,'DOM_ERROR_HANDLER', 'String'),
  \ javaapi#field(1,1,'DOM_SCHEMA_TYPE', 'String'),
  \ javaapi#field(1,1,'DOM_SCHEMA_LOCATION', 'String'),
  \ javaapi#field(1,1,'DOM_ANCESTOR_CHECCK', 'String'),
  \ javaapi#field(1,1,'DOM_PSVI', 'String'),
  \ javaapi#field(1,1,'XERCES_FEATURE_PREFIX', 'String'),
  \ javaapi#field(1,1,'SCHEMA_VALIDATION_FEATURE', 'String'),
  \ javaapi#field(1,1,'SCHEMA_NORMALIZED_VALUE', 'String'),
  \ javaapi#field(1,1,'SCHEMA_ELEMENT_DEFAULT', 'String'),
  \ javaapi#field(1,1,'SCHEMA_FULL_CHECKING', 'String'),
  \ javaapi#field(1,1,'SCHEMA_AUGMENT_PSVI', 'String'),
  \ javaapi#field(1,1,'DYNAMIC_VALIDATION_FEATURE', 'String'),
  \ javaapi#field(1,1,'WARN_ON_DUPLICATE_ATTDEF_FEATURE', 'String'),
  \ javaapi#field(1,1,'WARN_ON_UNDECLARED_ELEMDEF_FEATURE', 'String'),
  \ javaapi#field(1,1,'WARN_ON_DUPLICATE_ENTITYDEF_FEATURE', 'String'),
  \ javaapi#field(1,1,'ALLOW_JAVA_ENCODINGS_FEATURE', 'String'),
  \ javaapi#field(1,1,'DISALLOW_DOCTYPE_DECL_FEATURE', 'String'),
  \ javaapi#field(1,1,'CONTINUE_AFTER_FATAL_ERROR_FEATURE', 'String'),
  \ javaapi#field(1,1,'LOAD_DTD_GRAMMAR_FEATURE', 'String'),
  \ javaapi#field(1,1,'LOAD_EXTERNAL_DTD_FEATURE', 'String'),
  \ javaapi#field(1,1,'DEFER_NODE_EXPANSION_FEATURE', 'String'),
  \ javaapi#field(1,1,'CREATE_ENTITY_REF_NODES_FEATURE', 'String'),
  \ javaapi#field(1,1,'INCLUDE_IGNORABLE_WHITESPACE', 'String'),
  \ javaapi#field(1,1,'DEFAULT_ATTRIBUTE_VALUES_FEATURE', 'String'),
  \ javaapi#field(1,1,'VALIDATE_CONTENT_MODELS_FEATURE', 'String'),
  \ javaapi#field(1,1,'VALIDATE_DATATYPES_FEATURE', 'String'),
  \ javaapi#field(1,1,'BALANCE_SYNTAX_TREES', 'String'),
  \ javaapi#field(1,1,'NOTIFY_CHAR_REFS_FEATURE', 'String'),
  \ javaapi#field(1,1,'NOTIFY_BUILTIN_REFS_FEATURE', 'String'),
  \ javaapi#field(1,1,'STANDARD_URI_CONFORMANT_FEATURE', 'String'),
  \ javaapi#field(1,1,'GENERATE_SYNTHETIC_ANNOTATIONS_FEATURE', 'String'),
  \ javaapi#field(1,1,'VALIDATE_ANNOTATIONS_FEATURE', 'String'),
  \ javaapi#field(1,1,'HONOUR_ALL_SCHEMALOCATIONS_FEATURE', 'String'),
  \ javaapi#field(1,1,'NAMESPACE_GROWTH_FEATURE', 'String'),
  \ javaapi#field(1,1,'TOLERATE_DUPLICATES_FEATURE', 'String'),
  \ javaapi#field(1,1,'XINCLUDE_FEATURE', 'String'),
  \ javaapi#field(1,1,'XINCLUDE_FIXUP_BASE_URIS_FEATURE', 'String'),
  \ javaapi#field(1,1,'XINCLUDE_FIXUP_LANGUAGE_FEATURE', 'String'),
  \ javaapi#field(1,1,'USE_GRAMMAR_POOL_ONLY_FEATURE', 'String'),
  \ javaapi#field(1,1,'PARSER_SETTINGS', 'String'),
  \ javaapi#field(1,1,'XINCLUDE_AWARE', 'String'),
  \ javaapi#field(1,1,'IGNORE_SCHEMA_LOCATION_HINTS', 'String'),
  \ javaapi#field(1,1,'CHANGE_IGNORABLE_CHARACTERS_INTO_IGNORABLE_WHITESPACES', 'String'),
  \ javaapi#field(1,1,'XERCES_PROPERTY_PREFIX', 'String'),
  \ javaapi#field(1,1,'CURRENT_ELEMENT_NODE_PROPERTY', 'String'),
  \ javaapi#field(1,1,'DOCUMENT_CLASS_NAME_PROPERTY', 'String'),
  \ javaapi#field(1,1,'SYMBOL_TABLE_PROPERTY', 'String'),
  \ javaapi#field(1,1,'ERROR_REPORTER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'ERROR_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'XINCLUDE_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'XPOINTER_HANDLER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'ENTITY_MANAGER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'BUFFER_SIZE_PROPERTY', 'String'),
  \ javaapi#field(1,1,'SECURITY_MANAGER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'LOCALE_PROPERTY', 'String'),
  \ javaapi#field(1,0,'SECURITY_MANAGER', 'String'),
  \ javaapi#field(1,1,'ENTITY_RESOLVER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'XMLGRAMMAR_POOL_PROPERTY', 'String'),
  \ javaapi#field(1,1,'DATATYPE_VALIDATOR_FACTORY_PROPERTY', 'String'),
  \ javaapi#field(1,1,'DOCUMENT_SCANNER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'DTD_SCANNER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'DTD_PROCESSOR_PROPERTY', 'String'),
  \ javaapi#field(1,1,'VALIDATOR_PROPERTY', 'String'),
  \ javaapi#field(1,1,'DTD_VALIDATOR_PROPERTY', 'String'),
  \ javaapi#field(1,1,'SCHEMA_VALIDATOR_PROPERTY', 'String'),
  \ javaapi#field(1,1,'SCHEMA_LOCATION', 'String'),
  \ javaapi#field(1,1,'SCHEMA_NONS_LOCATION', 'String'),
  \ javaapi#field(1,1,'NAMESPACE_BINDER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'NAMESPACE_CONTEXT_PROPERTY', 'String'),
  \ javaapi#field(1,1,'VALIDATION_MANAGER_PROPERTY', 'String'),
  \ javaapi#field(1,1,'XPOINTER_SCHEMA_PROPERTY', 'String'),
  \ javaapi#field(1,1,'SCHEMA_DV_FACTORY_PROPERTY', 'String'),
  \ javaapi#field(1,1,'ELEMENT_PSVI', 'String'),
  \ javaapi#field(1,1,'ATTRIBUTE_PSVI', 'String'),
  \ javaapi#field(1,1,'ATTRIBUTE_DECLARED', 'String'),
  \ javaapi#field(1,1,'ENTITY_EXPANSION_LIMIT', 'String'),
  \ javaapi#field(1,1,'MAX_OCCUR_LIMIT', 'String'),
  \ javaapi#field(1,1,'TYPEINFO', 'String'),
  \ javaapi#field(1,1,'ID_ATTRIBUTE', 'String'),
  \ javaapi#field(1,1,'ENTITY_SKIPPED', 'String'),
  \ javaapi#field(1,1,'CHAR_REF_PROBABLE_WS', 'String'),
  \ javaapi#field(1,1,'LAST_ENTITY', 'String'),
  \ javaapi#field(1,1,'XML_VERSION_ERROR', 'short'),
  \ javaapi#field(1,1,'XML_VERSION_1_0', 'short'),
  \ javaapi#field(1,1,'XML_VERSION_1_1', 'short'),
  \ javaapi#field(1,1,'ANONYMOUS_TYPE_NAMESPACE', 'String'),
  \ javaapi#field(1,1,'SCHEMA_1_1_SUPPORT', 'boolean'),
  \ javaapi#field(1,1,'SCHEMA_VERSION_1_0', 'short'),
  \ javaapi#field(1,1,'SCHEMA_VERSION_1_0_EXTENDED', 'short'),
  \ javaapi#method(1,1,'getSAXFeatures(', ')', 'Enumeration'),
  \ javaapi#method(1,1,'getSAXProperties(', ')', 'Enumeration'),
  \ javaapi#method(1,1,'getXercesFeatures(', ')', 'Enumeration'),
  \ javaapi#method(1,1,'getXercesProperties(', ')', 'Enumeration'),
  \ javaapi#method(1,1,'main(', 'String[])', 'void'),
  \ ])

call javaapi#interface('ExternalSubsetResolver', 'XMLEntityResolver', [
  \ javaapi#method(0,1,'getExternalSubset(', 'XMLDTDDescription) throws XNIException, IOException', 'XMLInputSource'),
  \ ])

call javaapi#class('PropertyManager', '', [
  \ javaapi#field(1,1,'STAX_NOTATIONS', 'String'),
  \ javaapi#field(1,1,'STAX_ENTITIES', 'String'),
  \ javaapi#field(1,1,'CONTEXT_READER', 'int'),
  \ javaapi#field(1,1,'CONTEXT_WRITER', 'int'),
  \ javaapi#method(0,1,'PropertyManager(', 'int)', ''),
  \ javaapi#method(0,1,'PropertyManager(', 'PropertyManager)', ''),
  \ javaapi#method(0,1,'containsProperty(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'getProperty(', 'String)', 'Object'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object)', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#interface('RevalidationHandler', 'XMLDocumentFilter', [
  \ javaapi#method(0,1,'characterData(', 'String, Augmentations)', 'boolean'),
  \ ])

call javaapi#class('Version', '', [
  \ javaapi#field(1,1,'fVersion', 'String'),
  \ javaapi#method(0,1,'Version(', ')', ''),
  \ javaapi#method(1,1,'getVersion(', ')', 'String'),
  \ javaapi#method(1,1,'main(', 'String[])', 'void'),
  \ ])

call javaapi#class('XML11DTDScannerImpl', 'XMLDTDScannerImpl', [
  \ javaapi#method(0,1,'XML11DTDScannerImpl(', ')', ''),
  \ javaapi#method(0,1,'XML11DTDScannerImpl(', 'SymbolTable, XMLErrorReporter, XMLEntityManager)', ''),
  \ javaapi#method(0,0,'scanPubidLiteral(', 'XMLString) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'normalizeWhitespace(', 'XMLString)', 'void'),
  \ javaapi#method(0,0,'normalizeWhitespace(', 'XMLString, int)', 'void'),
  \ javaapi#method(0,0,'isUnchangedByNormalization(', 'XMLString)', 'int'),
  \ javaapi#method(0,0,'isInvalid(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isInvalidLiteral(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameChar(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameStartChar(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNCName(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameStartHighSurrogate(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'versionSupported(', 'String)', 'boolean'),
  \ javaapi#method(0,0,'getVersionNotSupportedKey(', ')', 'String'),
  \ ])

call javaapi#class('XML11DocumentScannerImpl', 'XMLDocumentScannerImpl', [
  \ javaapi#method(0,1,'XML11DocumentScannerImpl(', ')', ''),
  \ javaapi#method(0,0,'scanContent(', 'XMLStringBuffer) throws IOException, XNIException', 'int'),
  \ javaapi#method(0,0,'scanAttributeValue(', 'XMLString, XMLString, String, boolean, String) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'scanPubidLiteral(', 'XMLString) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'normalizeWhitespace(', 'XMLString)', 'void'),
  \ javaapi#method(0,0,'normalizeWhitespace(', 'XMLString, int)', 'void'),
  \ javaapi#method(0,0,'isUnchangedByNormalization(', 'XMLString)', 'int'),
  \ javaapi#method(0,0,'isInvalid(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isInvalidLiteral(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameChar(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameStartChar(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNCName(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameStartHighSurrogate(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'versionSupported(', 'String)', 'boolean'),
  \ javaapi#method(0,0,'getVersionNotSupportedKey(', ')', 'String'),
  \ ])

call javaapi#class('XML11EntityScanner', 'XMLEntityScanner', [
  \ javaapi#method(0,1,'XML11EntityScanner(', ')', ''),
  \ javaapi#method(0,1,'peekChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,1,'scanChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,1,'scanNmtoken(', ') throws IOException', 'String'),
  \ javaapi#method(0,1,'scanName(', ') throws IOException', 'String'),
  \ javaapi#method(0,1,'scanNCName(', ') throws IOException', 'String'),
  \ javaapi#method(0,1,'scanQName(', 'QName) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'scanContent(', 'XMLString) throws IOException', 'int'),
  \ javaapi#method(0,1,'scanLiteral(', 'int, XMLString) throws IOException', 'int'),
  \ javaapi#method(0,1,'scanData(', 'String, XMLStringBuffer) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'skipChar(', 'int) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'skipSpaces(', ') throws IOException', 'boolean'),
  \ javaapi#method(0,1,'skipString(', 'String) throws IOException', 'boolean'),
  \ ])

call javaapi#class('XML11NSDocumentScannerImpl', 'XML11DocumentScannerImpl', [
  \ javaapi#field(0,0,'fBindNamespaces', 'boolean'),
  \ javaapi#field(0,0,'fPerformValidation', 'boolean'),
  \ javaapi#method(0,1,'XML11NSDocumentScannerImpl(', ')', ''),
  \ javaapi#method(0,1,'setDTDValidator(', 'XMLDTDValidatorFilter)', 'void'),
  \ javaapi#method(0,0,'scanStartElement(', ') throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'scanStartElementName(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanStartElementAfterName(', ') throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'scanAttribute(', 'XMLAttributesImpl) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanEndElement(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,0,'createContentDriver(', ')', 'Driver'),
  \ javaapi#method(0,1,'next(', ') throws IOException, XNIException', 'int'),
  \ ])

call javaapi#class('XML11NamespaceBinder', 'XMLNamespaceBinder', [
  \ javaapi#method(0,1,'XML11NamespaceBinder(', ')', ''),
  \ javaapi#method(0,0,'prefixBoundToNullURI(', 'String, String)', 'boolean'),
  \ ])

call javaapi#class('XMLDTDScannerImpl', 'XMLScanner', [
  \ javaapi#field(1,0,'SCANNER_STATE_END_OF_INPUT', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_TEXT_DECL', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_MARKUP_DECL', 'int'),
  \ javaapi#field(0,1,'fDTDHandler', 'XMLDTDHandler'),
  \ javaapi#field(0,0,'fDTDContentModelHandler', 'XMLDTDContentModelHandler'),
  \ javaapi#field(0,0,'fScannerState', 'int'),
  \ javaapi#field(0,0,'fStandalone', 'boolean'),
  \ javaapi#field(0,0,'fSeenExternalDTD', 'boolean'),
  \ javaapi#field(0,0,'fSeenExternalPE', 'boolean'),
  \ javaapi#method(0,1,'XMLDTDScannerImpl(', ')', ''),
  \ javaapi#method(0,1,'XMLDTDScannerImpl(', 'SymbolTable, XMLErrorReporter, XMLEntityManager)', ''),
  \ javaapi#method(0,1,'setInputSource(', 'XMLInputSource) throws IOException', 'void'),
  \ javaapi#method(0,1,'scanDTDExternalSubset(', 'boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,1,'scanDTDInternalSubset(', 'boolean, boolean, boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,1,'getRecognizedFeatures(', ')', 'String'),
  \ javaapi#method(0,1,'getRecognizedProperties(', ')', 'String'),
  \ javaapi#method(0,1,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,1,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,1,'setDTDHandler(', 'XMLDTDHandler)', 'void'),
  \ javaapi#method(0,1,'getDTDHandler(', ')', 'XMLDTDHandler'),
  \ javaapi#method(0,1,'setDTDContentModelHandler(', 'XMLDTDContentModelHandler)', 'void'),
  \ javaapi#method(0,1,'getDTDContentModelHandler(', ')', 'XMLDTDContentModelHandler'),
  \ javaapi#method(0,1,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endEntity(', 'String, Augmentations) throws XNIException, IOException', 'void'),
  \ javaapi#method(0,0,'setScannerState(', 'int)', 'void'),
  \ javaapi#method(0,0,'scanningInternalSubset(', ')', 'boolean'),
  \ javaapi#method(0,0,'startPE(', 'String, boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanTextDecl(', ') throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'scanPIData(', 'String, XMLString) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanComment(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanElementDecl(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanAttlistDecl(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanAttDefaultDecl(', 'String, String, String, XMLString, XMLString) throws IOException, XNIException', 'String'),
  \ javaapi#method(0,0,'scanEntityValue(', 'XMLString, XMLString) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanDecls(', 'boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,1,'getGrammar(', ')', 'DTDGrammar'),
  \ ])

call javaapi#class('XMLDocumentFragmentScannerImpl', 'XMLScanner', [
  \ javaapi#field(0,0,'fElementAttributeLimit', 'int'),
  \ javaapi#field(0,0,'fExternalSubsetResolver', 'ExternalSubsetResolver'),
  \ javaapi#field(1,0,'SCANNER_STATE_START_OF_MARKUP', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_CONTENT', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_PI', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_DOCTYPE', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_XML_DECL', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_ROOT_ELEMENT', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_COMMENT', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_REFERENCE', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_ATTRIBUTE', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_ATTRIBUTE_VALUE', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_END_OF_INPUT', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_TERMINATED', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_CDATA', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_TEXT_DECL', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_CHARACTER_DATA', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_START_ELEMENT_TAG', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_END_ELEMENT_TAG', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_CHAR_REFERENCE', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_BUILT_IN_REFS', 'int'),
  \ javaapi#field(1,0,'NOTIFY_BUILTIN_REFS', 'String'),
  \ javaapi#field(1,0,'ENTITY_RESOLVER', 'String'),
  \ javaapi#field(1,0,'cdata', 'char'),
  \ javaapi#field(1,0,'xmlDecl', 'char'),
  \ javaapi#field(1,0,'endTag', 'char'),
  \ javaapi#field(1,0,'DEBUG_START_END_ELEMENT', 'boolean'),
  \ javaapi#field(1,0,'DEBUG_NEXT', 'boolean'),
  \ javaapi#field(1,0,'DEBUG', 'boolean'),
  \ javaapi#field(1,0,'DEBUG_COALESCE', 'boolean'),
  \ javaapi#field(0,0,'fDocumentHandler', 'XMLDocumentHandler'),
  \ javaapi#field(0,0,'fScannerLastState', 'int'),
  \ javaapi#field(0,0,'fEntityStore', 'XMLEntityStorage'),
  \ javaapi#field(0,0,'fEntityStack', 'int'),
  \ javaapi#field(0,0,'fMarkupDepth', 'int'),
  \ javaapi#field(0,0,'fEmptyElement', 'boolean'),
  \ javaapi#field(0,0,'fReadingAttributes', 'boolean'),
  \ javaapi#field(0,0,'fScannerState', 'int'),
  \ javaapi#field(0,0,'fInScanContent', 'boolean'),
  \ javaapi#field(0,0,'fLastSectionWasCData', 'boolean'),
  \ javaapi#field(0,0,'fLastSectionWasEntityReference', 'boolean'),
  \ javaapi#field(0,0,'fLastSectionWasCharacterData', 'boolean'),
  \ javaapi#field(0,0,'fHasExternalDTD', 'boolean'),
  \ javaapi#field(0,0,'fStandaloneSet', 'boolean'),
  \ javaapi#field(0,0,'fStandalone', 'boolean'),
  \ javaapi#field(0,0,'fVersion', 'String'),
  \ javaapi#field(0,0,'fCurrentElement', 'QName'),
  \ javaapi#field(0,0,'fElementStack', 'ElementStack'),
  \ javaapi#field(0,0,'fElementStack2', 'ElementStack2'),
  \ javaapi#field(0,0,'fPITarget', 'String'),
  \ javaapi#field(0,0,'fPIData', 'XMLString'),
  \ javaapi#field(0,0,'fNotifyBuiltInRefs', 'boolean'),
  \ javaapi#field(0,0,'fReplaceEntityReferences', 'boolean'),
  \ javaapi#field(0,0,'fSupportExternalEntities', 'boolean'),
  \ javaapi#field(0,0,'fReportCdataEvent', 'boolean'),
  \ javaapi#field(0,0,'fIsCoalesce', 'boolean'),
  \ javaapi#field(0,0,'fDeclaredEncoding', 'String'),
  \ javaapi#field(0,0,'fDisallowDoctype', 'boolean'),
  \ javaapi#field(0,0,'fDriver', 'Driver'),
  \ javaapi#field(0,0,'fContentDriver', 'Driver'),
  \ javaapi#field(0,0,'fElementQName', 'QName'),
  \ javaapi#field(0,0,'fAttributeQName', 'QName'),
  \ javaapi#field(0,0,'fAttributes', 'XMLAttributesIteratorImpl'),
  \ javaapi#field(0,0,'fTempString', 'XMLString'),
  \ javaapi#field(0,0,'fTempString2', 'XMLString'),
  \ javaapi#field(0,0,'fStringBuffer', 'XMLStringBuffer'),
  \ javaapi#field(0,0,'fStringBuffer2', 'XMLStringBuffer'),
  \ javaapi#field(0,0,'fContentBuffer', 'XMLStringBuffer'),
  \ javaapi#field(0,0,'fScanToEnd', 'boolean'),
  \ javaapi#field(0,0,'dtdGrammarUtil', 'DTDGrammarUtil'),
  \ javaapi#field(0,0,'fAddDefaultAttr', 'boolean'),
  \ javaapi#field(0,0,'foundBuiltInRefs', 'boolean'),
  \ javaapi#field(0,0,'fSecurityManager', 'SecurityManager'),
  \ javaapi#field(0,0,'fElementRawname', 'String'),
  \ javaapi#field(0,0,'fShouldSkip', 'boolean'),
  \ javaapi#field(0,0,'fAdd', 'boolean'),
  \ javaapi#field(0,0,'fSkip', 'boolean'),
  \ javaapi#field(0,0,'fUsebuffer', 'boolean'),
  \ javaapi#method(0,1,'XMLDocumentFragmentScannerImpl(', ')', ''),
  \ javaapi#method(0,1,'setInputSource(', 'XMLInputSource) throws IOException', 'void'),
  \ javaapi#method(0,1,'scanDocument(', 'boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,1,'getElementQName(', ')', 'QName'),
  \ javaapi#method(0,1,'next(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,1,'getRecognizedFeatures(', ')', 'String'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getRecognizedProperties(', ')', 'String'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,1,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,1,'setDocumentHandler(', 'XMLDocumentHandler)', 'void'),
  \ javaapi#method(0,1,'getDocumentHandler(', ')', 'XMLDocumentHandler'),
  \ javaapi#method(0,1,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'createContentDriver(', ')', 'Driver'),
  \ javaapi#method(0,0,'scanXMLDeclOrTextDecl(', 'boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'getPITarget(', ')', 'String'),
  \ javaapi#method(0,1,'getPIData(', ')', 'XMLStringBuffer'),
  \ javaapi#method(0,1,'getCharacterData(', ')', 'XMLString'),
  \ javaapi#method(0,0,'scanPIData(', 'String, XMLStringBuffer) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanComment(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'getComment(', ')', 'String'),
  \ javaapi#method(0,0,'skipElement(', ') throws IOException', 'boolean'),
  \ javaapi#method(0,0,'scanStartElement(', ') throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'seekCloseOfStartTag(', ') throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,1,'hasAttributes(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAttributeIterator(', ')', 'XMLAttributesIteratorImpl'),
  \ javaapi#method(0,1,'standaloneSet(', ')', 'boolean'),
  \ javaapi#method(0,1,'isStandAlone(', ')', 'boolean'),
  \ javaapi#method(0,0,'scanAttribute(', 'XMLAttributes) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanContent(', 'XMLStringBuffer) throws IOException, XNIException', 'int'),
  \ javaapi#method(0,0,'scanCDATASection(', 'XMLStringBuffer, boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'scanEndElement(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,0,'scanCharReference(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanEntityReference(', 'XMLStringBuffer) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'setScannerState(', 'int)', 'void'),
  \ javaapi#method(0,0,'setDriver(', 'Driver)', 'void'),
  \ javaapi#method(0,0,'getScannerStateName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getEntityName(', ')', 'String'),
  \ javaapi#method(0,1,'getDriverName(', 'Driver)', 'String'),
  \ javaapi#method(0,0,'getString(', ')', 'XMLString'),
  \ javaapi#method(0,1,'refresh(', ')', 'void'),
  \ javaapi#method(0,1,'refresh(', 'int)', 'void'),
  \ ])

call javaapi#class('XMLDocumentScannerImpl', 'XMLDocumentFragmentScannerImpl', [
  \ javaapi#field(1,0,'SCANNER_STATE_XML_DECL', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_PROLOG', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_TRAILING_MISC', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_DTD_INTERNAL_DECLS', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_DTD_EXTERNAL', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_DTD_EXTERNAL_DECLS', 'int'),
  \ javaapi#field(1,0,'SCANNER_STATE_NO_SUCH_ELEMENT_EXCEPTION', 'int'),
  \ javaapi#field(1,0,'DOCUMENT_SCANNER', 'String'),
  \ javaapi#field(1,0,'LOAD_EXTERNAL_DTD', 'String'),
  \ javaapi#field(1,0,'DISALLOW_DOCTYPE_DECL_FEATURE', 'String'),
  \ javaapi#field(1,0,'DTD_SCANNER', 'String'),
  \ javaapi#field(1,0,'VALIDATION_MANAGER', 'String'),
  \ javaapi#field(1,0,'NAMESPACE_CONTEXT', 'String'),
  \ javaapi#field(0,0,'fDTDScanner', 'XMLDTDScanner'),
  \ javaapi#field(0,0,'fValidationManager', 'ValidationManager'),
  \ javaapi#field(0,0,'fDTDDecl', 'XMLStringBuffer'),
  \ javaapi#field(0,0,'fReadingDTD', 'boolean'),
  \ javaapi#field(0,0,'fAddedListener', 'boolean'),
  \ javaapi#field(0,0,'fDoctypeName', 'String'),
  \ javaapi#field(0,0,'fDoctypePublicId', 'String'),
  \ javaapi#field(0,0,'fDoctypeSystemId', 'String'),
  \ javaapi#field(0,0,'fNamespaceContext', 'NamespaceContext'),
  \ javaapi#field(0,0,'fLoadExternalDTD', 'boolean'),
  \ javaapi#field(0,0,'fSeenDoctypeDecl', 'boolean'),
  \ javaapi#field(0,0,'fScanEndElement', 'boolean'),
  \ javaapi#field(0,0,'fXMLDeclDriver', 'Driver'),
  \ javaapi#field(0,0,'fPrologDriver', 'Driver'),
  \ javaapi#field(0,0,'fDTDDriver', 'Driver'),
  \ javaapi#field(0,0,'fTrailingMiscDriver', 'Driver'),
  \ javaapi#field(0,0,'fStartPos', 'int'),
  \ javaapi#field(0,0,'fEndPos', 'int'),
  \ javaapi#field(0,0,'fSeenInternalSubset', 'boolean'),
  \ javaapi#method(0,1,'XMLDocumentScannerImpl(', ')', ''),
  \ javaapi#method(0,1,'setInputSource(', 'XMLInputSource) throws IOException', 'void'),
  \ javaapi#method(0,1,'getScannetState(', ')', 'int'),
  \ javaapi#method(0,1,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getRecognizedFeatures(', ')', 'String'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getRecognizedProperties(', ')', 'String'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,1,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,1,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'getDTDDecl(', ')', 'XMLStringBuffer'),
  \ javaapi#method(0,1,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,1,'next(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,1,'getNamespaceContext(', ')', 'NamespaceContext'),
  \ javaapi#method(0,0,'createContentDriver(', ')', 'Driver'),
  \ javaapi#method(0,0,'scanDoctypeDecl(', 'boolean) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'setEndDTDScanState(', ')', 'void'),
  \ javaapi#method(0,0,'getScannerStateName(', 'int)', 'String'),
  \ javaapi#method(0,1,'refresh(', 'int)', 'void'),
  \ ])

call javaapi#interface('XMLEntityDescription', 'XMLResourceIdentifier', [
  \ javaapi#method(0,1,'setEntityName(', 'String)', 'void'),
  \ javaapi#method(0,1,'getEntityName(', ')', 'String'),
  \ ])

call javaapi#interface('XMLEntityHandler', '', [
  \ javaapi#method(0,1,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ ])

call javaapi#class('XMLEntityManager', 'XMLEntityResolver', [
  \ javaapi#field(1,1,'DEFAULT_BUFFER_SIZE', 'int'),
  \ javaapi#field(1,1,'DEFAULT_XMLDECL_BUFFER_SIZE', 'int'),
  \ javaapi#field(1,1,'DEFAULT_INTERNAL_BUFFER_SIZE', 'int'),
  \ javaapi#field(1,0,'VALIDATION', 'String'),
  \ javaapi#field(0,0,'fStrictURI', 'boolean'),
  \ javaapi#field(1,0,'EXTERNAL_GENERAL_ENTITIES', 'String'),
  \ javaapi#field(1,0,'EXTERNAL_PARAMETER_ENTITIES', 'String'),
  \ javaapi#field(1,0,'ALLOW_JAVA_ENCODINGS', 'String'),
  \ javaapi#field(1,0,'WARN_ON_DUPLICATE_ENTITYDEF', 'String'),
  \ javaapi#field(1,0,'SYMBOL_TABLE', 'String'),
  \ javaapi#field(1,0,'ERROR_REPORTER', 'String'),
  \ javaapi#field(1,0,'STANDARD_URI_CONFORMANT', 'String'),
  \ javaapi#field(1,0,'ENTITY_RESOLVER', 'String'),
  \ javaapi#field(1,0,'STAX_ENTITY_RESOLVER', 'String'),
  \ javaapi#field(1,0,'VALIDATION_MANAGER', 'String'),
  \ javaapi#field(1,0,'BUFFER_SIZE', 'String'),
  \ javaapi#field(1,0,'SECURITY_MANAGER', 'String'),
  \ javaapi#field(1,0,'PARSER_SETTINGS', 'String'),
  \ javaapi#field(0,0,'fWarnDuplicateEntityDef', 'boolean'),
  \ javaapi#field(0,0,'fValidation', 'boolean'),
  \ javaapi#field(0,0,'fExternalGeneralEntities', 'boolean'),
  \ javaapi#field(0,0,'fExternalParameterEntities', 'boolean'),
  \ javaapi#field(0,0,'fAllowJavaEncodings', 'boolean'),
  \ javaapi#field(0,0,'fSymbolTable', 'SymbolTable'),
  \ javaapi#field(0,0,'fErrorReporter', 'XMLErrorReporter'),
  \ javaapi#field(0,0,'fEntityResolver', 'XMLEntityResolver'),
  \ javaapi#field(0,0,'fStaxEntityResolver', 'StaxEntityResolverWrapper'),
  \ javaapi#field(0,0,'fPropertyManager', 'PropertyManager'),
  \ javaapi#field(0,0,'fValidationManager', 'ValidationManager'),
  \ javaapi#field(0,0,'fBufferSize', 'int'),
  \ javaapi#field(0,0,'fSecurityManager', 'SecurityManager'),
  \ javaapi#field(0,0,'fStandalone', 'boolean'),
  \ javaapi#field(0,0,'fInExternalSubset', 'boolean'),
  \ javaapi#field(0,0,'fEntityHandler', 'XMLEntityHandler'),
  \ javaapi#field(0,0,'fEntityScanner', 'XMLEntityScanner'),
  \ javaapi#field(0,0,'fXML10EntityScanner', 'XMLEntityScanner'),
  \ javaapi#field(0,0,'fXML11EntityScanner', 'XMLEntityScanner'),
  \ javaapi#field(0,0,'fEntityExpansionLimit', 'int'),
  \ javaapi#field(0,0,'fEntityExpansionCount', 'int'),
  \ javaapi#field(0,0,'fEntities', 'Hashtable'),
  \ javaapi#field(0,0,'fEntityStack', 'Stack'),
  \ javaapi#field(0,0,'fCurrentEntity', 'ScannedEntity'),
  \ javaapi#field(0,0,'fDeclaredEntities', 'Hashtable'),
  \ javaapi#field(0,0,'fEntityStorage', 'XMLEntityStorage'),
  \ javaapi#field(0,0,'defaultEncoding', 'Object'),
  \ javaapi#field(0,0,'fOwnReaders', 'Vector'),
  \ javaapi#method(0,1,'XMLEntityManager(', ')', ''),
  \ javaapi#method(0,1,'XMLEntityManager(', 'PropertyManager)', ''),
  \ javaapi#method(0,1,'XMLEntityManager(', 'XMLEntityManager)', ''),
  \ javaapi#method(0,1,'addInternalEntity(', 'String, String)', 'void'),
  \ javaapi#method(0,1,'addExternalEntity(', 'String, String, String, String) throws IOException', 'void'),
  \ javaapi#method(0,1,'addUnparsedEntity(', 'String, String, String, String, String)', 'void'),
  \ javaapi#method(0,1,'getEntityStore(', ')', 'XMLEntityStorage'),
  \ javaapi#method(0,1,'getEntityScanner(', ')', 'XMLEntityScanner'),
  \ javaapi#method(0,1,'setScannerVersion(', 'short)', 'void'),
  \ javaapi#method(0,1,'setupCurrentEntity(', 'String, XMLInputSource, boolean, boolean) throws IOException, XNIException', 'String'),
  \ javaapi#method(0,1,'isExternalEntity(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'isEntityDeclInExternalSubset(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'setStandalone(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isStandalone(', ')', 'boolean'),
  \ javaapi#method(0,1,'isDeclaredEntity(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'isUnparsedEntity(', 'String)', 'boolean'),
  \ javaapi#method(0,1,'getCurrentResourceIdentifier(', ')', 'XMLResourceIdentifier'),
  \ javaapi#method(0,1,'setEntityHandler(', 'XMLEntityHandler)', 'void'),
  \ javaapi#method(0,1,'resolveEntityAsPerStax(', 'XMLResourceIdentifier) throws IOException', 'StaxXMLInputSource'),
  \ javaapi#method(0,1,'resolveEntity(', 'XMLResourceIdentifier) throws IOException, XNIException', 'XMLInputSource'),
  \ javaapi#method(0,1,'startEntity(', 'String, boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'startDocumentEntity(', 'XMLInputSource) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'startDTDEntity(', 'XMLInputSource) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'startExternalSubset(', ')', 'void'),
  \ javaapi#method(0,1,'endExternalSubset(', ')', 'void'),
  \ javaapi#method(0,1,'startEntity(', 'String, XMLInputSource, boolean, boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'getCurrentEntity(', ')', 'ScannedEntity'),
  \ javaapi#method(0,1,'getTopLevelEntity(', ')', 'ScannedEntity'),
  \ javaapi#method(0,1,'closeReaders(', ')', 'void'),
  \ javaapi#method(0,1,'endEntity(', ') throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'getRecognizedFeatures(', ')', 'String'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object)', 'void'),
  \ javaapi#method(0,1,'getRecognizedProperties(', ')', 'String'),
  \ javaapi#method(0,1,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,1,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(1,1,'expandSystemId(', 'String)', 'String'),
  \ javaapi#method(1,1,'absolutizeAgainstUserDir(', 'URI) throws MalformedURIException', 'void'),
  \ javaapi#method(1,1,'expandSystemId(', 'String, String)', 'String'),
  \ javaapi#method(1,1,'expandSystemId(', 'String, String, boolean) throws MalformedURIException', 'String'),
  \ javaapi#method(1,1,'setInstanceFollowRedirects(', 'HttpURLConnection, boolean)', 'void'),
  \ javaapi#method(0,0,'getEncodingName(', 'byte[], int)', 'Object'),
  \ javaapi#method(0,0,'createReader(', 'InputStream, String, Boolean) throws IOException', 'Reader'),
  \ javaapi#method(0,1,'getPublicId(', ')', 'String'),
  \ javaapi#method(0,1,'getExpandedSystemId(', ')', 'String'),
  \ javaapi#method(0,1,'getLiteralSystemId(', ')', 'String'),
  \ javaapi#method(0,1,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,1,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(1,0,'fixURI(', 'String)', 'String'),
  \ javaapi#method(1,0,'escapeNonUSAscii(', 'String)', 'String'),
  \ javaapi#method(0,1,'test(', ')', 'void'),
  \ ])

call javaapi#class('XMLEntityScanner', 'XMLLocator', [
  \ javaapi#field(0,0,'fCurrentEntity', 'ScannedEntity'),
  \ javaapi#field(0,0,'fBufferSize', 'int'),
  \ javaapi#field(0,0,'fEntityManager', 'XMLEntityManager'),
  \ javaapi#field(1,1,'VALID_NAMES', 'boolean'),
  \ javaapi#field(0,0,'fSymbolTable', 'SymbolTable'),
  \ javaapi#field(0,0,'fErrorReporter', 'XMLErrorReporter'),
  \ javaapi#field(0,0,'fAllowJavaEncodings', 'boolean'),
  \ javaapi#field(1,0,'SYMBOL_TABLE', 'String'),
  \ javaapi#field(1,0,'ERROR_REPORTER', 'String'),
  \ javaapi#field(1,0,'ALLOW_JAVA_ENCODINGS', 'String'),
  \ javaapi#field(0,0,'fPropertyManager', 'PropertyManager'),
  \ javaapi#method(0,1,'XMLEntityScanner(', ')', ''),
  \ javaapi#method(0,1,'XMLEntityScanner(', 'PropertyManager, XMLEntityManager)', ''),
  \ javaapi#method(0,1,'setBufferSize(', 'int)', 'void'),
  \ javaapi#method(0,1,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'reset(', 'SymbolTable, XMLEntityManager, XMLErrorReporter)', 'void'),
  \ javaapi#method(0,1,'getXMLVersion(', ')', 'String'),
  \ javaapi#method(0,1,'setXMLVersion(', 'String)', 'void'),
  \ javaapi#method(0,1,'setCurrentEntity(', 'ScannedEntity)', 'void'),
  \ javaapi#method(0,1,'getCurrentEntity(', ')', 'ScannedEntity'),
  \ javaapi#method(0,1,'getBaseSystemId(', ')', 'String'),
  \ javaapi#method(0,1,'setBaseSystemId(', 'String)', 'void'),
  \ javaapi#method(0,1,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,1,'setLineNumber(', 'int)', 'void'),
  \ javaapi#method(0,1,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,1,'setColumnNumber(', 'int)', 'void'),
  \ javaapi#method(0,1,'getCharacterOffset(', ')', 'int'),
  \ javaapi#method(0,1,'getExpandedSystemId(', ')', 'String'),
  \ javaapi#method(0,1,'setExpandedSystemId(', 'String)', 'void'),
  \ javaapi#method(0,1,'getLiteralSystemId(', ')', 'String'),
  \ javaapi#method(0,1,'setLiteralSystemId(', 'String)', 'void'),
  \ javaapi#method(0,1,'getPublicId(', ')', 'String'),
  \ javaapi#method(0,1,'setPublicId(', 'String)', 'void'),
  \ javaapi#method(0,1,'setVersion(', 'String)', 'void'),
  \ javaapi#method(0,1,'getVersion(', ')', 'String'),
  \ javaapi#method(0,1,'getEncoding(', ')', 'String'),
  \ javaapi#method(0,1,'setEncoding(', 'String) throws IOException', 'void'),
  \ javaapi#method(0,1,'isExternal(', ')', 'boolean'),
  \ javaapi#method(0,1,'getChar(', 'int) throws IOException', 'int'),
  \ javaapi#method(0,1,'peekChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,1,'scanChar(', ') throws IOException', 'int'),
  \ javaapi#method(0,1,'scanNmtoken(', ') throws IOException', 'String'),
  \ javaapi#method(0,1,'scanName(', ') throws IOException', 'String'),
  \ javaapi#method(0,1,'scanQName(', 'QName) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'scanContent(', 'XMLString) throws IOException', 'int'),
  \ javaapi#method(0,1,'scanLiteral(', 'int, XMLString) throws IOException', 'int'),
  \ javaapi#method(0,1,'scanData(', 'String, XMLStringBuffer) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'skipChar(', 'int) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'isSpace(', 'char)', 'boolean'),
  \ javaapi#method(0,1,'skipSpaces(', ') throws IOException', 'boolean'),
  \ javaapi#method(0,1,'arrangeCapacity(', 'int) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'arrangeCapacity(', 'int, boolean) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'skipString(', 'String) throws IOException', 'boolean'),
  \ javaapi#method(0,1,'skipString(', 'char[]) throws IOException', 'boolean'),
  \ javaapi#method(0,0,'createReader(', 'InputStream, String, Boolean) throws IOException', 'Reader'),
  \ javaapi#method(0,0,'getEncodingName(', 'byte[], int)', 'Object'),
  \ javaapi#method(0,1,'registerListener(', 'XMLBufferListener)', 'void'),
  \ javaapi#method(0,1,'skipDeclSpaces(', ') throws IOException', 'boolean'),
  \ ])

call javaapi#class('XMLErrorReporter', 'XMLComponent', [
  \ javaapi#field(1,1,'SEVERITY_WARNING', 'short'),
  \ javaapi#field(1,1,'SEVERITY_ERROR', 'short'),
  \ javaapi#field(1,1,'SEVERITY_FATAL_ERROR', 'short'),
  \ javaapi#field(1,0,'CONTINUE_AFTER_FATAL_ERROR', 'String'),
  \ javaapi#field(1,0,'ERROR_HANDLER', 'String'),
  \ javaapi#field(0,0,'fLocale', 'Locale'),
  \ javaapi#field(0,0,'fMessageFormatters', 'Hashtable'),
  \ javaapi#field(0,0,'fErrorHandler', 'XMLErrorHandler'),
  \ javaapi#field(0,0,'fLocator', 'XMLLocator'),
  \ javaapi#field(0,0,'fContinueAfterFatalError', 'boolean'),
  \ javaapi#field(0,0,'fDefaultErrorHandler', 'XMLErrorHandler'),
  \ javaapi#method(0,1,'XMLErrorReporter(', ')', ''),
  \ javaapi#method(0,1,'setLocale(', 'Locale)', 'void'),
  \ javaapi#method(0,1,'getLocale(', ')', 'Locale'),
  \ javaapi#method(0,1,'setDocumentLocator(', 'XMLLocator)', 'void'),
  \ javaapi#method(0,1,'putMessageFormatter(', 'String, MessageFormatter)', 'void'),
  \ javaapi#method(0,1,'getMessageFormatter(', 'String)', 'MessageFormatter'),
  \ javaapi#method(0,1,'removeMessageFormatter(', 'String)', 'MessageFormatter'),
  \ javaapi#method(0,1,'reportError(', 'String, String, Object[], short) throws XNIException', 'String'),
  \ javaapi#method(0,1,'reportError(', 'String, String, Object[], short, Exception) throws XNIException', 'String'),
  \ javaapi#method(0,1,'reportError(', 'XMLLocator, String, String, Object[], short) throws XNIException', 'String'),
  \ javaapi#method(0,1,'reportError(', 'XMLLocator, String, String, Object[], short, Exception) throws XNIException', 'String'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XNIException', 'void'),
  \ javaapi#method(0,1,'getRecognizedFeatures(', ')', 'String'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getFeature(', 'String) throws XMLConfigurationException', 'boolean'),
  \ javaapi#method(0,1,'getRecognizedProperties(', ')', 'String'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,1,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,1,'getErrorHandler(', ')', 'XMLErrorHandler'),
  \ javaapi#method(0,1,'getSAXErrorHandler(', ')', 'ErrorHandler'),
  \ ])

call javaapi#class('XMLNSDocumentScannerImpl', 'XMLDocumentScannerImpl', [
  \ javaapi#field(0,0,'fBindNamespaces', 'boolean'),
  \ javaapi#field(0,0,'fPerformValidation', 'boolean'),
  \ javaapi#field(0,0,'fNotAddNSDeclAsAttribute', 'boolean'),
  \ javaapi#method(0,1,'XMLNSDocumentScannerImpl(', ')', ''),
  \ javaapi#method(0,1,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'next(', ') throws IOException, XNIException', 'int'),
  \ javaapi#method(0,1,'setDTDValidator(', 'XMLDTDValidatorFilter)', 'void'),
  \ javaapi#method(0,0,'scanStartElement(', ') throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'scanAttribute(', 'XMLAttributesImpl) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'createContentDriver(', ')', 'Driver'),
  \ ])

call javaapi#class('XMLNamespaceBinder', 'XMLDocumentFilter', [
  \ javaapi#field(1,0,'NAMESPACES', 'String'),
  \ javaapi#field(1,0,'SYMBOL_TABLE', 'String'),
  \ javaapi#field(1,0,'ERROR_REPORTER', 'String'),
  \ javaapi#field(0,0,'fNamespaces', 'boolean'),
  \ javaapi#field(0,0,'fSymbolTable', 'SymbolTable'),
  \ javaapi#field(0,0,'fErrorReporter', 'XMLErrorReporter'),
  \ javaapi#field(0,0,'fDocumentHandler', 'XMLDocumentHandler'),
  \ javaapi#field(0,0,'fDocumentSource', 'XMLDocumentSource'),
  \ javaapi#field(0,0,'fOnlyPassPrefixMappingEvents', 'boolean'),
  \ javaapi#method(0,1,'XMLNamespaceBinder(', ')', ''),
  \ javaapi#method(0,1,'setOnlyPassPrefixMappingEvents(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getOnlyPassPrefixMappingEvents(', ')', 'boolean'),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XNIException', 'void'),
  \ javaapi#method(0,1,'getRecognizedFeatures(', ')', 'String'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getRecognizedProperties(', ')', 'String'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getFeatureDefault(', 'String)', 'Boolean'),
  \ javaapi#method(0,1,'getPropertyDefault(', 'String)', 'Object'),
  \ javaapi#method(0,1,'setDocumentHandler(', 'XMLDocumentHandler)', 'void'),
  \ javaapi#method(0,1,'getDocumentHandler(', ')', 'XMLDocumentHandler'),
  \ javaapi#method(0,1,'setDocumentSource(', 'XMLDocumentSource)', 'void'),
  \ javaapi#method(0,1,'getDocumentSource(', ')', 'XMLDocumentSource'),
  \ javaapi#method(0,1,'startGeneralEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'textDecl(', 'String, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'startDocument(', 'XMLLocator, String, NamespaceContext, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'xmlDecl(', 'String, String, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'doctypeDecl(', 'String, String, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'comment(', 'XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'processingInstruction(', 'String, XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'startElement(', 'QName, XMLAttributes, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'emptyElement(', 'QName, XMLAttributes, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'characters(', 'XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'ignorableWhitespace(', 'XMLString, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endElement(', 'QName, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'startCDATA(', 'Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endCDATA(', 'Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endDocument(', 'Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endGeneralEntity(', 'String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,0,'handleStartElement(', 'QName, XMLAttributes, Augmentations, boolean) throws XNIException', 'void'),
  \ javaapi#method(0,0,'handleEndElement(', 'QName, Augmentations, boolean) throws XNIException', 'void'),
  \ javaapi#method(0,0,'prefixBoundToNullURI(', 'String, String)', 'boolean'),
  \ ])

call javaapi#class('XMLScanner', 'XMLComponent', [
  \ javaapi#field(1,0,'NAMESPACES', 'String'),
  \ javaapi#field(1,0,'VALIDATION', 'String'),
  \ javaapi#field(1,0,'NOTIFY_CHAR_REFS', 'String'),
  \ javaapi#field(1,0,'PARSER_SETTINGS', 'String'),
  \ javaapi#field(1,0,'SYMBOL_TABLE', 'String'),
  \ javaapi#field(1,0,'ERROR_REPORTER', 'String'),
  \ javaapi#field(1,0,'ENTITY_MANAGER', 'String'),
  \ javaapi#field(1,0,'DEBUG_ATTR_NORMALIZATION', 'boolean'),
  \ javaapi#field(0,0,'attributeValueCache', 'ArrayList'),
  \ javaapi#field(0,0,'stringBufferCache', 'ArrayList'),
  \ javaapi#field(0,0,'fStringBufferIndex', 'int'),
  \ javaapi#field(0,0,'fAttributeCacheInitDone', 'boolean'),
  \ javaapi#field(0,0,'fAttributeCacheUsedCount', 'int'),
  \ javaapi#field(0,0,'fValidation', 'boolean'),
  \ javaapi#field(0,0,'fNamespaces', 'boolean'),
  \ javaapi#field(0,0,'fNotifyCharRefs', 'boolean'),
  \ javaapi#field(0,0,'fParserSettings', 'boolean'),
  \ javaapi#field(0,0,'fPropertyManager', 'PropertyManager'),
  \ javaapi#field(0,0,'fSymbolTable', 'SymbolTable'),
  \ javaapi#field(0,0,'fErrorReporter', 'XMLErrorReporter'),
  \ javaapi#field(0,0,'fEntityManager', 'XMLEntityManager'),
  \ javaapi#field(0,0,'fEntityStore', 'XMLEntityStorage'),
  \ javaapi#field(0,0,'fEvent', 'XMLEvent'),
  \ javaapi#field(0,0,'fEntityScanner', 'XMLEntityScanner'),
  \ javaapi#field(0,0,'fEntityDepth', 'int'),
  \ javaapi#field(0,0,'fCharRefLiteral', 'String'),
  \ javaapi#field(0,0,'fScanningAttribute', 'boolean'),
  \ javaapi#field(0,0,'fReportEntity', 'boolean'),
  \ javaapi#field(1,0,'fVersionSymbol', 'String'),
  \ javaapi#field(1,0,'fEncodingSymbol', 'String'),
  \ javaapi#field(1,0,'fStandaloneSymbol', 'String'),
  \ javaapi#field(1,0,'fAmpSymbol', 'String'),
  \ javaapi#field(1,0,'fLtSymbol', 'String'),
  \ javaapi#field(1,0,'fGtSymbol', 'String'),
  \ javaapi#field(1,0,'fQuotSymbol', 'String'),
  \ javaapi#field(1,0,'fAposSymbol', 'String'),
  \ javaapi#field(0,0,'fResourceIdentifier', 'XMLResourceIdentifierImpl'),
  \ javaapi#method(0,1,'XMLScanner(', ')', ''),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,0,'setPropertyManager(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'getFeature(', 'String) throws XMLConfigurationException', 'boolean'),
  \ javaapi#method(0,0,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'reset(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,0,'scanXMLDeclOrTextDecl(', 'boolean, String[]) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,1,'scanPseudoAttribute(', 'boolean, XMLString) throws IOException, XNIException', 'String'),
  \ javaapi#method(0,0,'scanPI(', 'XMLStringBuffer) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanPIData(', 'String, XMLStringBuffer) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanComment(', 'XMLStringBuffer) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanAttributeValue(', 'XMLString, XMLString, String, XMLAttributes, int, boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanExternalID(', 'String[], boolean) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanPubidLiteral(', 'XMLString) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'normalizeWhitespace(', 'XMLString)', 'void'),
  \ javaapi#method(0,1,'startEntity(', 'String, XMLResourceIdentifier, String, Augmentations) throws XNIException', 'void'),
  \ javaapi#method(0,1,'endEntity(', 'String, Augmentations) throws IOException, XNIException', 'void'),
  \ javaapi#method(0,0,'scanCharReferenceValue(', 'XMLStringBuffer, XMLStringBuffer) throws IOException, XNIException', 'int'),
  \ javaapi#method(0,0,'isInvalid(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isInvalidLiteral(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameChar(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNCName(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'isValidNameStartChar(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'versionSupported(', 'String)', 'boolean'),
  \ javaapi#method(0,0,'scanSurrogates(', 'XMLStringBuffer) throws IOException, XNIException', 'boolean'),
  \ javaapi#method(0,0,'reportFatalError(', 'String, Object[]) throws XNIException', 'void'),
  \ ])

call javaapi#class('XMLStreamFilterImpl', 'XMLStreamReader', [
  \ javaapi#method(0,1,'XMLStreamFilterImpl(', 'XMLStreamReader, StreamFilter)', ''),
  \ javaapi#method(0,0,'setStreamFilter(', 'StreamFilter)', 'void'),
  \ javaapi#method(0,1,'next(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,1,'nextTag(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,1,'hasNext(', ') throws XMLStreamException', 'boolean'),
  \ javaapi#method(0,1,'close(', ') throws XMLStreamException', 'void'),
  \ javaapi#method(0,1,'getAttributeCount(', ')', 'int'),
  \ javaapi#method(0,1,'getAttributeName(', 'int)', 'QName'),
  \ javaapi#method(0,1,'getAttributeNamespace(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributePrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeType(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeValue(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeValue(', 'String, String)', 'String'),
  \ javaapi#method(0,1,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,1,'getElementText(', ') throws XMLStreamException', 'String'),
  \ javaapi#method(0,1,'getEncoding(', ')', 'String'),
  \ javaapi#method(0,1,'getEventType(', ')', 'int'),
  \ javaapi#method(0,1,'getLocalName(', ')', 'String'),
  \ javaapi#method(0,1,'getLocation(', ')', 'Location'),
  \ javaapi#method(0,1,'getName(', ')', 'QName'),
  \ javaapi#method(0,1,'getNamespaceContext(', ')', 'NamespaceContext'),
  \ javaapi#method(0,1,'getNamespaceCount(', ')', 'int'),
  \ javaapi#method(0,1,'getNamespacePrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', ')', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'getPIData(', ')', 'String'),
  \ javaapi#method(0,1,'getPITarget(', ')', 'String'),
  \ javaapi#method(0,1,'getPrefix(', ')', 'String'),
  \ javaapi#method(0,1,'getProperty(', 'String) throws IllegalArgumentException', 'Object'),
  \ javaapi#method(0,1,'getText(', ')', 'String'),
  \ javaapi#method(0,1,'getTextCharacters(', ')', 'char'),
  \ javaapi#method(0,1,'getTextCharacters(', 'int, char[], int, int) throws XMLStreamException', 'int'),
  \ javaapi#method(0,1,'getTextLength(', ')', 'int'),
  \ javaapi#method(0,1,'getTextStart(', ')', 'int'),
  \ javaapi#method(0,1,'getVersion(', ')', 'String'),
  \ javaapi#method(0,1,'hasName(', ')', 'boolean'),
  \ javaapi#method(0,1,'hasText(', ')', 'boolean'),
  \ javaapi#method(0,1,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isCharacters(', ')', 'boolean'),
  \ javaapi#method(0,1,'isEndElement(', ')', 'boolean'),
  \ javaapi#method(0,1,'isStandalone(', ')', 'boolean'),
  \ javaapi#method(0,1,'isStartElement(', ')', 'boolean'),
  \ javaapi#method(0,1,'isWhiteSpace(', ')', 'boolean'),
  \ javaapi#method(0,1,'require(', 'int, String, String) throws XMLStreamException', 'void'),
  \ javaapi#method(0,1,'standaloneSet(', ')', 'boolean'),
  \ javaapi#method(0,1,'getAttributeLocalName(', 'int)', 'String'),
  \ ])

call javaapi#class('XMLStreamReaderImpl', 'XMLStreamReader', [
  \ javaapi#field(1,0,'ENTITY_MANAGER', 'String'),
  \ javaapi#field(1,0,'ERROR_REPORTER', 'String'),
  \ javaapi#field(1,0,'SYMBOL_TABLE', 'String'),
  \ javaapi#field(1,0,'READER_IN_DEFINED_STATE', 'String'),
  \ javaapi#field(0,0,'fScanner', 'XMLDocumentScannerImpl'),
  \ javaapi#field(0,0,'fNamespaceContextWrapper', 'NamespaceContextWrapper'),
  \ javaapi#field(0,0,'fEntityManager', 'XMLEntityManager'),
  \ javaapi#field(0,0,'fErrorReporter', 'StaxErrorReporter'),
  \ javaapi#field(0,0,'fEntityScanner', 'XMLEntityScanner'),
  \ javaapi#field(0,0,'fInputSource', 'XMLInputSource'),
  \ javaapi#field(0,0,'fPropertyManager', 'PropertyManager'),
  \ javaapi#method(0,1,'XMLStreamReaderImpl(', 'InputStream, PropertyManager) throws XMLStreamException', ''),
  \ javaapi#method(0,1,'getScanner(', ')', 'XMLDocumentScannerImpl'),
  \ javaapi#method(0,1,'XMLStreamReaderImpl(', 'String, PropertyManager) throws XMLStreamException', ''),
  \ javaapi#method(0,1,'XMLStreamReaderImpl(', 'InputStream, String, PropertyManager) throws XMLStreamException', ''),
  \ javaapi#method(0,1,'XMLStreamReaderImpl(', 'Reader, PropertyManager) throws XMLStreamException', ''),
  \ javaapi#method(0,1,'XMLStreamReaderImpl(', 'XMLInputSource, PropertyManager) throws XMLStreamException', ''),
  \ javaapi#method(0,1,'setInputSource(', 'XMLInputSource) throws XMLStreamException', 'void'),
  \ javaapi#method(0,1,'canReuse(', ')', 'boolean'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'close(', ') throws XMLStreamException', 'void'),
  \ javaapi#method(0,1,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,1,'getColumnNumber(', ')', 'int'),
  \ javaapi#method(0,1,'getEncoding(', ')', 'String'),
  \ javaapi#method(0,1,'getEventType(', ')', 'int'),
  \ javaapi#method(0,1,'getLineNumber(', ')', 'int'),
  \ javaapi#method(0,1,'getLocalName(', ')', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', ')', 'String'),
  \ javaapi#method(0,1,'getPIData(', ')', 'String'),
  \ javaapi#method(0,1,'getPITarget(', ')', 'String'),
  \ javaapi#method(0,1,'getPrefix(', ')', 'String'),
  \ javaapi#method(0,1,'getTextCharacters(', ')', 'char'),
  \ javaapi#method(0,1,'getTextLength(', ')', 'int'),
  \ javaapi#method(0,1,'getTextStart(', ')', 'int'),
  \ javaapi#method(0,1,'getValue(', ')', 'String'),
  \ javaapi#method(0,1,'getVersion(', ')', 'String'),
  \ javaapi#method(0,1,'hasAttributes(', ')', 'boolean'),
  \ javaapi#method(0,1,'hasName(', ')', 'boolean'),
  \ javaapi#method(0,1,'hasNext(', ') throws XMLStreamException', 'boolean'),
  \ javaapi#method(0,1,'hasValue(', ')', 'boolean'),
  \ javaapi#method(0,1,'isEndElement(', ')', 'boolean'),
  \ javaapi#method(0,1,'isStandalone(', ')', 'boolean'),
  \ javaapi#method(0,1,'isStartElement(', ')', 'boolean'),
  \ javaapi#method(0,1,'isWhiteSpace(', ')', 'boolean'),
  \ javaapi#method(0,1,'next(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,1,'getAttributeCount(', ')', 'int'),
  \ javaapi#method(0,1,'getAttributeName(', 'int)', 'QName'),
  \ javaapi#method(0,1,'getAttributeLocalName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeNamespace(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributePrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeQName(', 'int)', 'QName'),
  \ javaapi#method(0,1,'getAttributeType(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeValue(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeValue(', 'String, String)', 'String'),
  \ javaapi#method(0,1,'getElementText(', ') throws XMLStreamException', 'String'),
  \ javaapi#method(0,1,'getLocation(', ')', 'Location'),
  \ javaapi#method(0,1,'getName(', ')', 'QName'),
  \ javaapi#method(0,1,'getNamespaceContext(', ')', 'NamespaceContext'),
  \ javaapi#method(0,1,'getNamespaceCount(', ')', 'int'),
  \ javaapi#method(0,1,'getNamespacePrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'getProperty(', 'String) throws IllegalArgumentException', 'Object'),
  \ javaapi#method(0,1,'getText(', ')', 'String'),
  \ javaapi#method(0,1,'require(', 'int, String, String) throws XMLStreamException', 'void'),
  \ javaapi#method(0,1,'getTextCharacters(', 'int, char[], int, int) throws XMLStreamException', 'int'),
  \ javaapi#method(0,1,'hasText(', ')', 'boolean'),
  \ javaapi#method(0,1,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isCharacters(', ')', 'boolean'),
  \ javaapi#method(0,1,'nextTag(', ') throws XMLStreamException', 'int'),
  \ javaapi#method(0,1,'standaloneSet(', ')', 'boolean'),
  \ javaapi#method(0,1,'convertXNIQNametoJavaxQName(', 'QName)', 'QName'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'String)', 'String'),
  \ javaapi#method(0,0,'setPropertyManager(', 'PropertyManager)', 'void'),
  \ javaapi#method(0,0,'getPropertyManager(', ')', 'PropertyManager'),
  \ javaapi#method(0,0,'getEntityDecls(', ')', 'List'),
  \ javaapi#method(0,0,'getNotationDecls(', ')', 'List'),
  \ ])

call javaapi#class('XMLVersionDetector', '', [
  \ javaapi#field(1,0,'SYMBOL_TABLE', 'String'),
  \ javaapi#field(1,0,'ERROR_REPORTER', 'String'),
  \ javaapi#field(1,0,'ENTITY_MANAGER', 'String'),
  \ javaapi#field(1,0,'fVersionSymbol', 'String'),
  \ javaapi#field(1,0,'fXMLSymbol', 'String'),
  \ javaapi#field(0,0,'fSymbolTable', 'SymbolTable'),
  \ javaapi#field(0,0,'fErrorReporter', 'XMLErrorReporter'),
  \ javaapi#field(0,0,'fEntityManager', 'XMLEntityManager'),
  \ javaapi#field(0,0,'fEncoding', 'String'),
  \ javaapi#method(0,1,'XMLVersionDetector(', ')', ''),
  \ javaapi#method(0,1,'reset(', 'XMLComponentManager) throws XMLConfigurationException', 'void'),
  \ javaapi#method(0,1,'startDocumentParsing(', 'XMLEntityHandler, short)', 'void'),
  \ javaapi#method(0,1,'determineDocVersion(', 'XMLInputSource) throws IOException', 'short'),
  \ ])

