call javaapi#namespace('com.sun.org.apache.xalan.internal.xsltc.dom')

call javaapi#class('AbsoluteIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'AbsoluteIterator(', 'DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('AdaptiveResultTreeImpl', 'SimpleResultTreeImpl', [
  \ javaapi#method(0,1,'AdaptiveResultTreeImpl(', 'XSLTCDTMManager, int, DTMWSFilter, int, boolean)', ''),
  \ javaapi#method(0,1,'getNestedDOM(', ')', 'DOM'),
  \ javaapi#method(0,1,'getDocument(', ')', 'int'),
  \ javaapi#method(0,1,'getStringValue(', ')', 'String'),
  \ javaapi#method(0,1,'getIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getAxisIterator(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNthDescendant(', 'int, int, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNamespaceAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNodeValueIterator(', 'DTMAxisIterator, int, String, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'orderNodes(', 'DTMAxisIterator, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNodeName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeNameX(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNamespaceType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getParent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getStringValueX(', 'int)', 'String'),
  \ javaapi#method(0,1,'copy(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'copy(', 'DTMAxisIterator, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'shallowCopy(', 'int, SerializationHandler) throws TransletException', 'String'),
  \ javaapi#method(0,1,'lessThan(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'characters(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'makeNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'makeNode(', 'DTMAxisIterator)', 'Node'),
  \ javaapi#method(0,1,'makeNodeList(', 'int)', 'NodeList'),
  \ javaapi#method(0,1,'makeNodeList(', 'DTMAxisIterator)', 'NodeList'),
  \ javaapi#method(0,1,'getLanguage(', 'int)', 'String'),
  \ javaapi#method(0,1,'getSize(', ')', 'int'),
  \ javaapi#method(0,1,'getDocumentURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'setFilter(', 'StripFilter)', 'void'),
  \ javaapi#method(0,1,'setupMapping(', 'String[], String[], int[], String[])', 'void'),
  \ javaapi#method(0,1,'isElement(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttribute(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'lookupNamespace(', 'int, String) throws TransletException', 'String'),
  \ javaapi#method(0,1,'getNodeIdent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNodeHandle(', 'int)', 'int'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int)', 'DOM'),
  \ javaapi#method(0,1,'getOutputDomBuilder(', ')', 'SerializationHandler'),
  \ javaapi#method(0,1,'getNSType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getUnparsedEntityURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'getElementsWithIDs(', ')', 'Hashtable'),
  \ javaapi#method(0,1,'startDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'characters(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'characters(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'setEscaping(', 'boolean) throws SAXException', 'boolean'),
  \ javaapi#method(0,1,'startElement(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startElement(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startElement(', 'String, String, String, Attributes) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endElement(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endElement(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'addAttribute(', 'String, String)', 'void'),
  \ javaapi#method(0,1,'addUniqueAttribute(', 'String, String, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'addAttribute(', 'String, String, String, String, String)', 'void'),
  \ javaapi#method(0,1,'namespaceAfterStartElement(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'comment(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'comment(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'processingInstruction(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean)', 'void'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object)', 'void'),
  \ javaapi#method(0,1,'getAxisTraverser(', 'int)', 'DTMAxisTraverser'),
  \ javaapi#method(0,1,'hasChildNodes(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getFirstChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getLastChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, String, String)', 'int'),
  \ javaapi#method(0,1,'getFirstAttribute(', 'int)', 'int'),
  \ javaapi#method(0,1,'getFirstNamespaceNode(', 'int, boolean)', 'int'),
  \ javaapi#method(0,1,'getNextSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getPreviousSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextAttribute(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextNamespaceNode(', 'int, int, boolean)', 'int'),
  \ javaapi#method(0,1,'getOwnerDocument(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDocumentRoot(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValue(', 'int)', 'XMLString'),
  \ javaapi#method(0,1,'getStringValueChunkCount(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValueChunk(', 'int, int, int[])', 'char'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'String, String, int)', 'int'),
  \ javaapi#method(0,1,'getLocalNameFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getLocalName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getPrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeValue(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeType(', 'int)', 'short'),
  \ javaapi#method(0,1,'getLevel(', 'int)', 'short'),
  \ javaapi#method(0,1,'isSupported(', 'String, String)', 'boolean'),
  \ javaapi#method(0,1,'getDocumentBaseURI(', ')', 'String'),
  \ javaapi#method(0,1,'setDocumentBaseURI(', 'String)', 'void'),
  \ javaapi#method(0,1,'getDocumentSystemIdentifier(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentEncoding(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentStandalone(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentVersion(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentAllDeclarationsProcessed(', ')', 'boolean'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationSystemIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationPublicIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getElementById(', 'String)', 'int'),
  \ javaapi#method(0,1,'supportsPreStripping(', ')', 'boolean'),
  \ javaapi#method(0,1,'isNodeAfter(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'isCharacterElementContentWhitespace(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isDocumentAllDeclarationsProcessed(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'dispatchCharactersEvents(', 'int, ContentHandler, boolean) throws SAXException', 'void'),
  \ javaapi#method(0,1,'dispatchToEvents(', 'int, ContentHandler) throws SAXException', 'void'),
  \ javaapi#method(0,1,'getNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'needsTwoThreads(', ')', 'boolean'),
  \ javaapi#method(0,1,'getContentHandler(', ')', 'ContentHandler'),
  \ javaapi#method(0,1,'getLexicalHandler(', ')', 'LexicalHandler'),
  \ javaapi#method(0,1,'getEntityResolver(', ')', 'EntityResolver'),
  \ javaapi#method(0,1,'getDTDHandler(', ')', 'DTDHandler'),
  \ javaapi#method(0,1,'getErrorHandler(', ')', 'ErrorHandler'),
  \ javaapi#method(0,1,'getDeclHandler(', ')', 'DeclHandler'),
  \ javaapi#method(0,1,'appendChild(', 'int, boolean, boolean)', 'void'),
  \ javaapi#method(0,1,'appendTextChild(', 'String)', 'void'),
  \ javaapi#method(0,1,'getSourceLocatorFor(', 'int)', 'SourceLocator'),
  \ javaapi#method(0,1,'documentRegistration(', ')', 'void'),
  \ javaapi#method(0,1,'documentRelease(', ')', 'void'),
  \ ])

call javaapi#class('AnyNodeCounter', 'NodeCounter', [
  \ javaapi#method(0,1,'AnyNodeCounter(', 'Translet, DOM, DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'AnyNodeCounter(', 'Translet, DOM, DTMAxisIterator, boolean)', ''),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'NodeCounter'),
  \ javaapi#method(0,1,'getCounter(', ')', 'String'),
  \ javaapi#method(1,1,'getDefaultNodeCounter(', 'Translet, DOM, DTMAxisIterator)', 'NodeCounter'),
  \ ])

call javaapi#class('BitArray', 'Externalizable', [
  \ javaapi#method(0,1,'BitArray(', ')', ''),
  \ javaapi#method(0,1,'BitArray(', 'int)', ''),
  \ javaapi#method(0,1,'BitArray(', 'int, int[])', ''),
  \ javaapi#method(0,1,'setMask(', 'int)', 'void'),
  \ javaapi#method(0,1,'getMask(', ')', 'int'),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'getBit(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getNextBit(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBitNumber(', 'int)', 'int'),
  \ javaapi#method(0,1,'data(', ')', 'int'),
  \ javaapi#method(0,1,'setBit(', 'int)', 'void'),
  \ javaapi#method(0,1,'merge(', 'BitArray)', 'BitArray'),
  \ javaapi#method(0,1,'resize(', 'int)', 'void'),
  \ javaapi#method(0,1,'cloneArray(', ')', 'BitArray'),
  \ javaapi#method(0,1,'writeExternal(', 'ObjectOutput) throws IOException', 'void'),
  \ javaapi#method(0,1,'readExternal(', 'ObjectInput) throws IOException, ClassNotFoundException', 'void'),
  \ ])

call javaapi#class('CachedNodeListIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'CachedNodeListIterator(', 'DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'getNodeByPosition(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNode(', 'int)', 'int'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('ClonedNodeListIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'ClonedNodeListIterator(', 'CachedNodeListIterator)', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'getNodeByPosition(', 'int)', 'int'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('CollatorFactoryBase', 'CollatorFactory', [
  \ javaapi#field(1,1,'DEFAULT_LOCALE', 'Locale'),
  \ javaapi#field(1,1,'DEFAULT_COLLATOR', 'Collator'),
  \ javaapi#method(0,1,'CollatorFactoryBase(', ')', ''),
  \ javaapi#method(0,1,'getCollator(', 'String, String)', 'Collator'),
  \ javaapi#method(0,1,'getCollator(', 'Locale)', 'Collator'),
  \ ])

call javaapi#interface('CurrentNodeListFilter', '', [
  \ javaapi#method(0,1,'test(', 'int, int, int, int, AbstractTranslet, DTMAxisIterator)', 'boolean'),
  \ ])

call javaapi#class('CurrentNodeListIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'CurrentNodeListIterator(', 'DTMAxisIterator, CurrentNodeListFilter, int, AbstractTranslet)', ''),
  \ javaapi#method(0,1,'CurrentNodeListIterator(', 'DTMAxisIterator, boolean, CurrentNodeListFilter, int, AbstractTranslet)', ''),
  \ javaapi#method(0,1,'forceNaturalOrder(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'isReverse(', ')', 'boolean'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('DOMAdapter', 'DOM', [
  \ javaapi#method(0,1,'DOMAdapter(', 'DOM, String[], String[], int[], String[])', ''),
  \ javaapi#method(0,1,'setupMapping(', 'String[], String[], int[], String[])', 'void'),
  \ javaapi#method(0,1,'getNamesArray(', ')', 'String'),
  \ javaapi#method(0,1,'getUrisArray(', ')', 'String'),
  \ javaapi#method(0,1,'getTypesArray(', ')', 'int'),
  \ javaapi#method(0,1,'getNamespaceArray(', ')', 'String'),
  \ javaapi#method(0,1,'getDOMImpl(', ')', 'DOM'),
  \ javaapi#method(0,1,'getIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getStringValue(', ')', 'String'),
  \ javaapi#method(0,1,'getChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setFilter(', 'StripFilter)', 'void'),
  \ javaapi#method(0,1,'getTypedChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNamespaceAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getAxisIterator(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getMultiDOMMask(', ')', 'int'),
  \ javaapi#method(0,1,'setMultiDOMMask(', 'int)', 'void'),
  \ javaapi#method(0,1,'getNthDescendant(', 'int, int, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNodeValueIterator(', 'DTMAxisIterator, int, String, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'orderNodes(', 'DTMAxisIterator, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNamespaceType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNSType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getParent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getNodeName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeNameX(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getStringValueX(', 'int)', 'String'),
  \ javaapi#method(0,1,'copy(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'copy(', 'DTMAxisIterator, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'shallowCopy(', 'int, SerializationHandler) throws TransletException', 'String'),
  \ javaapi#method(0,1,'lessThan(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'characters(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'makeNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'makeNode(', 'DTMAxisIterator)', 'Node'),
  \ javaapi#method(0,1,'makeNodeList(', 'int)', 'NodeList'),
  \ javaapi#method(0,1,'makeNodeList(', 'DTMAxisIterator)', 'NodeList'),
  \ javaapi#method(0,1,'getLanguage(', 'int)', 'String'),
  \ javaapi#method(0,1,'getSize(', ')', 'int'),
  \ javaapi#method(0,1,'setDocumentURI(', 'String)', 'void'),
  \ javaapi#method(0,1,'getDocumentURI(', ')', 'String'),
  \ javaapi#method(0,1,'getDocumentURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocument(', ')', 'int'),
  \ javaapi#method(0,1,'isElement(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttribute(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getNodeIdent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNodeHandle(', 'int)', 'int'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int)', 'DOM'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int, boolean)', 'DOM'),
  \ javaapi#method(0,1,'getOutputDomBuilder(', ')', 'SerializationHandler'),
  \ javaapi#method(0,1,'lookupNamespace(', 'int, String) throws TransletException', 'String'),
  \ javaapi#method(0,1,'getUnparsedEntityURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'getElementsWithIDs(', ')', 'Hashtable'),
  \ ])

call javaapi#interface('DOMBuilder', 'ExtendedSAX', [
  \ ])

call javaapi#class('DOMWSFilter', 'DTMWSFilter', [
  \ javaapi#method(0,1,'DOMWSFilter(', 'AbstractTranslet)', ''),
  \ javaapi#method(0,1,'getShouldStripSpace(', 'int, DTM)', 'short'),
  \ ])

call javaapi#class('DocumentCache', 'DOMCache', [
  \ javaapi#method(0,1,'DocumentCache(', 'int) throws SAXException', ''),
  \ javaapi#method(0,1,'DocumentCache(', 'int, XSLTCDTMManager) throws SAXException', ''),
  \ javaapi#method(0,1,'retrieveDocument(', 'String, String, Translet)', 'DOM'),
  \ javaapi#method(0,1,'getStatistics(', 'PrintWriter)', 'void'),
  \ ])

call javaapi#class('DupFilterIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'DupFilterIterator(', 'DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ ])

call javaapi#class('EmptyFilter', 'Filter', [
  \ javaapi#method(0,1,'EmptyFilter(', ')', ''),
  \ javaapi#method(0,1,'test(', 'int)', 'boolean'),
  \ ])

call javaapi#interface('ExtendedSAX', 'DeclHandler', [
  \ ])

call javaapi#interface('Filter', '', [
  \ javaapi#method(0,1,'test(', 'int)', 'boolean'),
  \ ])

call javaapi#class('FilterIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'FilterIterator(', 'DTMAxisIterator, DTMFilter)', ''),
  \ javaapi#method(0,1,'isReverse(', ')', 'boolean'),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('FilteredStepIterator', 'StepIterator', [
  \ javaapi#method(0,1,'FilteredStepIterator(', 'DTMAxisIterator, DTMAxisIterator, Filter)', ''),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ ])

call javaapi#class('ForwardPositionIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'ForwardPositionIterator(', 'DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('KeyIndex', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'KeyIndex(', 'int)', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'add(', 'Object, int, int)', 'void'),
  \ javaapi#method(0,1,'merge(', 'KeyIndex)', 'void'),
  \ javaapi#method(0,1,'lookupId(', 'Object)', 'void'),
  \ javaapi#method(0,1,'getDOMNodeById(', 'String)', 'IntegerArray'),
  \ javaapi#method(0,1,'lookupKey(', 'Object)', 'void'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'containsID(', 'int, Object)', 'int'),
  \ javaapi#method(0,1,'containsKey(', 'int, Object)', 'int'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getStartNode(', ')', 'int'),
  \ javaapi#method(0,1,'isReverse(', ')', 'boolean'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setDom(', 'DOM, int)', 'void'),
  \ javaapi#method(0,1,'getKeyIndexIterator(', 'Object, boolean)', 'KeyIndexIterator'),
  \ javaapi#method(0,1,'getKeyIndexIterator(', 'String, boolean)', 'KeyIndexIterator'),
  \ javaapi#method(0,1,'getKeyIndexIterator(', 'DTMAxisIterator, boolean)', 'KeyIndexIterator'),
  \ ])

call javaapi#class('LoadDocument', '', [
  \ javaapi#method(0,1,'LoadDocument(', ')', ''),
  \ javaapi#method(1,1,'documentF(', 'Object, DTMAxisIterator, String, AbstractTranslet, DOM) throws TransletException', 'DTMAxisIterator'),
  \ javaapi#method(1,1,'documentF(', 'Object, String, AbstractTranslet, DOM) throws TransletException', 'DTMAxisIterator'),
  \ ])

call javaapi#class('MatchingIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'MatchingIterator(', 'int, DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('MultiDOM', 'DOM', [
  \ javaapi#method(0,1,'MultiDOM(', 'DOM)', ''),
  \ javaapi#method(0,1,'nextMask(', ')', 'int'),
  \ javaapi#method(0,1,'setupMapping(', 'String[], String[], int[], String[])', 'void'),
  \ javaapi#method(0,1,'addDOMAdapter(', 'DOMAdapter)', 'int'),
  \ javaapi#method(0,1,'getDocumentMask(', 'String)', 'int'),
  \ javaapi#method(0,1,'getDOMAdapter(', 'String)', 'DOM'),
  \ javaapi#method(0,1,'getDocument(', ')', 'int'),
  \ javaapi#method(0,1,'getDTMManager(', ')', 'DTMManager'),
  \ javaapi#method(0,1,'getIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getStringValue(', ')', 'String'),
  \ javaapi#method(0,1,'getChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getAxisIterator(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNthDescendant(', 'int, int, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNodeValueIterator(', 'DTMAxisIterator, int, String, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNamespaceAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'orderNodes(', 'DTMAxisIterator, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNamespaceType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNSType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getParent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getNodeName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeNameX(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getStringValueX(', 'int)', 'String'),
  \ javaapi#method(0,1,'copy(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'copy(', 'DTMAxisIterator, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'shallowCopy(', 'int, SerializationHandler) throws TransletException', 'String'),
  \ javaapi#method(0,1,'lessThan(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'characters(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'setFilter(', 'StripFilter)', 'void'),
  \ javaapi#method(0,1,'makeNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'makeNode(', 'DTMAxisIterator)', 'Node'),
  \ javaapi#method(0,1,'makeNodeList(', 'int)', 'NodeList'),
  \ javaapi#method(0,1,'makeNodeList(', 'DTMAxisIterator)', 'NodeList'),
  \ javaapi#method(0,1,'getLanguage(', 'int)', 'String'),
  \ javaapi#method(0,1,'getSize(', ')', 'int'),
  \ javaapi#method(0,1,'getDocumentURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'isElement(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttribute(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getDTMId(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDTM(', 'int)', 'DOM'),
  \ javaapi#method(0,1,'getNodeIdent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNodeHandle(', 'int)', 'int'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int)', 'DOM'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int, boolean)', 'DOM'),
  \ javaapi#method(0,1,'getMain(', ')', 'DOM'),
  \ javaapi#method(0,1,'getOutputDomBuilder(', ')', 'SerializationHandler'),
  \ javaapi#method(0,1,'lookupNamespace(', 'int, String) throws TransletException', 'String'),
  \ javaapi#method(0,1,'getUnparsedEntityURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'getElementsWithIDs(', ')', 'Hashtable'),
  \ ])

call javaapi#class('MultiValuedNodeHeapIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'MultiValuedNodeHeapIterator(', ')', ''),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,0,'addHeapNode(', 'HeapNode)', 'void'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,0,'init(', ')', 'void'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ ])

call javaapi#class('MultipleNodeCounter', 'NodeCounter', [
  \ javaapi#method(0,1,'MultipleNodeCounter(', 'Translet, DOM, DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'MultipleNodeCounter(', 'Translet, DOM, DTMAxisIterator, boolean)', ''),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'NodeCounter'),
  \ javaapi#method(0,1,'getCounter(', ')', 'String'),
  \ javaapi#method(1,1,'getDefaultNodeCounter(', 'Translet, DOM, DTMAxisIterator)', 'NodeCounter'),
  \ ])

call javaapi#class('NodeCounter', '', [
  \ javaapi#field(1,1,'END', 'int'),
  \ javaapi#field(0,0,'_node', 'int'),
  \ javaapi#field(0,0,'_nodeType', 'int'),
  \ javaapi#field(0,0,'_value', 'double'),
  \ javaapi#field(0,1,'_document', 'DOM'),
  \ javaapi#field(0,1,'_iterator', 'DTMAxisIterator'),
  \ javaapi#field(0,1,'_translet', 'Translet'),
  \ javaapi#field(0,0,'_format', 'String'),
  \ javaapi#field(0,0,'_lang', 'String'),
  \ javaapi#field(0,0,'_letterValue', 'String'),
  \ javaapi#field(0,0,'_groupSep', 'String'),
  \ javaapi#field(0,0,'_groupSize', 'int'),
  \ javaapi#field(0,0,'_hasFrom', 'boolean'),
  \ javaapi#method(0,0,'NodeCounter(', 'Translet, DOM, DTMAxisIterator)', ''),
  \ javaapi#method(0,0,'NodeCounter(', 'Translet, DOM, DTMAxisIterator, boolean)', ''),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'NodeCounter'),
  \ javaapi#method(0,1,'setValue(', 'double)', 'NodeCounter'),
  \ javaapi#method(0,0,'setFormatting(', 'String, String, String, String, String)', 'void'),
  \ javaapi#method(0,1,'setDefaultFormatting(', ')', 'NodeCounter'),
  \ javaapi#method(0,1,'getCounter(', ')', 'String'),
  \ javaapi#method(0,1,'getCounter(', 'String, String, String, String, String)', 'String'),
  \ javaapi#method(0,1,'matchesCount(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'matchesFrom(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'formatNumbers(', 'int)', 'String'),
  \ javaapi#method(0,0,'formatNumbers(', 'int[])', 'String'),
  \ ])

call javaapi#class('NodeIteratorBase', 'NodeIterator', [
  \ javaapi#field(0,0,'_last', 'int'),
  \ javaapi#field(0,0,'_position', 'int'),
  \ javaapi#field(0,0,'_markedNode', 'int'),
  \ javaapi#field(0,0,'_startNode', 'int'),
  \ javaapi#field(0,0,'_includeSelf', 'boolean'),
  \ javaapi#field(0,0,'_isRestartable', 'boolean'),
  \ javaapi#method(0,1,'NodeIteratorBase(', ')', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'NodeIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'NodeIterator'),
  \ javaapi#method(0,1,'includeSelf(', ')', 'NodeIterator'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'isReverse(', ')', 'boolean'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'NodeIterator'),
  \ javaapi#method(0,0,'returnNode(', 'int)', 'int'),
  \ javaapi#method(0,0,'resetPosition(', ')', 'NodeIterator'),
  \ ])

call javaapi#class('NodeSortRecord', '', [
  \ javaapi#field(1,1,'COMPARE_STRING', 'int'),
  \ javaapi#field(1,1,'COMPARE_NUMERIC', 'int'),
  \ javaapi#field(1,1,'COMPARE_ASCENDING', 'int'),
  \ javaapi#field(1,1,'COMPARE_DESCENDING', 'int'),
  \ javaapi#field(0,0,'_collator', 'Collator'),
  \ javaapi#field(0,0,'_collators', 'Collator'),
  \ javaapi#field(0,0,'_locale', 'Locale'),
  \ javaapi#field(0,0,'_collatorFactory', 'CollatorFactory'),
  \ javaapi#field(0,0,'_settings', 'SortSettings'),
  \ javaapi#method(0,1,'NodeSortRecord(', 'int)', ''),
  \ javaapi#method(0,1,'NodeSortRecord(', ')', ''),
  \ javaapi#method(0,1,'initialize(', 'int, int, DOM, SortSettings) throws TransletException', 'void'),
  \ javaapi#method(0,1,'getNode(', ')', 'int'),
  \ javaapi#method(0,1,'compareDocOrder(', 'NodeSortRecord)', 'int'),
  \ javaapi#method(0,1,'compareTo(', 'NodeSortRecord)', 'int'),
  \ javaapi#method(0,1,'getCollator(', ')', 'Collator'),
  \ javaapi#method(0,1,'extractValueFromDOM(', 'DOM, int, int, AbstractTranslet, int)', 'String'),
  \ ])

call javaapi#class('NodeSortRecordFactory', '', [
  \ javaapi#field(0,0,'_collator', 'Collator'),
  \ javaapi#method(0,1,'NodeSortRecordFactory(', 'DOM, String, Translet, String[], String[]) throws TransletException', ''),
  \ javaapi#method(0,1,'NodeSortRecordFactory(', 'DOM, String, Translet, String[], String[], String[], String[]) throws TransletException', ''),
  \ javaapi#method(0,1,'makeNodeSortRecord(', 'int, int) throws ExceptionInInitializerError, LinkageError, IllegalAccessException, InstantiationException, SecurityException, TransletException', 'NodeSortRecord'),
  \ javaapi#method(0,1,'getClassName(', ')', 'String'),
  \ ])

call javaapi#class('NthIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'NthIterator(', 'DTMAxisIterator, int)', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('SAXImpl', 'SAX2DTM2', [
  \ javaapi#method(0,1,'setDocumentURI(', 'String)', 'void'),
  \ javaapi#method(0,1,'getDocumentURI(', ')', 'String'),
  \ javaapi#method(0,1,'getDocumentURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'setupMapping(', 'String[], String[], int[], String[])', 'void'),
  \ javaapi#method(0,1,'lookupNamespace(', 'int, String) throws TransletException', 'String'),
  \ javaapi#method(0,1,'isElement(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttribute(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getSize(', ')', 'int'),
  \ javaapi#method(0,1,'setFilter(', 'StripFilter)', 'void'),
  \ javaapi#method(0,1,'lessThan(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'makeNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'makeNode(', 'DTMAxisIterator)', 'Node'),
  \ javaapi#method(0,1,'makeNodeList(', 'int)', 'NodeList'),
  \ javaapi#method(0,1,'makeNodeList(', 'DTMAxisIterator)', 'NodeList'),
  \ javaapi#method(0,1,'getNodeValueIterator(', 'DTMAxisIterator, int, String, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'orderNodes(', 'DTMAxisIterator, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNSType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNamespaceType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getGeneralizedType(', 'String)', 'int'),
  \ javaapi#method(0,1,'getGeneralizedType(', 'String, boolean)', 'int'),
  \ javaapi#method(0,1,'getMapping(', 'String[], String[], int[])', 'short'),
  \ javaapi#method(0,1,'getReverseMapping(', 'String[], String[], int[])', 'int'),
  \ javaapi#method(0,1,'getNamespaceMapping(', 'String[])', 'short'),
  \ javaapi#method(0,1,'getReverseNamespaceMapping(', 'String[])', 'short'),
  \ javaapi#method(0,1,'SAXImpl(', 'XSLTCDTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean, boolean)', ''),
  \ javaapi#method(0,1,'SAXImpl(', 'XSLTCDTMManager, Source, int, DTMWSFilter, XMLStringFactory, boolean, int, boolean, boolean)', ''),
  \ javaapi#method(0,1,'migrateTo(', 'DTMManager)', 'void'),
  \ javaapi#method(0,1,'getElementById(', 'String)', 'int'),
  \ javaapi#method(0,1,'hasDOMSource(', ')', 'boolean'),
  \ javaapi#method(0,0,'getShouldStripWhitespace(', ')', 'boolean'),
  \ javaapi#method(0,1,'characters(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'startElement(', 'String, String, String, Attributes, Node) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startElement(', 'String, String, String, Attributes) throws SAXException', 'void'),
  \ javaapi#method(0,1,'endElement(', 'String, String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'processingInstruction(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'ignorableWhitespace(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'startPrefixMapping(', 'String, String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'comment(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'setEscaping(', 'boolean)', 'boolean'),
  \ javaapi#method(0,1,'print(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'getNodeName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getAttributeValue(', 'int, int)', 'String'),
  \ javaapi#method(0,1,'getAttributeValue(', 'String, int)', 'String'),
  \ javaapi#method(0,1,'getChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getAxisIterator(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNamespaceAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedDescendantIterator(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNthDescendant(', 'int, int, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'characters(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'copy(', 'DTMAxisIterator, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'copy(', 'SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'copy(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'shallowCopy(', 'int, SerializationHandler) throws TransletException', 'String'),
  \ javaapi#method(0,1,'getLanguage(', 'int)', 'String'),
  \ javaapi#method(0,1,'getBuilder(', ')', 'DOMBuilder'),
  \ javaapi#method(0,1,'getOutputDomBuilder(', ')', 'SerializationHandler'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int)', 'DOM'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int, boolean)', 'DOM'),
  \ javaapi#method(0,1,'getElementsWithIDs(', ')', 'Hashtable'),
  \ javaapi#method(0,1,'getUnparsedEntityURI(', 'String)', 'String'),
  \ ])

call javaapi#class('SimpleResultTreeImpl', 'EmptySerializer', [
  \ javaapi#field(1,1,'RTF_ROOT', 'int'),
  \ javaapi#field(1,1,'RTF_TEXT', 'int'),
  \ javaapi#field(1,1,'NUMBER_OF_NODES', 'int'),
  \ javaapi#field(0,0,'_textArray', 'String'),
  \ javaapi#field(0,0,'_dtmManager', 'XSLTCDTMManager'),
  \ javaapi#field(0,0,'_size', 'int'),
  \ javaapi#method(0,1,'SimpleResultTreeImpl(', 'XSLTCDTMManager, int)', ''),
  \ javaapi#method(0,1,'getDTMManager(', ')', 'DTMManagerDefault'),
  \ javaapi#method(0,1,'getDocument(', ')', 'int'),
  \ javaapi#method(0,1,'getStringValue(', ')', 'String'),
  \ javaapi#method(0,1,'getIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedChildren(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getAxisIterator(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getTypedAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNthDescendant(', 'int, int, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNamespaceAxisIterator(', 'int, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNodeValueIterator(', 'DTMAxisIterator, int, String, boolean)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'orderNodes(', 'DTMAxisIterator, int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getNodeName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeNameX(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNamespaceType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getParent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getStringValueX(', 'int)', 'String'),
  \ javaapi#method(0,1,'copy(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'copy(', 'DTMAxisIterator, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'shallowCopy(', 'int, SerializationHandler) throws TransletException', 'String'),
  \ javaapi#method(0,1,'lessThan(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'characters(', 'int, SerializationHandler) throws TransletException', 'void'),
  \ javaapi#method(0,1,'makeNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'makeNode(', 'DTMAxisIterator)', 'Node'),
  \ javaapi#method(0,1,'makeNodeList(', 'int)', 'NodeList'),
  \ javaapi#method(0,1,'makeNodeList(', 'DTMAxisIterator)', 'NodeList'),
  \ javaapi#method(0,1,'getLanguage(', 'int)', 'String'),
  \ javaapi#method(0,1,'getSize(', ')', 'int'),
  \ javaapi#method(0,1,'getDocumentURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'setFilter(', 'StripFilter)', 'void'),
  \ javaapi#method(0,1,'setupMapping(', 'String[], String[], int[], String[])', 'void'),
  \ javaapi#method(0,1,'isElement(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttribute(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'lookupNamespace(', 'int, String) throws TransletException', 'String'),
  \ javaapi#method(0,1,'getNodeIdent(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNodeHandle(', 'int)', 'int'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int)', 'DOM'),
  \ javaapi#method(0,1,'getResultTreeFrag(', 'int, int, boolean)', 'DOM'),
  \ javaapi#method(0,1,'getOutputDomBuilder(', ')', 'SerializationHandler'),
  \ javaapi#method(0,1,'getNSType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getUnparsedEntityURI(', 'String)', 'String'),
  \ javaapi#method(0,1,'getElementsWithIDs(', ')', 'Hashtable'),
  \ javaapi#method(0,1,'startDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'endDocument(', ') throws SAXException', 'void'),
  \ javaapi#method(0,1,'characters(', 'String) throws SAXException', 'void'),
  \ javaapi#method(0,1,'characters(', 'char[], int, int) throws SAXException', 'void'),
  \ javaapi#method(0,1,'setEscaping(', 'boolean) throws SAXException', 'boolean'),
  \ javaapi#method(0,1,'setFeature(', 'String, boolean)', 'void'),
  \ javaapi#method(0,1,'setProperty(', 'String, Object)', 'void'),
  \ javaapi#method(0,1,'getAxisTraverser(', 'int)', 'DTMAxisTraverser'),
  \ javaapi#method(0,1,'hasChildNodes(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getFirstChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getLastChild(', 'int)', 'int'),
  \ javaapi#method(0,1,'getAttributeNode(', 'int, String, String)', 'int'),
  \ javaapi#method(0,1,'getFirstAttribute(', 'int)', 'int'),
  \ javaapi#method(0,1,'getFirstNamespaceNode(', 'int, boolean)', 'int'),
  \ javaapi#method(0,1,'getNextSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getPreviousSibling(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextAttribute(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextNamespaceNode(', 'int, int, boolean)', 'int'),
  \ javaapi#method(0,1,'getOwnerDocument(', 'int)', 'int'),
  \ javaapi#method(0,1,'getDocumentRoot(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValue(', 'int)', 'XMLString'),
  \ javaapi#method(0,1,'getStringValueChunkCount(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStringValueChunk(', 'int, int, int[])', 'char'),
  \ javaapi#method(0,1,'getExpandedTypeID(', 'String, String, int)', 'int'),
  \ javaapi#method(0,1,'getLocalNameFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceFromExpandedNameID(', 'int)', 'String'),
  \ javaapi#method(0,1,'getLocalName(', 'int)', 'String'),
  \ javaapi#method(0,1,'getPrefix(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNamespaceURI(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeValue(', 'int)', 'String'),
  \ javaapi#method(0,1,'getNodeType(', 'int)', 'short'),
  \ javaapi#method(0,1,'getLevel(', 'int)', 'short'),
  \ javaapi#method(0,1,'isSupported(', 'String, String)', 'boolean'),
  \ javaapi#method(0,1,'getDocumentBaseURI(', ')', 'String'),
  \ javaapi#method(0,1,'setDocumentBaseURI(', 'String)', 'void'),
  \ javaapi#method(0,1,'getDocumentSystemIdentifier(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentEncoding(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentStandalone(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentVersion(', 'int)', 'String'),
  \ javaapi#method(0,1,'getDocumentAllDeclarationsProcessed(', ')', 'boolean'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationSystemIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getDocumentTypeDeclarationPublicIdentifier(', ')', 'String'),
  \ javaapi#method(0,1,'getElementById(', 'String)', 'int'),
  \ javaapi#method(0,1,'supportsPreStripping(', ')', 'boolean'),
  \ javaapi#method(0,1,'isNodeAfter(', 'int, int)', 'boolean'),
  \ javaapi#method(0,1,'isCharacterElementContentWhitespace(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isDocumentAllDeclarationsProcessed(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'isAttributeSpecified(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'dispatchCharactersEvents(', 'int, ContentHandler, boolean) throws SAXException', 'void'),
  \ javaapi#method(0,1,'dispatchToEvents(', 'int, ContentHandler) throws SAXException', 'void'),
  \ javaapi#method(0,1,'getNode(', 'int)', 'Node'),
  \ javaapi#method(0,1,'needsTwoThreads(', ')', 'boolean'),
  \ javaapi#method(0,1,'getContentHandler(', ')', 'ContentHandler'),
  \ javaapi#method(0,1,'getLexicalHandler(', ')', 'LexicalHandler'),
  \ javaapi#method(0,1,'getEntityResolver(', ')', 'EntityResolver'),
  \ javaapi#method(0,1,'getDTDHandler(', ')', 'DTDHandler'),
  \ javaapi#method(0,1,'getErrorHandler(', ')', 'ErrorHandler'),
  \ javaapi#method(0,1,'getDeclHandler(', ')', 'DeclHandler'),
  \ javaapi#method(0,1,'appendChild(', 'int, boolean, boolean)', 'void'),
  \ javaapi#method(0,1,'appendTextChild(', 'String)', 'void'),
  \ javaapi#method(0,1,'getSourceLocatorFor(', 'int)', 'SourceLocator'),
  \ javaapi#method(0,1,'documentRegistration(', ')', 'void'),
  \ javaapi#method(0,1,'documentRelease(', ')', 'void'),
  \ javaapi#method(0,1,'migrateTo(', 'DTMManager)', 'void'),
  \ ])

call javaapi#class('SingleNodeCounter', 'NodeCounter', [
  \ javaapi#method(0,1,'SingleNodeCounter(', 'Translet, DOM, DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'SingleNodeCounter(', 'Translet, DOM, DTMAxisIterator, boolean)', ''),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'NodeCounter'),
  \ javaapi#method(0,1,'getCounter(', ')', 'String'),
  \ javaapi#method(1,1,'getDefaultNodeCounter(', 'Translet, DOM, DTMAxisIterator)', 'NodeCounter'),
  \ ])

call javaapi#class('SingletonIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'SingletonIterator(', ')', ''),
  \ javaapi#method(0,1,'SingletonIterator(', 'int)', ''),
  \ javaapi#method(0,1,'SingletonIterator(', 'int, boolean)', ''),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#class('SortSettings', '', [
  \ ])

call javaapi#class('SortingIterator', 'DTMAxisIteratorBase', [
  \ javaapi#method(0,1,'SortingIterator(', 'DTMAxisIterator, NodeSortRecordFactory)', ''),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'getPosition(', ')', 'int'),
  \ javaapi#method(0,1,'getLast(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ ])

call javaapi#class('StepIterator', 'DTMAxisIteratorBase', [
  \ javaapi#field(0,0,'_source', 'DTMAxisIterator'),
  \ javaapi#field(0,0,'_iterator', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'StepIterator(', 'DTMAxisIterator, DTMAxisIterator)', ''),
  \ javaapi#method(0,1,'setRestartable(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'cloneIterator(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'setStartNode(', 'int)', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'reset(', ')', 'DTMAxisIterator'),
  \ javaapi#method(0,1,'next(', ')', 'int'),
  \ javaapi#method(0,1,'setMark(', ')', 'void'),
  \ javaapi#method(0,1,'gotoMark(', ')', 'void'),
  \ ])

call javaapi#interface('StripWhitespaceFilter', '', [
  \ javaapi#method(0,1,'stripSpace(', 'DOM, int, int)', 'boolean'),
  \ ])

call javaapi#class('UnionIterator', 'MultiValuedNodeHeapIterator', [
  \ javaapi#method(0,1,'UnionIterator(', 'DOM)', ''),
  \ javaapi#method(0,1,'addIterator(', 'DTMAxisIterator)', 'UnionIterator'),
  \ ])

call javaapi#class('XSLTCDTMManager', 'DTMManagerDefault', [
  \ javaapi#method(0,1,'XSLTCDTMManager(', ')', ''),
  \ javaapi#method(1,1,'newInstance(', ')', 'XSLTCDTMManager'),
  \ javaapi#method(1,1,'getDTMManagerClass(', ')', 'Class'),
  \ javaapi#method(0,1,'getDTM(', 'Source, boolean, DTMWSFilter, boolean, boolean)', 'DTM'),
  \ javaapi#method(0,1,'getDTM(', 'Source, boolean, DTMWSFilter, boolean, boolean, boolean)', 'DTM'),
  \ javaapi#method(0,1,'getDTM(', 'Source, boolean, DTMWSFilter, boolean, boolean, boolean, boolean)', 'DTM'),
  \ javaapi#method(0,1,'getDTM(', 'Source, boolean, DTMWSFilter, boolean, boolean, boolean, int, boolean)', 'DTM'),
  \ javaapi#method(0,1,'getDTM(', 'Source, boolean, DTMWSFilter, boolean, boolean, boolean, int, boolean, boolean)', 'DTM'),
  \ ])

