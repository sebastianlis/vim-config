call javaapi#namespace('sun.awt.geom')

call javaapi#class('AreaOp', '', [
  \ javaapi#field(1,1,'CTAG_LEFT', 'int'),
  \ javaapi#field(1,1,'CTAG_RIGHT', 'int'),
  \ javaapi#field(1,1,'ETAG_IGNORE', 'int'),
  \ javaapi#field(1,1,'ETAG_ENTER', 'int'),
  \ javaapi#field(1,1,'ETAG_EXIT', 'int'),
  \ javaapi#field(1,1,'RSTAG_INSIDE', 'int'),
  \ javaapi#field(1,1,'RSTAG_OUTSIDE', 'int'),
  \ javaapi#method(0,1,'newRow(', ')', 'void'),
  \ javaapi#method(0,1,'classify(', 'Edge)', 'int'),
  \ javaapi#method(0,1,'getState(', ')', 'int'),
  \ javaapi#method(0,1,'calculate(', 'Vector, Vector)', 'Vector'),
  \ javaapi#method(1,1,'finalizeSubCurves(', 'Vector, Vector)', 'void'),
  \ javaapi#method(1,1,'resolveLinks(', 'Vector, Vector, Vector)', 'void'),
  \ javaapi#method(1,1,'obstructs(', 'double, double, int)', 'boolean'),
  \ ])

call javaapi#class('ChainEnd', '', [
  \ javaapi#method(0,1,'ChainEnd(', 'CurveLink, ChainEnd)', ''),
  \ javaapi#method(0,1,'getChain(', ')', 'CurveLink'),
  \ javaapi#method(0,1,'setOtherEnd(', 'ChainEnd)', 'void'),
  \ javaapi#method(0,1,'getPartner(', ')', 'ChainEnd'),
  \ javaapi#method(0,1,'linkTo(', 'ChainEnd)', 'CurveLink'),
  \ javaapi#method(0,1,'addLink(', 'CurveLink)', 'void'),
  \ javaapi#method(0,1,'getX(', ')', 'double'),
  \ ])

call javaapi#class('Crossings', '', [
  \ javaapi#field(1,1,'debug', 'boolean'),
  \ javaapi#method(0,1,'Crossings(', 'double, double, double, double)', ''),
  \ javaapi#method(0,1,'getXLo(', ')', 'double'),
  \ javaapi#method(0,1,'getYLo(', ')', 'double'),
  \ javaapi#method(0,1,'getXHi(', ')', 'double'),
  \ javaapi#method(0,1,'getYHi(', ')', 'double'),
  \ javaapi#method(0,1,'record(', 'double, double, int)', 'void'),
  \ javaapi#method(0,1,'print(', ')', 'void'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'covers(', 'double, double)', 'boolean'),
  \ javaapi#method(1,1,'findCrossings(', 'Vector, double, double, double, double)', 'Crossings'),
  \ javaapi#method(1,1,'findCrossings(', 'PathIterator, double, double, double, double)', 'Crossings'),
  \ javaapi#method(0,1,'accumulateLine(', 'double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'accumulateLine(', 'double, double, double, double, int)', 'boolean'),
  \ javaapi#method(0,1,'accumulateQuad(', 'double, double, double[])', 'boolean'),
  \ javaapi#method(0,1,'accumulateCubic(', 'double, double, double[])', 'boolean'),
  \ ])

call javaapi#class('Curve', '', [
  \ javaapi#field(1,1,'INCREASING', 'int'),
  \ javaapi#field(1,1,'DECREASING', 'int'),
  \ javaapi#field(0,0,'direction', 'int'),
  \ javaapi#field(1,1,'RECT_INTERSECTS', 'int'),
  \ javaapi#field(1,1,'TMIN', 'double'),
  \ javaapi#method(1,1,'insertMove(', 'Vector, double, double)', 'void'),
  \ javaapi#method(1,1,'insertLine(', 'Vector, double, double, double, double)', 'void'),
  \ javaapi#method(1,1,'insertQuad(', 'Vector, double, double, double[])', 'void'),
  \ javaapi#method(1,1,'insertCubic(', 'Vector, double, double, double[])', 'void'),
  \ javaapi#method(1,1,'pointCrossingsForPath(', 'PathIterator, double, double)', 'int'),
  \ javaapi#method(1,1,'pointCrossingsForLine(', 'double, double, double, double, double, double)', 'int'),
  \ javaapi#method(1,1,'pointCrossingsForQuad(', 'double, double, double, double, double, double, double, double, int)', 'int'),
  \ javaapi#method(1,1,'pointCrossingsForCubic(', 'double, double, double, double, double, double, double, double, double, double, int)', 'int'),
  \ javaapi#method(1,1,'rectCrossingsForPath(', 'PathIterator, double, double, double, double)', 'int'),
  \ javaapi#method(1,1,'rectCrossingsForLine(', 'int, double, double, double, double, double, double, double, double)', 'int'),
  \ javaapi#method(1,1,'rectCrossingsForQuad(', 'int, double, double, double, double, double, double, double, double, double, double, int)', 'int'),
  \ javaapi#method(1,1,'rectCrossingsForCubic(', 'int, double, double, double, double, double, double, double, double, double, double, double, double, int)', 'int'),
  \ javaapi#method(0,1,'Curve(', 'int)', ''),
  \ javaapi#method(0,1,'getDirection(', ')', 'int'),
  \ javaapi#method(0,1,'getWithDirection(', 'int)', 'Curve'),
  \ javaapi#method(1,1,'round(', 'double)', 'double'),
  \ javaapi#method(1,1,'orderof(', 'double, double)', 'int'),
  \ javaapi#method(1,1,'signeddiffbits(', 'double, double)', 'long'),
  \ javaapi#method(1,1,'diffbits(', 'double, double)', 'long'),
  \ javaapi#method(1,1,'prev(', 'double)', 'double'),
  \ javaapi#method(1,1,'next(', 'double)', 'double'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'controlPointString(', ')', 'String'),
  \ javaapi#method(0,1,'getOrder(', ')', 'int'),
  \ javaapi#method(0,1,'getXTop(', ')', 'double'),
  \ javaapi#method(0,1,'getYTop(', ')', 'double'),
  \ javaapi#method(0,1,'getXBot(', ')', 'double'),
  \ javaapi#method(0,1,'getYBot(', ')', 'double'),
  \ javaapi#method(0,1,'getXMin(', ')', 'double'),
  \ javaapi#method(0,1,'getXMax(', ')', 'double'),
  \ javaapi#method(0,1,'getX0(', ')', 'double'),
  \ javaapi#method(0,1,'getY0(', ')', 'double'),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'XforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'TforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'XforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'YforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'dXforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'dYforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'nextVertical(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'crossingsFor(', 'double, double)', 'int'),
  \ javaapi#method(0,1,'accumulateCrossings(', 'Crossings)', 'boolean'),
  \ javaapi#method(0,1,'enlarge(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'getSubCurve(', 'double, double)', 'Curve'),
  \ javaapi#method(0,1,'getReversedCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'getSubCurve(', 'double, double, int)', 'Curve'),
  \ javaapi#method(0,1,'compareTo(', 'Curve, double[])', 'int'),
  \ javaapi#method(0,1,'findIntersect(', 'Curve, double[], double, int, int, double, double, double, double, double, double, double, double, double, double, double, double)', 'boolean'),
  \ javaapi#method(0,1,'refineTforY(', 'double, double, double)', 'double'),
  \ javaapi#method(0,1,'fairlyClose(', 'double, double)', 'boolean'),
  \ javaapi#method(0,1,'getSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('CurveLink', '', [
  \ javaapi#method(0,1,'CurveLink(', 'Curve, double, double, int)', ''),
  \ javaapi#method(0,1,'absorb(', 'CurveLink)', 'boolean'),
  \ javaapi#method(0,1,'absorb(', 'Curve, double, double, int)', 'boolean'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'getCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'getSubCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'getMoveto(', ')', 'Curve'),
  \ javaapi#method(0,1,'getXTop(', ')', 'double'),
  \ javaapi#method(0,1,'getYTop(', ')', 'double'),
  \ javaapi#method(0,1,'getXBot(', ')', 'double'),
  \ javaapi#method(0,1,'getYBot(', ')', 'double'),
  \ javaapi#method(0,1,'getX(', ')', 'double'),
  \ javaapi#method(0,1,'getEdgeTag(', ')', 'int'),
  \ javaapi#method(0,1,'setNext(', 'CurveLink)', 'void'),
  \ javaapi#method(0,1,'getNext(', ')', 'CurveLink'),
  \ ])

call javaapi#class('Edge', '', [
  \ javaapi#method(0,1,'Edge(', 'Curve, int)', ''),
  \ javaapi#method(0,1,'Edge(', 'Curve, int, int)', ''),
  \ javaapi#method(0,1,'getCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'getCurveTag(', ')', 'int'),
  \ javaapi#method(0,1,'getEdgeTag(', ')', 'int'),
  \ javaapi#method(0,1,'setEdgeTag(', 'int)', 'void'),
  \ javaapi#method(0,1,'getEquivalence(', ')', 'int'),
  \ javaapi#method(0,1,'setEquivalence(', 'int)', 'void'),
  \ javaapi#method(0,1,'compareTo(', 'Edge, double[])', 'int'),
  \ javaapi#method(0,1,'record(', 'double, int)', 'void'),
  \ javaapi#method(0,1,'isActiveFor(', 'double, int)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('Order0', 'Curve', [
  \ javaapi#method(0,1,'Order0(', 'double, double)', ''),
  \ javaapi#method(0,1,'getOrder(', ')', 'int'),
  \ javaapi#method(0,1,'getXTop(', ')', 'double'),
  \ javaapi#method(0,1,'getYTop(', ')', 'double'),
  \ javaapi#method(0,1,'getXBot(', ')', 'double'),
  \ javaapi#method(0,1,'getYBot(', ')', 'double'),
  \ javaapi#method(0,1,'getXMin(', ')', 'double'),
  \ javaapi#method(0,1,'getXMax(', ')', 'double'),
  \ javaapi#method(0,1,'getX0(', ')', 'double'),
  \ javaapi#method(0,1,'getY0(', ')', 'double'),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'XforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'TforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'XforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'YforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'dXforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'dYforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'nextVertical(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'crossingsFor(', 'double, double)', 'int'),
  \ javaapi#method(0,1,'accumulateCrossings(', 'Crossings)', 'boolean'),
  \ javaapi#method(0,1,'enlarge(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'getSubCurve(', 'double, double, int)', 'Curve'),
  \ javaapi#method(0,1,'getReversedCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'getSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Order1', 'Curve', [
  \ javaapi#method(0,1,'Order1(', 'double, double, double, double, int)', ''),
  \ javaapi#method(0,1,'getOrder(', ')', 'int'),
  \ javaapi#method(0,1,'getXTop(', ')', 'double'),
  \ javaapi#method(0,1,'getYTop(', ')', 'double'),
  \ javaapi#method(0,1,'getXBot(', ')', 'double'),
  \ javaapi#method(0,1,'getYBot(', ')', 'double'),
  \ javaapi#method(0,1,'getXMin(', ')', 'double'),
  \ javaapi#method(0,1,'getXMax(', ')', 'double'),
  \ javaapi#method(0,1,'getX0(', ')', 'double'),
  \ javaapi#method(0,1,'getY0(', ')', 'double'),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'XforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'TforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'XforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'YforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'dXforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'dYforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'nextVertical(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'accumulateCrossings(', 'Crossings)', 'boolean'),
  \ javaapi#method(0,1,'enlarge(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'getSubCurve(', 'double, double, int)', 'Curve'),
  \ javaapi#method(0,1,'getReversedCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'compareTo(', 'Curve, double[])', 'int'),
  \ javaapi#method(0,1,'getSegment(', 'double[])', 'int'),
  \ ])

call javaapi#class('Order2', 'Curve', [
  \ javaapi#method(1,1,'insert(', 'Vector, double[], double, double, double, double, double, double, int)', 'void'),
  \ javaapi#method(1,1,'addInstance(', 'Vector, double, double, double, double, double, double, int)', 'void'),
  \ javaapi#method(1,1,'getHorizontalParams(', 'double, double, double, double[])', 'int'),
  \ javaapi#method(1,1,'split(', 'double[], int, double)', 'void'),
  \ javaapi#method(0,1,'Order2(', 'double, double, double, double, double, double, int)', ''),
  \ javaapi#method(0,1,'getOrder(', ')', 'int'),
  \ javaapi#method(0,1,'getXTop(', ')', 'double'),
  \ javaapi#method(0,1,'getYTop(', ')', 'double'),
  \ javaapi#method(0,1,'getXBot(', ')', 'double'),
  \ javaapi#method(0,1,'getYBot(', ')', 'double'),
  \ javaapi#method(0,1,'getXMin(', ')', 'double'),
  \ javaapi#method(0,1,'getXMax(', ')', 'double'),
  \ javaapi#method(0,1,'getX0(', ')', 'double'),
  \ javaapi#method(0,1,'getY0(', ')', 'double'),
  \ javaapi#method(0,1,'getCX0(', ')', 'double'),
  \ javaapi#method(0,1,'getCY0(', ')', 'double'),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'XforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'TforY(', 'double)', 'double'),
  \ javaapi#method(1,1,'TforY(', 'double, double, double, double)', 'double'),
  \ javaapi#method(0,1,'XforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'YforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'dXforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'dYforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'nextVertical(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'enlarge(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'getSubCurve(', 'double, double, int)', 'Curve'),
  \ javaapi#method(0,1,'getReversedCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'getSegment(', 'double[])', 'int'),
  \ javaapi#method(0,1,'controlPointString(', ')', 'String'),
  \ ])

call javaapi#class('Order3', 'Curve', [
  \ javaapi#method(1,1,'insert(', 'Vector, double[], double, double, double, double, double, double, double, double, int)', 'void'),
  \ javaapi#method(1,1,'addInstance(', 'Vector, double, double, double, double, double, double, double, double, int)', 'void'),
  \ javaapi#method(1,1,'getHorizontalParams(', 'double, double, double, double, double[])', 'int'),
  \ javaapi#method(1,1,'split(', 'double[], int, double)', 'void'),
  \ javaapi#method(0,1,'Order3(', 'double, double, double, double, double, double, double, double, int)', ''),
  \ javaapi#method(0,1,'getOrder(', ')', 'int'),
  \ javaapi#method(0,1,'getXTop(', ')', 'double'),
  \ javaapi#method(0,1,'getYTop(', ')', 'double'),
  \ javaapi#method(0,1,'getXBot(', ')', 'double'),
  \ javaapi#method(0,1,'getYBot(', ')', 'double'),
  \ javaapi#method(0,1,'getXMin(', ')', 'double'),
  \ javaapi#method(0,1,'getXMax(', ')', 'double'),
  \ javaapi#method(0,1,'getX0(', ')', 'double'),
  \ javaapi#method(0,1,'getY0(', ')', 'double'),
  \ javaapi#method(0,1,'getCX0(', ')', 'double'),
  \ javaapi#method(0,1,'getCY0(', ')', 'double'),
  \ javaapi#method(0,1,'getCX1(', ')', 'double'),
  \ javaapi#method(0,1,'getCY1(', ')', 'double'),
  \ javaapi#method(0,1,'getX1(', ')', 'double'),
  \ javaapi#method(0,1,'getY1(', ')', 'double'),
  \ javaapi#method(0,1,'TforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'refine(', 'double, double, double, double, double)', 'double'),
  \ javaapi#method(0,1,'XforY(', 'double)', 'double'),
  \ javaapi#method(0,1,'XforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'YforT(', 'double)', 'double'),
  \ javaapi#method(0,1,'dXforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'dYforT(', 'double, int)', 'double'),
  \ javaapi#method(0,1,'nextVertical(', 'double, double)', 'double'),
  \ javaapi#method(0,1,'enlarge(', 'Rectangle2D)', 'void'),
  \ javaapi#method(0,1,'getSubCurve(', 'double, double, int)', 'Curve'),
  \ javaapi#method(0,1,'getReversedCurve(', ')', 'Curve'),
  \ javaapi#method(0,1,'getSegment(', 'double[])', 'int'),
  \ javaapi#method(0,1,'controlPointString(', ')', 'String'),
  \ ])

call javaapi#interface('PathConsumer2D', '', [
  \ javaapi#method(0,1,'moveTo(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'lineTo(', 'float, float)', 'void'),
  \ javaapi#method(0,1,'quadTo(', 'float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'curveTo(', 'float, float, float, float, float, float)', 'void'),
  \ javaapi#method(0,1,'closePath(', ')', 'void'),
  \ javaapi#method(0,1,'pathDone(', ')', 'void'),
  \ javaapi#method(0,1,'getNativeConsumer(', ')', 'long'),
  \ ])

