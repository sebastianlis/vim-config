call javaapi#namespace('com.sun.java.util.jar.pack')

call javaapi#class('AdaptiveCoding', 'CodingMethod', [
  \ javaapi#field(1,1,'KX_MIN', 'int'),
  \ javaapi#field(1,1,'KX_MAX', 'int'),
  \ javaapi#field(1,1,'KX_LG2BASE', 'int'),
  \ javaapi#field(1,1,'KX_BASE', 'int'),
  \ javaapi#field(1,1,'KB_MIN', 'int'),
  \ javaapi#field(1,1,'KB_MAX', 'int'),
  \ javaapi#field(1,1,'KB_OFFSET', 'int'),
  \ javaapi#field(1,1,'KB_DEFAULT', 'int'),
  \ javaapi#method(0,1,'AdaptiveCoding(', 'int, CodingMethod, CodingMethod)', ''),
  \ javaapi#method(0,1,'setHeadCoding(', 'CodingMethod)', 'void'),
  \ javaapi#method(0,1,'setHeadLength(', 'int)', 'void'),
  \ javaapi#method(0,1,'setTailCoding(', 'CodingMethod)', 'void'),
  \ javaapi#method(0,1,'isTrivial(', ')', 'boolean'),
  \ javaapi#method(0,1,'writeArrayTo(', 'OutputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'readArrayFrom(', 'InputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(1,1,'isCodableLength(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'getMetaCoding(', 'Coding)', 'byte'),
  \ javaapi#method(1,1,'parseMetaCoding(', 'byte[], int, Coding, CodingMethod[])', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('Attribute', 'Comparable', [
  \ javaapi#method(0,1,'name(', ')', 'String'),
  \ javaapi#method(0,1,'layout(', ')', 'Layout'),
  \ javaapi#method(0,1,'bytes(', ')', 'byte'),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'getNameRef(', ')', 'Entry'),
  \ javaapi#method(0,1,'Attribute(', 'Layout, byte[], Object)', ''),
  \ javaapi#method(0,1,'Attribute(', 'Layout, byte[])', ''),
  \ javaapi#method(0,1,'addContent(', 'byte[], Object)', 'Attribute'),
  \ javaapi#method(0,1,'addContent(', 'byte[])', 'Attribute'),
  \ javaapi#method(0,1,'finishRefs(', 'Index)', 'void'),
  \ javaapi#method(0,1,'isCanonical(', ')', 'boolean'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ javaapi#method(1,1,'getCanonList(', 'List<Attribute>)', 'List'),
  \ javaapi#method(1,1,'find(', 'int, String, String)', 'Attribute'),
  \ javaapi#method(1,1,'keyForLookup(', 'int, String)', 'Layout'),
  \ javaapi#method(1,1,'lookup(', 'Map<Layout, Attribute>, int, String)', 'Attribute'),
  \ javaapi#method(1,1,'define(', 'Map<Layout, Attribute>, int, String, String)', 'Attribute'),
  \ javaapi#method(1,1,'contextName(', 'int)', 'String'),
  \ javaapi#method(0,1,'parse(', 'Holder, byte[], int, int, ValueStream)', 'void'),
  \ javaapi#method(0,1,'unparse(', 'ValueStream, ByteArrayOutputStream)', 'Object'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(1,1,'normalizeLayoutString(', 'String)', 'String'),
  \ ])

call javaapi#class('BandStructure', '', [
  \ javaapi#field(0,0,'bandHeaderBytes', 'byte'),
  \ javaapi#field(0,0,'bandHeaderBytePos', 'int'),
  \ javaapi#field(0,0,'bandHeaderBytePos0', 'int'),
  \ javaapi#field(1,1,'NO_PHASE', 'int'),
  \ javaapi#field(1,1,'COLLECT_PHASE', 'int'),
  \ javaapi#field(1,1,'FROZEN_PHASE', 'int'),
  \ javaapi#field(1,1,'WRITE_PHASE', 'int'),
  \ javaapi#field(1,1,'EXPECT_PHASE', 'int'),
  \ javaapi#field(1,1,'READ_PHASE', 'int'),
  \ javaapi#field(1,1,'DISBURSE_PHASE', 'int'),
  \ javaapi#field(1,1,'DONE_PHASE', 'int'),
  \ javaapi#field(0,0,'archiveOptions', 'int'),
  \ javaapi#field(0,0,'archiveSize0', 'long'),
  \ javaapi#field(0,0,'archiveSize1', 'long'),
  \ javaapi#field(0,0,'archiveNextCount', 'int'),
  \ javaapi#field(0,0,'metadataBands', 'MultiBand'),
  \ javaapi#field(1,1,'ADH_CONTEXT_MASK', 'int'),
  \ javaapi#field(1,1,'ADH_BIT_SHIFT', 'int'),
  \ javaapi#field(1,1,'ADH_BIT_IS_LSB', 'int'),
  \ javaapi#field(1,1,'ATTR_INDEX_OVERFLOW', 'int'),
  \ javaapi#field(0,1,'attrIndexLimit', 'int'),
  \ javaapi#field(0,0,'attrFlagMask', 'long'),
  \ javaapi#field(0,0,'attrDefSeen', 'long'),
  \ javaapi#field(0,0,'attrOverflowMask', 'int'),
  \ javaapi#field(0,0,'attrClassFileVersionMask', 'int'),
  \ javaapi#field(0,0,'attrBandTable', 'Band>'),
  \ javaapi#field(0,0,'attrCodeEmpty', 'Layout'),
  \ javaapi#field(0,0,'attrInnerClassesEmpty', 'Layout'),
  \ javaapi#field(0,0,'attrClassFileVersion', 'Layout'),
  \ javaapi#field(0,0,'attrConstantValue', 'Layout'),
  \ javaapi#field(0,0,'attrDefs', 'List'),
  \ javaapi#field(0,0,'attrBands', 'MultiBand'),
  \ javaapi#field(0,1,'shortCodeHeader_h_limit', 'int'),
  \ javaapi#method(0,0,'getCPIndex(', 'byte)', 'Index'),
  \ javaapi#method(0,1,'initPackageMajver(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,1,'getPackageMajver(', ')', 'int'),
  \ javaapi#method(0,0,'BandStructure(', ')', ''),
  \ javaapi#method(1,1,'codingForIndex(', 'int)', 'Coding'),
  \ javaapi#method(1,1,'indexOf(', 'Coding)', 'int'),
  \ javaapi#method(1,1,'getBasicCodings(', ')', 'Coding'),
  \ javaapi#method(0,0,'getBandHeader(', 'int, Coding)', 'CodingMethod'),
  \ javaapi#method(1,1,'parseMetaCoding(', 'byte[], int, Coding, CodingMethod[])', 'int'),
  \ javaapi#method(0,0,'getCodingChooser(', ')', 'CodingChooser'),
  \ javaapi#method(0,1,'chooseCoding(', 'int[], int, int, Coding, String, int[])', 'CodingMethod'),
  \ javaapi#method(1,0,'decodeEscapeValue(', 'int, Coding)', 'int'),
  \ javaapi#method(1,0,'encodeEscapeValue(', 'int, Coding)', 'int'),
  \ javaapi#method(0,0,'setBandIndexes(', ')', 'void'),
  \ javaapi#method(0,0,'setBandIndex(', 'CPRefBand, byte)', 'void'),
  \ javaapi#method(0,0,'setConstantValueIndex(', 'Field)', 'void'),
  \ javaapi#method(0,0,'initAttrIndexLimit(', ')', 'void'),
  \ javaapi#method(0,0,'haveFlagsHi(', 'int)', 'boolean'),
  \ javaapi#method(0,0,'getPredefinedAttrs(', 'int)', 'List'),
  \ javaapi#method(0,0,'isPredefinedAttr(', 'int, int)', 'boolean'),
  \ javaapi#method(0,0,'adjustSpecialAttrMasks(', ')', 'void'),
  \ javaapi#method(0,0,'makeClassFileVersionAttr(', 'int, int)', 'Attribute'),
  \ javaapi#method(0,0,'parseClassFileVersionAttr(', 'Attribute)', 'short'),
  \ javaapi#method(0,0,'setAttributeLayoutIndex(', 'Layout, int)', 'int'),
  \ javaapi#method(0,0,'putLabel(', 'IntBand, Code, int, int)', 'void'),
  \ javaapi#method(0,0,'getLabel(', 'IntBand, Code, int)', 'int'),
  \ javaapi#method(0,0,'getCPRefOpBand(', 'int)', 'CPRefBand'),
  \ javaapi#method(0,0,'selfOpRefBand(', 'int)', 'CPRefBand'),
  \ javaapi#method(1,0,'testBit(', 'int, int)', 'boolean'),
  \ javaapi#method(1,0,'setBit(', 'int, int, boolean)', 'int'),
  \ javaapi#method(1,0,'testBit(', 'long, long)', 'boolean'),
  \ javaapi#method(1,0,'setBit(', 'long, long, boolean)', 'long'),
  \ javaapi#method(1,0,'realloc(', 'Object[], int)', 'Object'),
  \ javaapi#method(1,0,'realloc(', 'Object[])', 'Object'),
  \ javaapi#method(1,0,'realloc(', 'int[], int)', 'int'),
  \ javaapi#method(1,0,'realloc(', 'int[])', 'int'),
  \ javaapi#method(1,0,'realloc(', 'byte[], int)', 'byte'),
  \ javaapi#method(1,0,'realloc(', 'byte[])', 'byte'),
  \ ])

call javaapi#class('ClassReader', '', [
  \ javaapi#method(0,1,'setAttrDefs(', 'Map<Layout, Attribute>)', 'void'),
  \ javaapi#method(0,1,'setAttrCommands(', 'Map)', 'void'),
  \ ])

call javaapi#class('ClassWriter', '', [
  \ ])

call javaapi#class('Code', 'Holder', [
  \ javaapi#method(0,1,'Code(', 'Method)', ''),
  \ javaapi#method(0,1,'getMethod(', ')', 'Method'),
  \ javaapi#method(0,1,'thisClass(', ')', 'Class'),
  \ javaapi#method(0,1,'getPackage(', ')', 'Package'),
  \ javaapi#method(0,1,'getCPMap(', ')', 'Entry'),
  \ javaapi#method(0,1,'trimToSize(', ')', 'void'),
  \ javaapi#method(0,0,'visitRefs(', 'int, Collection<Entry>)', 'void'),
  \ javaapi#method(0,1,'encodeBCI(', 'int)', 'int'),
  \ javaapi#method(0,1,'decodeBCI(', 'int)', 'int'),
  \ javaapi#method(0,1,'finishRefs(', 'Index)', 'void'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'getInt(', 'int)', 'int'),
  \ javaapi#method(0,1,'getShort(', 'int)', 'int'),
  \ javaapi#method(0,1,'getByte(', 'int)', 'int'),
  \ ])

call javaapi#class('Coding', 'BitMetric', [
  \ javaapi#field(1,1,'B_MAX', 'int'),
  \ javaapi#field(1,1,'H_MAX', 'int'),
  \ javaapi#field(1,1,'S_MAX', 'int'),
  \ javaapi#method(1,1,'codeMax(', 'int, int, int, int)', 'int'),
  \ javaapi#method(1,1,'codeMin(', 'int, int, int, int)', 'int'),
  \ javaapi#method(1,1,'writeInt(', 'byte[], int[], int, int, int, int)', 'void'),
  \ javaapi#method(1,1,'readInt(', 'byte[], int[], int, int, int)', 'int'),
  \ javaapi#method(1,1,'readIntFrom(', 'InputStream, int, int, int) throws IOException', 'int'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(1,1,'of(', 'int, int)', 'Coding'),
  \ javaapi#method(1,1,'of(', 'int, int, int)', 'Coding'),
  \ javaapi#method(0,1,'canRepresentValue(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'canRepresentSigned(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'canRepresentUnsigned(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'readFrom(', 'byte[], int[])', 'int'),
  \ javaapi#method(0,1,'writeTo(', 'byte[], int[], int)', 'void'),
  \ javaapi#method(0,1,'readFrom(', 'InputStream) throws IOException', 'int'),
  \ javaapi#method(0,1,'writeTo(', 'OutputStream, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'readArrayFrom(', 'InputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'writeArrayTo(', 'OutputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'B(', ')', 'int'),
  \ javaapi#method(0,1,'H(', ')', 'int'),
  \ javaapi#method(0,1,'L(', ')', 'int'),
  \ javaapi#method(0,1,'S(', ')', 'int'),
  \ javaapi#method(0,1,'del(', ')', 'int'),
  \ javaapi#method(0,1,'min(', ')', 'int'),
  \ javaapi#method(0,1,'max(', ')', 'int'),
  \ javaapi#method(0,1,'umin(', ')', 'int'),
  \ javaapi#method(0,1,'umax(', ')', 'int'),
  \ javaapi#method(0,1,'byteMin(', 'int)', 'int'),
  \ javaapi#method(0,1,'byteMax(', 'int)', 'int'),
  \ javaapi#method(0,1,'compareTo(', 'Object)', 'int'),
  \ javaapi#method(0,1,'distanceFrom(', 'Coding)', 'int'),
  \ javaapi#method(0,1,'getBitLength(', 'int)', 'double'),
  \ javaapi#method(0,1,'getLength(', 'int)', 'int'),
  \ javaapi#method(0,1,'getLength(', 'int[], int, int)', 'int'),
  \ javaapi#method(0,1,'getMetaCoding(', 'Coding)', 'byte'),
  \ javaapi#method(1,1,'parseMetaCoding(', 'byte[], int, Coding, CodingMethod[])', 'int'),
  \ javaapi#method(0,1,'keyString(', ')', 'String'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('CodingChooser', '', [
  \ javaapi#field(1,1,'MIN_EFFORT', 'int'),
  \ javaapi#field(1,1,'MID_EFFORT', 'int'),
  \ javaapi#field(1,1,'MAX_EFFORT', 'int'),
  \ javaapi#field(1,1,'POP_EFFORT', 'int'),
  \ javaapi#field(1,1,'RUN_EFFORT', 'int'),
  \ javaapi#field(1,1,'BYTE_SIZE', 'int'),
  \ javaapi#field(1,1,'ZIP_SIZE', 'int'),
  \ javaapi#method(0,1,'computeSize(', 'CodingMethod, int[], int, int, int[])', 'void'),
  \ javaapi#method(0,1,'computeSize(', 'CodingMethod, int[], int[])', 'void'),
  \ javaapi#method(0,1,'computeSize(', 'CodingMethod, int[], int, int)', 'int'),
  \ javaapi#method(0,1,'computeSize(', 'CodingMethod, int[])', 'int'),
  \ javaapi#method(0,1,'computeByteSize(', 'CodingMethod, int[], int, int)', 'int'),
  \ ])

call javaapi#interface('CodingMethod', '', [
  \ javaapi#method(0,1,'readArrayFrom(', 'InputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'writeArrayTo(', 'OutputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'getMetaCoding(', 'Coding)', 'byte'),
  \ ])

call javaapi#class('ConstantPool', '', [
  \ javaapi#field(1,0,'noRefs', 'Entry'),
  \ javaapi#field(1,0,'noClassRefs', 'ClassEntry'),
  \ javaapi#method(1,1,'getUtf8Entry(', 'String)', 'Utf8Entry'),
  \ javaapi#method(1,1,'getClassEntry(', 'String)', 'ClassEntry'),
  \ javaapi#method(1,1,'getLiteralEntry(', 'Comparable)', 'LiteralEntry'),
  \ javaapi#method(1,1,'getStringEntry(', 'String)', 'StringEntry'),
  \ javaapi#method(1,1,'getSignatureEntry(', 'String)', 'SignatureEntry'),
  \ javaapi#method(1,1,'getSignatureEntry(', 'Utf8Entry, ClassEntry[])', 'SignatureEntry'),
  \ javaapi#method(1,1,'getDescriptorEntry(', 'Utf8Entry, SignatureEntry)', 'DescriptorEntry'),
  \ javaapi#method(1,1,'getDescriptorEntry(', 'Utf8Entry, Utf8Entry)', 'DescriptorEntry'),
  \ javaapi#method(1,1,'getMemberEntry(', 'byte, ClassEntry, DescriptorEntry)', 'MemberEntry'),
  \ javaapi#method(1,1,'makeIndex(', 'String, Entry[])', 'Index'),
  \ javaapi#method(1,1,'makeIndex(', 'String, Collection<Entry>)', 'Index'),
  \ javaapi#method(1,1,'sort(', 'Index)', 'void'),
  \ javaapi#method(1,1,'partition(', 'Index, int[])', 'Index'),
  \ javaapi#method(1,1,'partitionByTag(', 'Index)', 'Index'),
  \ javaapi#method(1,1,'completeReferencesIn(', 'Set<Entry>, boolean)', 'void'),
  \ javaapi#method(1,1,'tagName(', 'int)', 'String'),
  \ ])

call javaapi#class('Constants', '', [
  \ javaapi#field(1,1,'JAVA_MAGIC', 'int'),
  \ javaapi#field(1,1,'JAVA_MIN_CLASS_MAJOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA_MIN_CLASS_MINOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA5_MAX_CLASS_MAJOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA5_MAX_CLASS_MINOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA6_MAX_CLASS_MAJOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA6_MAX_CLASS_MINOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA7_MAX_CLASS_MAJOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA7_MAX_CLASS_MINOR_VERSION', 'short'),
  \ javaapi#field(1,1,'JAVA_PACKAGE_MAGIC', 'int'),
  \ javaapi#field(1,1,'JAVA5_PACKAGE_MAJOR_VERSION', 'int'),
  \ javaapi#field(1,1,'JAVA5_PACKAGE_MINOR_VERSION', 'int'),
  \ javaapi#field(1,1,'JAVA6_PACKAGE_MAJOR_VERSION', 'int'),
  \ javaapi#field(1,1,'JAVA6_PACKAGE_MINOR_VERSION', 'int'),
  \ javaapi#field(1,1,'CONSTANT_POOL_INDEX_LIMIT', 'int'),
  \ javaapi#field(1,1,'CONSTANT_POOL_NARROW_LIMIT', 'int'),
  \ javaapi#field(1,1,'JAVA_SIGNATURE_CHARS', 'String'),
  \ javaapi#field(1,1,'CONSTANT_Utf8', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_unused2', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Integer', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Float', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Long', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Double', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Class', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_String', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Fieldref', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Methodref', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_InterfaceMethodref', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_NameandType', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_None', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Signature', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Limit', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_All', 'byte'),
  \ javaapi#field(1,1,'CONSTANT_Literal', 'byte'),
  \ javaapi#field(1,1,'ACC_IC_LONG_FORM', 'int'),
  \ javaapi#field(1,1,'ATTR_CONTEXT_CLASS', 'int'),
  \ javaapi#field(1,1,'ATTR_CONTEXT_FIELD', 'int'),
  \ javaapi#field(1,1,'ATTR_CONTEXT_METHOD', 'int'),
  \ javaapi#field(1,1,'ATTR_CONTEXT_CODE', 'int'),
  \ javaapi#field(1,1,'ATTR_CONTEXT_LIMIT', 'int'),
  \ javaapi#field(1,1,'ATTR_CONTEXT_NAME', 'String'),
  \ javaapi#field(1,1,'X_ATTR_OVERFLOW', 'int'),
  \ javaapi#field(1,1,'CLASS_ATTR_SourceFile', 'int'),
  \ javaapi#field(1,1,'METHOD_ATTR_Code', 'int'),
  \ javaapi#field(1,1,'FIELD_ATTR_ConstantValue', 'int'),
  \ javaapi#field(1,1,'CLASS_ATTR_EnclosingMethod', 'int'),
  \ javaapi#field(1,1,'METHOD_ATTR_Exceptions', 'int'),
  \ javaapi#field(1,1,'X_ATTR_Signature', 'int'),
  \ javaapi#field(1,1,'X_ATTR_Deprecated', 'int'),
  \ javaapi#field(1,1,'X_ATTR_RuntimeVisibleAnnotations', 'int'),
  \ javaapi#field(1,1,'X_ATTR_RuntimeInvisibleAnnotations', 'int'),
  \ javaapi#field(1,1,'METHOD_ATTR_RuntimeVisibleParameterAnnotations', 'int'),
  \ javaapi#field(1,1,'CLASS_ATTR_InnerClasses', 'int'),
  \ javaapi#field(1,1,'METHOD_ATTR_RuntimeInvisibleParameterAnnotations', 'int'),
  \ javaapi#field(1,1,'CLASS_ATTR_ClassFile_version', 'int'),
  \ javaapi#field(1,1,'METHOD_ATTR_AnnotationDefault', 'int'),
  \ javaapi#field(1,1,'CODE_ATTR_StackMapTable', 'int'),
  \ javaapi#field(1,1,'CODE_ATTR_LineNumberTable', 'int'),
  \ javaapi#field(1,1,'CODE_ATTR_LocalVariableTable', 'int'),
  \ javaapi#field(1,1,'CODE_ATTR_LocalVariableTypeTable', 'int'),
  \ javaapi#field(1,1,'FO_DEFLATE_HINT', 'int'),
  \ javaapi#field(1,1,'FO_IS_CLASS_STUB', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_SPECIAL_FORMATS', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_CP_NUMBERS', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_ALL_CODE_FLAGS', 'int'),
  \ javaapi#field(1,1,'AO_3_UNUSED_MBZ', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_FILE_HEADERS', 'int'),
  \ javaapi#field(1,1,'AO_DEFLATE_HINT', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_FILE_MODTIME', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_FILE_OPTIONS', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_FILE_SIZE_HI', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_CLASS_FLAGS_HI', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_FIELD_FLAGS_HI', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_METHOD_FLAGS_HI', 'int'),
  \ javaapi#field(1,1,'AO_HAVE_CODE_FLAGS_HI', 'int'),
  \ javaapi#field(1,1,'LG_AO_HAVE_XXX_FLAGS_HI', 'int'),
  \ javaapi#field(1,1,'NO_MODTIME', 'int'),
  \ javaapi#field(1,1,'noInts', 'int'),
  \ javaapi#field(1,1,'noBytes', 'byte'),
  \ javaapi#field(1,1,'noValues', 'Object'),
  \ javaapi#field(1,1,'noStrings', 'String'),
  \ javaapi#field(1,1,'emptyList', 'List'),
  \ javaapi#field(1,1,'_meta_default', 'int'),
  \ javaapi#field(1,1,'_meta_canon_min', 'int'),
  \ javaapi#field(1,1,'_meta_canon_max', 'int'),
  \ javaapi#field(1,1,'_meta_arb', 'int'),
  \ javaapi#field(1,1,'_meta_run', 'int'),
  \ javaapi#field(1,1,'_meta_pop', 'int'),
  \ javaapi#field(1,1,'_meta_limit', 'int'),
  \ javaapi#field(1,1,'_nop', 'int'),
  \ javaapi#field(1,1,'_aconst_null', 'int'),
  \ javaapi#field(1,1,'_iconst_m1', 'int'),
  \ javaapi#field(1,1,'_iconst_0', 'int'),
  \ javaapi#field(1,1,'_iconst_1', 'int'),
  \ javaapi#field(1,1,'_iconst_2', 'int'),
  \ javaapi#field(1,1,'_iconst_3', 'int'),
  \ javaapi#field(1,1,'_iconst_4', 'int'),
  \ javaapi#field(1,1,'_iconst_5', 'int'),
  \ javaapi#field(1,1,'_lconst_0', 'int'),
  \ javaapi#field(1,1,'_lconst_1', 'int'),
  \ javaapi#field(1,1,'_fconst_0', 'int'),
  \ javaapi#field(1,1,'_fconst_1', 'int'),
  \ javaapi#field(1,1,'_fconst_2', 'int'),
  \ javaapi#field(1,1,'_dconst_0', 'int'),
  \ javaapi#field(1,1,'_dconst_1', 'int'),
  \ javaapi#field(1,1,'_bipush', 'int'),
  \ javaapi#field(1,1,'_sipush', 'int'),
  \ javaapi#field(1,1,'_ldc', 'int'),
  \ javaapi#field(1,1,'_ldc_w', 'int'),
  \ javaapi#field(1,1,'_ldc2_w', 'int'),
  \ javaapi#field(1,1,'_iload', 'int'),
  \ javaapi#field(1,1,'_lload', 'int'),
  \ javaapi#field(1,1,'_fload', 'int'),
  \ javaapi#field(1,1,'_dload', 'int'),
  \ javaapi#field(1,1,'_aload', 'int'),
  \ javaapi#field(1,1,'_iload_0', 'int'),
  \ javaapi#field(1,1,'_iload_1', 'int'),
  \ javaapi#field(1,1,'_iload_2', 'int'),
  \ javaapi#field(1,1,'_iload_3', 'int'),
  \ javaapi#field(1,1,'_lload_0', 'int'),
  \ javaapi#field(1,1,'_lload_1', 'int'),
  \ javaapi#field(1,1,'_lload_2', 'int'),
  \ javaapi#field(1,1,'_lload_3', 'int'),
  \ javaapi#field(1,1,'_fload_0', 'int'),
  \ javaapi#field(1,1,'_fload_1', 'int'),
  \ javaapi#field(1,1,'_fload_2', 'int'),
  \ javaapi#field(1,1,'_fload_3', 'int'),
  \ javaapi#field(1,1,'_dload_0', 'int'),
  \ javaapi#field(1,1,'_dload_1', 'int'),
  \ javaapi#field(1,1,'_dload_2', 'int'),
  \ javaapi#field(1,1,'_dload_3', 'int'),
  \ javaapi#field(1,1,'_aload_0', 'int'),
  \ javaapi#field(1,1,'_aload_1', 'int'),
  \ javaapi#field(1,1,'_aload_2', 'int'),
  \ javaapi#field(1,1,'_aload_3', 'int'),
  \ javaapi#field(1,1,'_iaload', 'int'),
  \ javaapi#field(1,1,'_laload', 'int'),
  \ javaapi#field(1,1,'_faload', 'int'),
  \ javaapi#field(1,1,'_daload', 'int'),
  \ javaapi#field(1,1,'_aaload', 'int'),
  \ javaapi#field(1,1,'_baload', 'int'),
  \ javaapi#field(1,1,'_caload', 'int'),
  \ javaapi#field(1,1,'_saload', 'int'),
  \ javaapi#field(1,1,'_istore', 'int'),
  \ javaapi#field(1,1,'_lstore', 'int'),
  \ javaapi#field(1,1,'_fstore', 'int'),
  \ javaapi#field(1,1,'_dstore', 'int'),
  \ javaapi#field(1,1,'_astore', 'int'),
  \ javaapi#field(1,1,'_istore_0', 'int'),
  \ javaapi#field(1,1,'_istore_1', 'int'),
  \ javaapi#field(1,1,'_istore_2', 'int'),
  \ javaapi#field(1,1,'_istore_3', 'int'),
  \ javaapi#field(1,1,'_lstore_0', 'int'),
  \ javaapi#field(1,1,'_lstore_1', 'int'),
  \ javaapi#field(1,1,'_lstore_2', 'int'),
  \ javaapi#field(1,1,'_lstore_3', 'int'),
  \ javaapi#field(1,1,'_fstore_0', 'int'),
  \ javaapi#field(1,1,'_fstore_1', 'int'),
  \ javaapi#field(1,1,'_fstore_2', 'int'),
  \ javaapi#field(1,1,'_fstore_3', 'int'),
  \ javaapi#field(1,1,'_dstore_0', 'int'),
  \ javaapi#field(1,1,'_dstore_1', 'int'),
  \ javaapi#field(1,1,'_dstore_2', 'int'),
  \ javaapi#field(1,1,'_dstore_3', 'int'),
  \ javaapi#field(1,1,'_astore_0', 'int'),
  \ javaapi#field(1,1,'_astore_1', 'int'),
  \ javaapi#field(1,1,'_astore_2', 'int'),
  \ javaapi#field(1,1,'_astore_3', 'int'),
  \ javaapi#field(1,1,'_iastore', 'int'),
  \ javaapi#field(1,1,'_lastore', 'int'),
  \ javaapi#field(1,1,'_fastore', 'int'),
  \ javaapi#field(1,1,'_dastore', 'int'),
  \ javaapi#field(1,1,'_aastore', 'int'),
  \ javaapi#field(1,1,'_bastore', 'int'),
  \ javaapi#field(1,1,'_castore', 'int'),
  \ javaapi#field(1,1,'_sastore', 'int'),
  \ javaapi#field(1,1,'_pop', 'int'),
  \ javaapi#field(1,1,'_pop2', 'int'),
  \ javaapi#field(1,1,'_dup', 'int'),
  \ javaapi#field(1,1,'_dup_x1', 'int'),
  \ javaapi#field(1,1,'_dup_x2', 'int'),
  \ javaapi#field(1,1,'_dup2', 'int'),
  \ javaapi#field(1,1,'_dup2_x1', 'int'),
  \ javaapi#field(1,1,'_dup2_x2', 'int'),
  \ javaapi#field(1,1,'_swap', 'int'),
  \ javaapi#field(1,1,'_iadd', 'int'),
  \ javaapi#field(1,1,'_ladd', 'int'),
  \ javaapi#field(1,1,'_fadd', 'int'),
  \ javaapi#field(1,1,'_dadd', 'int'),
  \ javaapi#field(1,1,'_isub', 'int'),
  \ javaapi#field(1,1,'_lsub', 'int'),
  \ javaapi#field(1,1,'_fsub', 'int'),
  \ javaapi#field(1,1,'_dsub', 'int'),
  \ javaapi#field(1,1,'_imul', 'int'),
  \ javaapi#field(1,1,'_lmul', 'int'),
  \ javaapi#field(1,1,'_fmul', 'int'),
  \ javaapi#field(1,1,'_dmul', 'int'),
  \ javaapi#field(1,1,'_idiv', 'int'),
  \ javaapi#field(1,1,'_ldiv', 'int'),
  \ javaapi#field(1,1,'_fdiv', 'int'),
  \ javaapi#field(1,1,'_ddiv', 'int'),
  \ javaapi#field(1,1,'_irem', 'int'),
  \ javaapi#field(1,1,'_lrem', 'int'),
  \ javaapi#field(1,1,'_frem', 'int'),
  \ javaapi#field(1,1,'_drem', 'int'),
  \ javaapi#field(1,1,'_ineg', 'int'),
  \ javaapi#field(1,1,'_lneg', 'int'),
  \ javaapi#field(1,1,'_fneg', 'int'),
  \ javaapi#field(1,1,'_dneg', 'int'),
  \ javaapi#field(1,1,'_ishl', 'int'),
  \ javaapi#field(1,1,'_lshl', 'int'),
  \ javaapi#field(1,1,'_ishr', 'int'),
  \ javaapi#field(1,1,'_lshr', 'int'),
  \ javaapi#field(1,1,'_iushr', 'int'),
  \ javaapi#field(1,1,'_lushr', 'int'),
  \ javaapi#field(1,1,'_iand', 'int'),
  \ javaapi#field(1,1,'_land', 'int'),
  \ javaapi#field(1,1,'_ior', 'int'),
  \ javaapi#field(1,1,'_lor', 'int'),
  \ javaapi#field(1,1,'_ixor', 'int'),
  \ javaapi#field(1,1,'_lxor', 'int'),
  \ javaapi#field(1,1,'_iinc', 'int'),
  \ javaapi#field(1,1,'_i2l', 'int'),
  \ javaapi#field(1,1,'_i2f', 'int'),
  \ javaapi#field(1,1,'_i2d', 'int'),
  \ javaapi#field(1,1,'_l2i', 'int'),
  \ javaapi#field(1,1,'_l2f', 'int'),
  \ javaapi#field(1,1,'_l2d', 'int'),
  \ javaapi#field(1,1,'_f2i', 'int'),
  \ javaapi#field(1,1,'_f2l', 'int'),
  \ javaapi#field(1,1,'_f2d', 'int'),
  \ javaapi#field(1,1,'_d2i', 'int'),
  \ javaapi#field(1,1,'_d2l', 'int'),
  \ javaapi#field(1,1,'_d2f', 'int'),
  \ javaapi#field(1,1,'_i2b', 'int'),
  \ javaapi#field(1,1,'_i2c', 'int'),
  \ javaapi#field(1,1,'_i2s', 'int'),
  \ javaapi#field(1,1,'_lcmp', 'int'),
  \ javaapi#field(1,1,'_fcmpl', 'int'),
  \ javaapi#field(1,1,'_fcmpg', 'int'),
  \ javaapi#field(1,1,'_dcmpl', 'int'),
  \ javaapi#field(1,1,'_dcmpg', 'int'),
  \ javaapi#field(1,1,'_ifeq', 'int'),
  \ javaapi#field(1,1,'_ifne', 'int'),
  \ javaapi#field(1,1,'_iflt', 'int'),
  \ javaapi#field(1,1,'_ifge', 'int'),
  \ javaapi#field(1,1,'_ifgt', 'int'),
  \ javaapi#field(1,1,'_ifle', 'int'),
  \ javaapi#field(1,1,'_if_icmpeq', 'int'),
  \ javaapi#field(1,1,'_if_icmpne', 'int'),
  \ javaapi#field(1,1,'_if_icmplt', 'int'),
  \ javaapi#field(1,1,'_if_icmpge', 'int'),
  \ javaapi#field(1,1,'_if_icmpgt', 'int'),
  \ javaapi#field(1,1,'_if_icmple', 'int'),
  \ javaapi#field(1,1,'_if_acmpeq', 'int'),
  \ javaapi#field(1,1,'_if_acmpne', 'int'),
  \ javaapi#field(1,1,'_goto', 'int'),
  \ javaapi#field(1,1,'_jsr', 'int'),
  \ javaapi#field(1,1,'_ret', 'int'),
  \ javaapi#field(1,1,'_tableswitch', 'int'),
  \ javaapi#field(1,1,'_lookupswitch', 'int'),
  \ javaapi#field(1,1,'_ireturn', 'int'),
  \ javaapi#field(1,1,'_lreturn', 'int'),
  \ javaapi#field(1,1,'_freturn', 'int'),
  \ javaapi#field(1,1,'_dreturn', 'int'),
  \ javaapi#field(1,1,'_areturn', 'int'),
  \ javaapi#field(1,1,'_return', 'int'),
  \ javaapi#field(1,1,'_getstatic', 'int'),
  \ javaapi#field(1,1,'_putstatic', 'int'),
  \ javaapi#field(1,1,'_getfield', 'int'),
  \ javaapi#field(1,1,'_putfield', 'int'),
  \ javaapi#field(1,1,'_invokevirtual', 'int'),
  \ javaapi#field(1,1,'_invokespecial', 'int'),
  \ javaapi#field(1,1,'_invokestatic', 'int'),
  \ javaapi#field(1,1,'_invokeinterface', 'int'),
  \ javaapi#field(1,1,'_xxxunusedxxx', 'int'),
  \ javaapi#field(1,1,'_new', 'int'),
  \ javaapi#field(1,1,'_newarray', 'int'),
  \ javaapi#field(1,1,'_anewarray', 'int'),
  \ javaapi#field(1,1,'_arraylength', 'int'),
  \ javaapi#field(1,1,'_athrow', 'int'),
  \ javaapi#field(1,1,'_checkcast', 'int'),
  \ javaapi#field(1,1,'_instanceof', 'int'),
  \ javaapi#field(1,1,'_monitorenter', 'int'),
  \ javaapi#field(1,1,'_monitorexit', 'int'),
  \ javaapi#field(1,1,'_wide', 'int'),
  \ javaapi#field(1,1,'_multianewarray', 'int'),
  \ javaapi#field(1,1,'_ifnull', 'int'),
  \ javaapi#field(1,1,'_ifnonnull', 'int'),
  \ javaapi#field(1,1,'_goto_w', 'int'),
  \ javaapi#field(1,1,'_jsr_w', 'int'),
  \ javaapi#field(1,1,'_bytecode_limit', 'int'),
  \ javaapi#field(1,1,'_end_marker', 'int'),
  \ javaapi#field(1,1,'_byte_escape', 'int'),
  \ javaapi#field(1,1,'_ref_escape', 'int'),
  \ javaapi#field(1,1,'_first_linker_op', 'int'),
  \ javaapi#field(1,1,'_last_linker_op', 'int'),
  \ javaapi#field(1,1,'_num_linker_ops', 'int'),
  \ javaapi#field(1,1,'_self_linker_op', 'int'),
  \ javaapi#field(1,1,'_self_linker_aload_flag', 'int'),
  \ javaapi#field(1,1,'_self_linker_super_flag', 'int'),
  \ javaapi#field(1,1,'_self_linker_limit', 'int'),
  \ javaapi#field(1,1,'_invokeinit_op', 'int'),
  \ javaapi#field(1,1,'_invokeinit_self_option', 'int'),
  \ javaapi#field(1,1,'_invokeinit_super_option', 'int'),
  \ javaapi#field(1,1,'_invokeinit_new_option', 'int'),
  \ javaapi#field(1,1,'_invokeinit_limit', 'int'),
  \ javaapi#field(1,1,'_pseudo_instruction_limit', 'int'),
  \ javaapi#field(1,1,'_xldc_op', 'int'),
  \ javaapi#field(1,1,'_aldc', 'int'),
  \ javaapi#field(1,1,'_cldc', 'int'),
  \ javaapi#field(1,1,'_ildc', 'int'),
  \ javaapi#field(1,1,'_fldc', 'int'),
  \ javaapi#field(1,1,'_aldc_w', 'int'),
  \ javaapi#field(1,1,'_cldc_w', 'int'),
  \ javaapi#field(1,1,'_ildc_w', 'int'),
  \ javaapi#field(1,1,'_fldc_w', 'int'),
  \ javaapi#field(1,1,'_lldc2_w', 'int'),
  \ javaapi#field(1,1,'_dldc2_w', 'int'),
  \ javaapi#field(1,1,'_xldc_limit', 'int'),
  \ ])

call javaapi#class('Driver', '', [
  \ javaapi#method(1,1,'main(', 'String[]) throws IOException', 'void'),
  \ ])

call javaapi#class('DriverResource', 'ListResourceBundle', [
  \ javaapi#field(1,1,'VERSION', 'String'),
  \ javaapi#field(1,1,'BAD_ARGUMENT', 'String'),
  \ javaapi#field(1,1,'BAD_OPTION', 'String'),
  \ javaapi#field(1,1,'BAD_REPACK_OUTPUT', 'String'),
  \ javaapi#field(1,1,'DETECTED_ZIP_COMMENT', 'String'),
  \ javaapi#field(1,1,'SKIP_FOR_REPACKED', 'String'),
  \ javaapi#field(1,1,'WRITE_PACK_FILE', 'String'),
  \ javaapi#field(1,1,'WIRTE_PACKGZ_FILE', 'String'),
  \ javaapi#field(1,1,'SKIP_FOR_MOVE_FAILED', 'String'),
  \ javaapi#field(1,1,'PACK_HELP', 'String'),
  \ javaapi#field(1,1,'UNPACK_HELP', 'String'),
  \ javaapi#field(1,1,'MORE_INFO', 'String'),
  \ javaapi#field(1,1,'DUPLICATE_OPTION', 'String'),
  \ javaapi#field(1,1,'BAD_SPEC', 'String'),
  \ javaapi#method(0,1,'DriverResource(', ')', ''),
  \ javaapi#method(0,0,'getContents(', ')', 'Object[]'),
  \ ])

call javaapi#class('FixedList', 'List', [
  \ javaapi#method(0,0,'FixedList(', 'int)', ''),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'contains(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'iterator(', ')', 'Iterator'),
  \ javaapi#method(0,1,'toArray(', ')', 'Object'),
  \ javaapi#method(0,1,'toArray(', 'T[])', 'T'),
  \ javaapi#method(0,1,'add(', 'E) throws UnsupportedOperationException', 'boolean'),
  \ javaapi#method(0,1,'remove(', 'Object) throws UnsupportedOperationException', 'boolean'),
  \ javaapi#method(0,1,'containsAll(', 'Collection<?>)', 'boolean'),
  \ javaapi#method(0,1,'addAll(', 'Collection<? extends E>) throws UnsupportedOperationException', 'boolean'),
  \ javaapi#method(0,1,'addAll(', 'int, Collection<? extends E>) throws UnsupportedOperationException', 'boolean'),
  \ javaapi#method(0,1,'removeAll(', 'Collection<?>) throws UnsupportedOperationException', 'boolean'),
  \ javaapi#method(0,1,'retainAll(', 'Collection<?>) throws UnsupportedOperationException', 'boolean'),
  \ javaapi#method(0,1,'clear(', ') throws UnsupportedOperationException', 'void'),
  \ javaapi#method(0,1,'get(', 'int)', 'E'),
  \ javaapi#method(0,1,'set(', 'int, E)', 'E'),
  \ javaapi#method(0,1,'add(', 'int, E) throws UnsupportedOperationException', 'void'),
  \ javaapi#method(0,1,'remove(', 'int) throws UnsupportedOperationException', 'E'),
  \ javaapi#method(0,1,'indexOf(', 'Object)', 'int'),
  \ javaapi#method(0,1,'lastIndexOf(', 'Object)', 'int'),
  \ javaapi#method(0,1,'listIterator(', ')', 'ListIterator'),
  \ javaapi#method(0,1,'listIterator(', 'int)', 'ListIterator'),
  \ javaapi#method(0,1,'subList(', 'int, int)', 'List'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('Fixups', 'AbstractCollection', [
  \ javaapi#field(1,1,'U2_FORMAT', 'int'),
  \ javaapi#field(1,1,'U1_FORMAT', 'int'),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'trimToSize(', ')', 'void'),
  \ javaapi#method(0,1,'visitRefs(', 'Collection<Entry>)', 'void'),
  \ javaapi#method(0,1,'clear(', ')', 'void'),
  \ javaapi#method(0,1,'getBytes(', ')', 'byte'),
  \ javaapi#method(0,1,'setBytes(', 'byte[])', 'void'),
  \ javaapi#method(0,1,'iterator(', ')', 'Iterator'),
  \ javaapi#method(0,1,'add(', 'int, int, Entry)', 'void'),
  \ javaapi#method(0,1,'add(', 'Fixup)', 'boolean'),
  \ javaapi#method(0,1,'add(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'addAll(', 'Collection)', 'boolean'),
  \ javaapi#method(1,1,'add(', 'Object, byte[], int, int, Entry)', 'Object'),
  \ javaapi#method(1,1,'setBytes(', 'Object, byte[])', 'void'),
  \ javaapi#method(1,1,'trimToSize(', 'Object)', 'Object'),
  \ javaapi#method(1,1,'visitRefs(', 'Object, Collection<Entry>)', 'void'),
  \ javaapi#method(1,1,'finishRefs(', 'Object, byte[], Index)', 'void'),
  \ ])

call javaapi#class('Histogram', '', [
  \ javaapi#field(0,0,'matrix', 'int[]'),
  \ javaapi#field(0,0,'totalWeight', 'int'),
  \ javaapi#field(0,0,'values', 'int'),
  \ javaapi#field(0,0,'counts', 'int'),
  \ javaapi#method(0,1,'Histogram(', 'int[])', ''),
  \ javaapi#method(0,1,'Histogram(', 'int[], int, int)', ''),
  \ javaapi#method(0,1,'Histogram(', 'int[][])', ''),
  \ javaapi#method(0,1,'getMatrix(', ')', 'int[]'),
  \ javaapi#method(0,1,'getRowCount(', ')', 'int'),
  \ javaapi#method(0,1,'getRowFrequency(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRowLength(', 'int)', 'int'),
  \ javaapi#method(0,1,'getRowValue(', 'int, int)', 'int'),
  \ javaapi#method(0,1,'getRowWeight(', 'int)', 'int'),
  \ javaapi#method(0,1,'getTotalWeight(', ')', 'int'),
  \ javaapi#method(0,1,'getTotalLength(', ')', 'int'),
  \ javaapi#method(0,1,'getAllValues(', ')', 'int'),
  \ javaapi#method(0,1,'getAllFrequencies(', ')', 'int'),
  \ javaapi#method(0,1,'getFrequency(', 'int)', 'int'),
  \ javaapi#method(0,1,'getBitLength(', 'int)', 'double'),
  \ javaapi#method(0,1,'getRowBitLength(', 'int)', 'double'),
  \ javaapi#method(0,1,'getBitMetric(', ')', 'BitMetric'),
  \ javaapi#method(0,1,'getBitLength(', ')', 'double'),
  \ javaapi#method(0,1,'getBitLength(', 'BitMetric)', 'double'),
  \ javaapi#method(0,1,'normalizeMatrix(', 'int[][])', 'int[]'),
  \ javaapi#method(0,1,'getRowTitles(', 'String)', 'String'),
  \ javaapi#method(0,1,'print(', 'PrintStream)', 'void'),
  \ javaapi#method(0,1,'print(', 'String, PrintStream)', 'void'),
  \ javaapi#method(0,1,'print(', 'String, String[], PrintStream)', 'void'),
  \ javaapi#method(1,1,'makeByteHistogram(', 'InputStream) throws IOException', 'Histogram'),
  \ ])

call javaapi#class('Instruction', '', [
  \ javaapi#field(0,0,'bytes', 'byte'),
  \ javaapi#field(0,0,'pc', 'int'),
  \ javaapi#field(0,0,'bc', 'int'),
  \ javaapi#field(0,0,'w', 'int'),
  \ javaapi#field(0,0,'length', 'int'),
  \ javaapi#field(0,0,'special', 'boolean'),
  \ javaapi#method(0,0,'Instruction(', 'byte[], int, int, int, int)', ''),
  \ javaapi#method(0,1,'getBC(', ')', 'int'),
  \ javaapi#method(0,1,'isWide(', ')', 'boolean'),
  \ javaapi#method(0,1,'getBytes(', ')', 'byte'),
  \ javaapi#method(0,1,'getPC(', ')', 'int'),
  \ javaapi#method(0,1,'getLength(', ')', 'int'),
  \ javaapi#method(0,1,'getNextPC(', ')', 'int'),
  \ javaapi#method(0,1,'next(', ')', 'Instruction'),
  \ javaapi#method(0,1,'isNonstandard(', ')', 'boolean'),
  \ javaapi#method(0,1,'setNonstandardLength(', 'int)', 'void'),
  \ javaapi#method(0,1,'forceNextPC(', 'int)', 'Instruction'),
  \ javaapi#method(1,1,'at(', 'byte[], int)', 'Instruction'),
  \ javaapi#method(1,1,'at(', 'byte[], int, Instruction)', 'Instruction'),
  \ javaapi#method(0,1,'getCPTag(', ')', 'byte'),
  \ javaapi#method(0,1,'getCPIndex(', ')', 'int'),
  \ javaapi#method(0,1,'setCPIndex(', 'int)', 'void'),
  \ javaapi#method(0,1,'getCPRef(', 'Entry[])', 'Entry'),
  \ javaapi#method(0,1,'getLocalSlot(', ')', 'int'),
  \ javaapi#method(0,1,'getBranchLabel(', ')', 'int'),
  \ javaapi#method(0,1,'setBranchLabel(', 'int)', 'void'),
  \ javaapi#method(0,1,'getConstant(', ')', 'int'),
  \ javaapi#method(0,1,'setConstant(', 'int)', 'void'),
  \ javaapi#method(0,1,'equals(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'hashCode(', ')', 'int'),
  \ javaapi#method(0,1,'equals(', 'Instruction)', 'boolean'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'toString(', 'Entry[])', 'String'),
  \ javaapi#method(0,1,'getIntAt(', 'int)', 'int'),
  \ javaapi#method(0,1,'getShortAt(', 'int)', 'int'),
  \ javaapi#method(0,1,'getByteAt(', 'int)', 'int'),
  \ javaapi#method(1,1,'getInt(', 'byte[], int)', 'int'),
  \ javaapi#method(1,1,'getShort(', 'byte[], int)', 'int'),
  \ javaapi#method(1,1,'getByte(', 'byte[], int)', 'int'),
  \ javaapi#method(1,1,'setInt(', 'byte[], int, int)', 'void'),
  \ javaapi#method(1,1,'setShort(', 'byte[], int, int)', 'void'),
  \ javaapi#method(1,1,'setByte(', 'byte[], int, int)', 'void'),
  \ javaapi#method(1,1,'isNonstandard(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'opLength(', 'int)', 'int'),
  \ javaapi#method(1,1,'opWideLength(', 'int)', 'int'),
  \ javaapi#method(1,1,'isLocalSlotOp(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isBranchOp(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isCPRefOp(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'getCPRefOpTag(', 'int)', 'byte'),
  \ javaapi#method(1,1,'isFieldOp(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isInvokeInitOp(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'isSelfLinkerOp(', 'int)', 'boolean'),
  \ javaapi#method(1,1,'byteName(', 'int)', 'String'),
  \ javaapi#method(1,1,'opcodeChecker(', 'byte[]) throws FormatException', 'void'),
  \ ])

call javaapi#class('NativeUnpack', '', [
  \ javaapi#method(0,0,'setOption(', 'String, String)', 'boolean'),
  \ javaapi#method(0,0,'getOption(', 'String)', 'String'),
  \ ])

call javaapi#class('Package', '', [
  \ javaapi#field(1,1,'attrCodeEmpty', 'Layout'),
  \ javaapi#field(1,1,'attrInnerClassesEmpty', 'Layout'),
  \ javaapi#field(1,1,'attrSourceFileSpecial', 'Layout'),
  \ javaapi#field(1,1,'attrDefs', 'Attribute>'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'getClasses(', ')', 'List'),
  \ javaapi#method(0,1,'getFiles(', ')', 'List'),
  \ javaapi#method(0,1,'getClassStubs(', ')', 'List'),
  \ javaapi#method(0,1,'getAllInnerClasses(', ')', 'List'),
  \ javaapi#method(0,1,'setAllInnerClasses(', 'Collection<InnerClass>)', 'void'),
  \ javaapi#method(0,1,'getGlobalInnerClass(', 'Entry)', 'InnerClass'),
  \ javaapi#method(0,1,'trimToSize(', ')', 'void'),
  \ javaapi#method(0,1,'strip(', 'String)', 'void'),
  \ javaapi#method(1,1,'versionStringOf(', 'int, int)', 'String'),
  \ javaapi#method(1,1,'versionStringOf(', 'int)', 'String'),
  \ javaapi#method(0,1,'stripConstantFields(', ')', 'void'),
  \ javaapi#method(0,0,'visitRefs(', 'int, Collection<Entry>)', 'void'),
  \ ])

call javaapi#class('PackageReader', 'BandStructure', [
  \ javaapi#method(0,0,'getCPIndex(', 'byte)', 'Index'),
  \ ])

call javaapi#class('PackageWriter', 'BandStructure', [
  \ javaapi#method(0,0,'getCPIndex(', 'byte)', 'Index'),
  \ ])

call javaapi#class('PackerImpl', 'TLGlobals', [
  \ javaapi#method(0,1,'PackerImpl(', ')', ''),
  \ javaapi#method(0,1,'properties(', ')', 'SortedMap'),
  \ javaapi#method(0,1,'pack(', 'JarFile, OutputStream) throws IOException', 'void'),
  \ javaapi#method(0,1,'pack(', 'JarInputStream, OutputStream) throws IOException', 'void'),
  \ javaapi#method(0,1,'addPropertyChangeListener(', 'PropertyChangeListener)', 'void'),
  \ javaapi#method(0,1,'removePropertyChangeListener(', 'PropertyChangeListener)', 'void'),
  \ ])

call javaapi#class('PopulationCoding', 'CodingMethod', [
  \ javaapi#method(0,1,'setFavoredValues(', 'int[], int)', 'void'),
  \ javaapi#method(0,1,'setFavoredValues(', 'int[])', 'void'),
  \ javaapi#method(0,1,'setHistogram(', 'Histogram)', 'void'),
  \ javaapi#method(0,1,'setL(', 'int)', 'void'),
  \ javaapi#method(1,1,'fitTokenCoding(', 'int, int)', 'Coding'),
  \ javaapi#method(0,1,'setFavoredCoding(', 'CodingMethod)', 'void'),
  \ javaapi#method(0,1,'setTokenCoding(', 'CodingMethod)', 'void'),
  \ javaapi#method(0,1,'setUnfavoredCoding(', 'CodingMethod)', 'void'),
  \ javaapi#method(0,1,'favoredValueMaxLength(', ')', 'int'),
  \ javaapi#method(0,1,'resortFavoredValues(', ')', 'void'),
  \ javaapi#method(0,1,'getToken(', 'int)', 'int'),
  \ javaapi#method(0,1,'encodeValues(', 'int[], int, int)', 'int[]'),
  \ javaapi#method(0,1,'writeArrayTo(', 'OutputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'readArrayFrom(', 'InputStream, int[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,1,'getMetaCoding(', 'Coding)', 'byte'),
  \ javaapi#method(1,1,'parseMetaCoding(', 'byte[], int, Coding, CodingMethod[])', 'int'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ ])

call javaapi#class('PropMap', 'SortedMap', [
  \ javaapi#method(0,1,'put(', 'Object, Object)', 'Object'),
  \ javaapi#method(0,1,'size(', ')', 'int'),
  \ javaapi#method(0,1,'isEmpty(', ')', 'boolean'),
  \ javaapi#method(0,1,'containsKey(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'containsValue(', 'Object)', 'boolean'),
  \ javaapi#method(0,1,'get(', 'Object)', 'Object'),
  \ javaapi#method(0,1,'remove(', 'Object)', 'Object'),
  \ javaapi#method(0,1,'putAll(', 'Map)', 'void'),
  \ javaapi#method(0,1,'clear(', ')', 'void'),
  \ javaapi#method(0,1,'keySet(', ')', 'Set'),
  \ javaapi#method(0,1,'values(', ')', 'Collection'),
  \ javaapi#method(0,1,'entrySet(', ')', 'Object>>'),
  \ javaapi#method(0,1,'comparator(', ')', 'Comparator'),
  \ javaapi#method(0,1,'subMap(', 'Object, Object)', 'Object>'),
  \ javaapi#method(0,1,'headMap(', 'Object)', 'Object>'),
  \ javaapi#method(0,1,'tailMap(', 'Object)', 'Object>'),
  \ javaapi#method(0,1,'firstKey(', ')', 'Object'),
  \ javaapi#method(0,1,'lastKey(', ')', 'Object'),
  \ ])

call javaapi#class('TLGlobals', '', [
  \ ])

call javaapi#class('UnpackerImpl', 'TLGlobals', [
  \ javaapi#method(0,1,'addPropertyChangeListener(', 'PropertyChangeListener)', 'void'),
  \ javaapi#method(0,1,'removePropertyChangeListener(', 'PropertyChangeListener)', 'void'),
  \ javaapi#method(0,1,'UnpackerImpl(', ')', ''),
  \ javaapi#method(0,1,'properties(', ')', 'SortedMap'),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'unpack(', 'InputStream, JarOutputStream) throws IOException', 'void'),
  \ javaapi#method(0,1,'unpack(', 'File, JarOutputStream) throws IOException', 'void'),
  \ ])

call javaapi#class('Utils', '', [
  \ ])

