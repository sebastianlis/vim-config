call javaapi#namespace('com.sun.org.apache.xpath.internal.compiler')

call javaapi#class('Compiler', 'OpMap', [
  \ javaapi#method(0,1,'Compiler(', 'ErrorListener, SourceLocator, FunctionTable)', ''),
  \ javaapi#method(0,1,'Compiler(', ')', ''),
  \ javaapi#method(0,1,'compile(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'or(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'and(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'notequals(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'equals(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'lte(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'lt(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'gte(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'gt(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'plus(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'minus(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'mult(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'div(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'mod(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'neg(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'string(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'bool(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'number(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'literal(', 'int)', 'Expression'),
  \ javaapi#method(0,0,'numberlit(', 'int)', 'Expression'),
  \ javaapi#method(0,0,'variable(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'group(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'arg(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'union(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,1,'getLocationPathDepth(', ')', 'int'),
  \ javaapi#method(0,1,'locationPath(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,1,'predicate(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,0,'matchPattern(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,1,'locationPathPattern(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,1,'getWhatToShow(', 'int)', 'int'),
  \ javaapi#method(0,0,'stepPattern(', 'int, int, StepPattern) throws TransformerException', 'StepPattern'),
  \ javaapi#method(0,1,'getCompiledPredicates(', 'int) throws TransformerException', 'Expression'),
  \ javaapi#method(0,1,'countPredicates(', 'int) throws TransformerException', 'int'),
  \ javaapi#method(0,1,'warn(', 'String, Object[]) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'assertion(', 'boolean, String)', 'void'),
  \ javaapi#method(0,1,'error(', 'String, Object[]) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'getNamespaceContext(', ')', 'PrefixResolver'),
  \ javaapi#method(0,1,'setNamespaceContext(', 'PrefixResolver)', 'void'),
  \ ])

call javaapi#class('FuncLoader', '', [
  \ javaapi#method(0,1,'getName(', ')', 'String'),
  \ javaapi#method(0,1,'FuncLoader(', 'String, int)', ''),
  \ ])

call javaapi#class('FunctionTable', '', [
  \ javaapi#field(1,1,'FUNC_CURRENT', 'int'),
  \ javaapi#field(1,1,'FUNC_LAST', 'int'),
  \ javaapi#field(1,1,'FUNC_POSITION', 'int'),
  \ javaapi#field(1,1,'FUNC_COUNT', 'int'),
  \ javaapi#field(1,1,'FUNC_ID', 'int'),
  \ javaapi#field(1,1,'FUNC_KEY', 'int'),
  \ javaapi#field(1,1,'FUNC_LOCAL_PART', 'int'),
  \ javaapi#field(1,1,'FUNC_NAMESPACE', 'int'),
  \ javaapi#field(1,1,'FUNC_QNAME', 'int'),
  \ javaapi#field(1,1,'FUNC_GENERATE_ID', 'int'),
  \ javaapi#field(1,1,'FUNC_NOT', 'int'),
  \ javaapi#field(1,1,'FUNC_TRUE', 'int'),
  \ javaapi#field(1,1,'FUNC_FALSE', 'int'),
  \ javaapi#field(1,1,'FUNC_BOOLEAN', 'int'),
  \ javaapi#field(1,1,'FUNC_NUMBER', 'int'),
  \ javaapi#field(1,1,'FUNC_FLOOR', 'int'),
  \ javaapi#field(1,1,'FUNC_CEILING', 'int'),
  \ javaapi#field(1,1,'FUNC_ROUND', 'int'),
  \ javaapi#field(1,1,'FUNC_SUM', 'int'),
  \ javaapi#field(1,1,'FUNC_STRING', 'int'),
  \ javaapi#field(1,1,'FUNC_STARTS_WITH', 'int'),
  \ javaapi#field(1,1,'FUNC_CONTAINS', 'int'),
  \ javaapi#field(1,1,'FUNC_SUBSTRING_BEFORE', 'int'),
  \ javaapi#field(1,1,'FUNC_SUBSTRING_AFTER', 'int'),
  \ javaapi#field(1,1,'FUNC_NORMALIZE_SPACE', 'int'),
  \ javaapi#field(1,1,'FUNC_TRANSLATE', 'int'),
  \ javaapi#field(1,1,'FUNC_CONCAT', 'int'),
  \ javaapi#field(1,1,'FUNC_SUBSTRING', 'int'),
  \ javaapi#field(1,1,'FUNC_STRING_LENGTH', 'int'),
  \ javaapi#field(1,1,'FUNC_SYSTEM_PROPERTY', 'int'),
  \ javaapi#field(1,1,'FUNC_LANG', 'int'),
  \ javaapi#field(1,1,'FUNC_EXT_FUNCTION_AVAILABLE', 'int'),
  \ javaapi#field(1,1,'FUNC_EXT_ELEM_AVAILABLE', 'int'),
  \ javaapi#field(1,1,'FUNC_UNPARSED_ENTITY_URI', 'int'),
  \ javaapi#field(1,1,'FUNC_DOCLOCATION', 'int'),
  \ javaapi#method(0,1,'FunctionTable(', ')', ''),
  \ javaapi#method(0,1,'installFunction(', 'String, Class)', 'int'),
  \ javaapi#method(0,1,'functionAvailable(', 'String)', 'boolean'),
  \ ])

call javaapi#class('Keywords', '', [
  \ javaapi#field(1,1,'FUNC_CURRENT_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_LAST_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_POSITION_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_COUNT_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_KEY_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_LOCAL_PART_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_NAMESPACE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_NAME_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_GENERATE_ID_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_NOT_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_TRUE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_FALSE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_BOOLEAN_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_LANG_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_NUMBER_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_FLOOR_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_CEILING_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_ROUND_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_SUM_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_STRING_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_STARTS_WITH_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_CONTAINS_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_SUBSTRING_BEFORE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_SUBSTRING_AFTER_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_NORMALIZE_SPACE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_TRANSLATE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_CONCAT_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_SYSTEM_PROPERTY_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_EXT_FUNCTION_AVAILABLE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_EXT_ELEM_AVAILABLE_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_SUBSTRING_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_STRING_LENGTH_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_UNPARSED_ENTITY_URI_STRING', 'String'),
  \ javaapi#field(1,1,'FUNC_DOCLOCATION_STRING', 'String'),
  \ javaapi#method(0,1,'Keywords(', ')', ''),
  \ ])

call javaapi#class('Lexer', '', [
  \ ])

call javaapi#class('OpCodes', '', [
  \ javaapi#field(1,1,'ENDOP', 'int'),
  \ javaapi#field(1,1,'EMPTY', 'int'),
  \ javaapi#field(1,1,'ELEMWILDCARD', 'int'),
  \ javaapi#field(1,1,'OP_XPATH', 'int'),
  \ javaapi#field(1,1,'OP_OR', 'int'),
  \ javaapi#field(1,1,'OP_AND', 'int'),
  \ javaapi#field(1,1,'OP_NOTEQUALS', 'int'),
  \ javaapi#field(1,1,'OP_EQUALS', 'int'),
  \ javaapi#field(1,1,'OP_LTE', 'int'),
  \ javaapi#field(1,1,'OP_LT', 'int'),
  \ javaapi#field(1,1,'OP_GTE', 'int'),
  \ javaapi#field(1,1,'OP_GT', 'int'),
  \ javaapi#field(1,1,'OP_PLUS', 'int'),
  \ javaapi#field(1,1,'OP_MINUS', 'int'),
  \ javaapi#field(1,1,'OP_MULT', 'int'),
  \ javaapi#field(1,1,'OP_DIV', 'int'),
  \ javaapi#field(1,1,'OP_MOD', 'int'),
  \ javaapi#field(1,1,'OP_QUO', 'int'),
  \ javaapi#field(1,1,'OP_NEG', 'int'),
  \ javaapi#field(1,1,'OP_STRING', 'int'),
  \ javaapi#field(1,1,'OP_BOOL', 'int'),
  \ javaapi#field(1,1,'OP_NUMBER', 'int'),
  \ javaapi#field(1,1,'OP_UNION', 'int'),
  \ javaapi#field(1,1,'OP_LITERAL', 'int'),
  \ javaapi#field(1,1,'OP_VARIABLE', 'int'),
  \ javaapi#field(1,1,'OP_GROUP', 'int'),
  \ javaapi#field(1,1,'OP_EXTFUNCTION', 'int'),
  \ javaapi#field(1,1,'OP_FUNCTION', 'int'),
  \ javaapi#field(1,1,'OP_ARGUMENT', 'int'),
  \ javaapi#field(1,1,'OP_NUMBERLIT', 'int'),
  \ javaapi#field(1,1,'OP_LOCATIONPATH', 'int'),
  \ javaapi#field(1,1,'OP_PREDICATE', 'int'),
  \ javaapi#field(1,1,'OP_MATCHPATTERN', 'int'),
  \ javaapi#field(1,1,'OP_LOCATIONPATHPATTERN', 'int'),
  \ javaapi#field(1,1,'NODETYPE_COMMENT', 'int'),
  \ javaapi#field(1,1,'NODETYPE_TEXT', 'int'),
  \ javaapi#field(1,1,'NODETYPE_PI', 'int'),
  \ javaapi#field(1,1,'NODETYPE_NODE', 'int'),
  \ javaapi#field(1,1,'NODENAME', 'int'),
  \ javaapi#field(1,1,'NODETYPE_ROOT', 'int'),
  \ javaapi#field(1,1,'NODETYPE_ANYELEMENT', 'int'),
  \ javaapi#field(1,1,'NODETYPE_FUNCTEST', 'int'),
  \ javaapi#field(1,1,'AXES_START_TYPES', 'int'),
  \ javaapi#field(1,1,'FROM_ANCESTORS', 'int'),
  \ javaapi#field(1,1,'FROM_ANCESTORS_OR_SELF', 'int'),
  \ javaapi#field(1,1,'FROM_ATTRIBUTES', 'int'),
  \ javaapi#field(1,1,'FROM_CHILDREN', 'int'),
  \ javaapi#field(1,1,'FROM_DESCENDANTS', 'int'),
  \ javaapi#field(1,1,'FROM_DESCENDANTS_OR_SELF', 'int'),
  \ javaapi#field(1,1,'FROM_FOLLOWING', 'int'),
  \ javaapi#field(1,1,'FROM_FOLLOWING_SIBLINGS', 'int'),
  \ javaapi#field(1,1,'FROM_PARENT', 'int'),
  \ javaapi#field(1,1,'FROM_PRECEDING', 'int'),
  \ javaapi#field(1,1,'FROM_PRECEDING_SIBLINGS', 'int'),
  \ javaapi#field(1,1,'FROM_SELF', 'int'),
  \ javaapi#field(1,1,'FROM_NAMESPACE', 'int'),
  \ javaapi#field(1,1,'FROM_ROOT', 'int'),
  \ javaapi#field(1,1,'MATCH_ATTRIBUTE', 'int'),
  \ javaapi#field(1,1,'MATCH_ANY_ANCESTOR', 'int'),
  \ javaapi#field(1,1,'MATCH_IMMEDIATE_ANCESTOR', 'int'),
  \ javaapi#field(1,1,'AXES_END_TYPES', 'int'),
  \ javaapi#method(0,1,'OpCodes(', ')', ''),
  \ ])

call javaapi#class('OpMap', '', [
  \ javaapi#field(0,0,'m_currentPattern', 'String'),
  \ javaapi#field(1,1,'MAPINDEX_LENGTH', 'int'),
  \ javaapi#method(0,1,'OpMap(', ')', ''),
  \ javaapi#method(0,1,'toString(', ')', 'String'),
  \ javaapi#method(0,1,'getPatternString(', ')', 'String'),
  \ javaapi#method(0,1,'getTokenQueue(', ')', 'ObjectVector'),
  \ javaapi#method(0,1,'getToken(', 'int)', 'Object'),
  \ javaapi#method(0,1,'getTokenQueueSize(', ')', 'int'),
  \ javaapi#method(0,1,'getOpMap(', ')', 'OpMapVector'),
  \ javaapi#method(0,1,'getOp(', 'int)', 'int'),
  \ javaapi#method(0,1,'setOp(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'getNextOpPos(', 'int)', 'int'),
  \ javaapi#method(0,1,'getNextStepPos(', 'int)', 'int'),
  \ javaapi#method(1,1,'getNextOpPos(', 'int[], int)', 'int'),
  \ javaapi#method(0,1,'getFirstPredicateOpPos(', 'int) throws TransformerException', 'int'),
  \ javaapi#method(0,1,'error(', 'String, Object[]) throws TransformerException', 'void'),
  \ javaapi#method(1,1,'getFirstChildPos(', 'int)', 'int'),
  \ javaapi#method(0,1,'getArgLength(', 'int)', 'int'),
  \ javaapi#method(0,1,'getArgLengthOfStep(', 'int)', 'int'),
  \ javaapi#method(1,1,'getFirstChildPosOfStep(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStepTestType(', 'int)', 'int'),
  \ javaapi#method(0,1,'getStepNS(', 'int)', 'String'),
  \ javaapi#method(0,1,'getStepLocalName(', 'int)', 'String'),
  \ ])

call javaapi#class('OpMapVector', '', [
  \ javaapi#field(0,0,'m_blocksize', 'int'),
  \ javaapi#field(0,0,'m_map', 'int'),
  \ javaapi#field(0,0,'m_lengthPos', 'int'),
  \ javaapi#field(0,0,'m_mapSize', 'int'),
  \ javaapi#method(0,1,'OpMapVector(', 'int, int, int)', ''),
  \ javaapi#method(0,1,'elementAt(', 'int)', 'int'),
  \ javaapi#method(0,1,'setElementAt(', 'int, int)', 'void'),
  \ javaapi#method(0,1,'setToSize(', 'int)', 'void'),
  \ ])

call javaapi#class('PsuedoNames', '', [
  \ javaapi#field(1,1,'PSEUDONAME_ANY', 'String'),
  \ javaapi#field(1,1,'PSEUDONAME_ROOT', 'String'),
  \ javaapi#field(1,1,'PSEUDONAME_TEXT', 'String'),
  \ javaapi#field(1,1,'PSEUDONAME_COMMENT', 'String'),
  \ javaapi#field(1,1,'PSEUDONAME_PI', 'String'),
  \ javaapi#field(1,1,'PSEUDONAME_OTHER', 'String'),
  \ javaapi#method(0,1,'PsuedoNames(', ')', ''),
  \ ])

call javaapi#class('XPathDumper', '', [
  \ javaapi#method(0,1,'XPathDumper(', ')', ''),
  \ ])

call javaapi#class('XPathParser', '', [
  \ javaapi#field(1,1,'CONTINUE_AFTER_FATAL_ERROR', 'String'),
  \ javaapi#field(1,0,'FILTER_MATCH_FAILED', 'int'),
  \ javaapi#field(1,0,'FILTER_MATCH_PRIMARY', 'int'),
  \ javaapi#field(1,0,'FILTER_MATCH_PREDICATES', 'int'),
  \ javaapi#method(0,1,'XPathParser(', 'ErrorListener, SourceLocator)', ''),
  \ javaapi#method(0,1,'initXPath(', 'Compiler, String, PrefixResolver) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'initMatchPattern(', 'Compiler, String, PrefixResolver) throws TransformerException', 'void'),
  \ javaapi#method(0,1,'setErrorHandler(', 'ErrorListener)', 'void'),
  \ javaapi#method(0,1,'getErrorListener(', ')', 'ErrorListener'),
  \ javaapi#method(0,0,'dumpRemainingTokenQueue(', ')', 'String'),
  \ javaapi#method(0,0,'Expr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'OrExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'AndExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'EqualityExpr(', 'int) throws TransformerException', 'int'),
  \ javaapi#method(0,0,'RelationalExpr(', 'int) throws TransformerException', 'int'),
  \ javaapi#method(0,0,'AdditiveExpr(', 'int) throws TransformerException', 'int'),
  \ javaapi#method(0,0,'MultiplicativeExpr(', 'int) throws TransformerException', 'int'),
  \ javaapi#method(0,0,'UnaryExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'StringExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'BooleanExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'NumberExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'UnionExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'PathExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'FilterExpr(', ') throws TransformerException', 'int'),
  \ javaapi#method(0,0,'PrimaryExpr(', ') throws TransformerException', 'boolean'),
  \ javaapi#method(0,0,'Argument(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'FunctionCall(', ') throws TransformerException', 'boolean'),
  \ javaapi#method(0,0,'LocationPath(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'RelativeLocationPath(', ') throws TransformerException', 'boolean'),
  \ javaapi#method(0,0,'Step(', ') throws TransformerException', 'boolean'),
  \ javaapi#method(0,0,'Basis(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'AxisName(', ') throws TransformerException', 'int'),
  \ javaapi#method(0,0,'NodeTest(', 'int) throws TransformerException', 'void'),
  \ javaapi#method(0,0,'Predicate(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'PredicateExpr(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'QName(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'NCName(', ')', 'void'),
  \ javaapi#method(0,0,'Literal(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'Number(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'Pattern(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'LocationPathPattern(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'IdKeyPattern(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'RelativePathPattern(', ') throws TransformerException', 'void'),
  \ javaapi#method(0,0,'StepPattern(', 'boolean) throws TransformerException', 'boolean'),
  \ javaapi#method(0,0,'AbbreviatedNodeTestStep(', 'boolean) throws TransformerException', 'boolean'),
  \ ])

