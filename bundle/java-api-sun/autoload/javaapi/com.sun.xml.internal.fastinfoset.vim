call javaapi#namespace('com.sun.xml.internal.fastinfoset')

call javaapi#class('AbstractResourceBundle', 'ResourceBundle', [
  \ javaapi#field(1,1,'LOCALE', 'String'),
  \ javaapi#method(0,1,'AbstractResourceBundle(', ')', ''),
  \ javaapi#method(0,1,'getString(', 'String, Object[])', 'String'),
  \ javaapi#method(1,1,'parseLocale(', 'String)', 'Locale'),
  \ javaapi#method(0,1,'getBundle(', ')', 'ResourceBundle'),
  \ javaapi#method(0,0,'handleGetObject(', 'String)', 'Object'),
  \ javaapi#method(0,1,'getKeys(', ')', 'Enumeration'),
  \ ])

call javaapi#class('CommonResourceBundle', 'AbstractResourceBundle', [
  \ javaapi#field(1,1,'BASE_NAME', 'String'),
  \ javaapi#method(0,0,'CommonResourceBundle(', ')', ''),
  \ javaapi#method(0,0,'CommonResourceBundle(', 'Locale)', ''),
  \ javaapi#method(1,1,'getInstance(', ')', 'CommonResourceBundle'),
  \ javaapi#method(1,1,'getInstance(', 'Locale)', 'CommonResourceBundle'),
  \ javaapi#method(0,1,'getBundle(', ')', 'ResourceBundle'),
  \ javaapi#method(0,1,'getBundle(', 'Locale)', 'ResourceBundle'),
  \ ])

call javaapi#class('Decoder', 'FastInfosetParser', [
  \ javaapi#field(1,1,'STRING_INTERNING_SYSTEM_PROPERTY', 'String'),
  \ javaapi#field(1,1,'BUFFER_SIZE_SYSTEM_PROPERTY', 'String'),
  \ javaapi#field(0,0,'_parseFragments', 'boolean'),
  \ javaapi#field(0,0,'_needForceStreamClose', 'boolean'),
  \ javaapi#field(0,0,'_notations', 'List'),
  \ javaapi#field(0,0,'_unparsedEntities', 'List'),
  \ javaapi#field(0,0,'_registeredEncodingAlgorithms', 'Map'),
  \ javaapi#field(0,0,'_v', 'ParserVocabulary'),
  \ javaapi#field(0,0,'_prefixTable', 'PrefixArray'),
  \ javaapi#field(0,0,'_elementNameTable', 'QualifiedNameArray'),
  \ javaapi#field(0,0,'_attributeNameTable', 'QualifiedNameArray'),
  \ javaapi#field(0,0,'_characterContentChunkTable', 'ContiguousCharArrayArray'),
  \ javaapi#field(0,0,'_attributeValueTable', 'StringArray'),
  \ javaapi#field(0,0,'_b', 'int'),
  \ javaapi#field(0,0,'_terminate', 'boolean'),
  \ javaapi#field(0,0,'_doubleTerminate', 'boolean'),
  \ javaapi#field(0,0,'_addToTable', 'boolean'),
  \ javaapi#field(0,0,'_integer', 'int'),
  \ javaapi#field(0,0,'_identifier', 'int'),
  \ javaapi#field(0,0,'_bufferSize', 'int'),
  \ javaapi#field(0,0,'_octetBuffer', 'byte'),
  \ javaapi#field(0,0,'_octetBufferStart', 'int'),
  \ javaapi#field(0,0,'_octetBufferOffset', 'int'),
  \ javaapi#field(0,0,'_octetBufferEnd', 'int'),
  \ javaapi#field(0,0,'_octetBufferLength', 'int'),
  \ javaapi#field(0,0,'_charBuffer', 'char'),
  \ javaapi#field(0,0,'_charBufferLength', 'int'),
  \ javaapi#field(0,0,'_duplicateAttributeVerifier', 'DuplicateAttributeVerifier'),
  \ javaapi#field(1,0,'NISTRING_STRING', 'int'),
  \ javaapi#field(1,0,'NISTRING_INDEX', 'int'),
  \ javaapi#field(1,0,'NISTRING_ENCODING_ALGORITHM', 'int'),
  \ javaapi#field(1,0,'NISTRING_EMPTY_STRING', 'int'),
  \ javaapi#field(0,0,'_prefixIndex', 'int'),
  \ javaapi#field(0,0,'_namespaceNameIndex', 'int'),
  \ javaapi#method(0,0,'Decoder(', ')', ''),
  \ javaapi#method(0,1,'setStringInterning(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getStringInterning(', ')', 'boolean'),
  \ javaapi#method(0,1,'setBufferSize(', 'int)', 'void'),
  \ javaapi#method(0,1,'getBufferSize(', ')', 'int'),
  \ javaapi#method(0,1,'setRegisteredEncodingAlgorithms(', 'Map)', 'void'),
  \ javaapi#method(0,1,'getRegisteredEncodingAlgorithms(', ')', 'Map'),
  \ javaapi#method(0,1,'setExternalVocabularies(', 'Map)', 'void'),
  \ javaapi#method(0,1,'getExternalVocabularies(', ')', 'Map'),
  \ javaapi#method(0,1,'setParseFragments(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getParseFragments(', ')', 'boolean'),
  \ javaapi#method(0,1,'setForceStreamClose(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getForceStreamClose(', ')', 'boolean'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'setVocabulary(', 'ParserVocabulary)', 'void'),
  \ javaapi#method(0,1,'setInputStream(', 'InputStream)', 'void'),
  \ javaapi#method(0,0,'decodeDII(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeAdditionalData(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeInitialVocabulary(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeNotations(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeUnparsedEntities(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeCharacterEncodingScheme(', ') throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeVersion(', ') throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeEIIIndexMedium(', ') throws FastInfosetException, IOException', 'QualifiedName'),
  \ javaapi#method(0,0,'decodeEIIIndexLarge(', ') throws FastInfosetException, IOException', 'QualifiedName'),
  \ javaapi#method(0,0,'decodeLiteralQualifiedName(', 'int, QualifiedName) throws FastInfosetException, IOException', 'QualifiedName'),
  \ javaapi#method(0,0,'decodeNonIdentifyingStringOnFirstBit(', ') throws FastInfosetException, IOException', 'int'),
  \ javaapi#method(0,0,'decodeOctetsOnFifthBitOfNonIdentifyingStringOnFirstBit(', 'int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeOctetsOnSeventhBitOfNonIdentifyingStringOnThirdBit(', 'int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeIdentifyingNonEmptyStringOnFirstBit(', 'StringArray) throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeIdentifyingNonEmptyStringOnFirstBitAsPrefix(', 'boolean) throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeIdentifyingNonEmptyStringIndexOnFirstBitAsPrefix(', 'boolean) throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeIdentifyingNonEmptyStringOnFirstBitAsNamespaceName(', 'boolean) throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeIdentifyingNonEmptyStringIndexOnFirstBitAsNamespaceName(', 'boolean) throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeNonEmptyOctetStringOnSecondBitAsUtf8String(', ') throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeNonEmptyOctetStringOnSecondBitAsUtf8CharArray(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeNonEmptyOctetStringLengthOnSecondBit(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeIntegerIndexOnSecondBit(', ') throws FastInfosetException, IOException', 'int'),
  \ javaapi#method(0,0,'decodeHeader(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeRestrictedAlphabetAsCharBuffer(', ') throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeRestrictedAlphabetAsString(', ') throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeRAOctetsAsString(', 'char[]) throws FastInfosetException, IOException', 'String'),
  \ javaapi#method(0,0,'decodeFourBitAlphabetOctetsAsCharBuffer(', 'char[]) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeAlphabetOctetsAsCharBuffer(', 'char[]) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'decodeUtf8StringAsCharBuffer(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'decodeUtf8StringAsCharBuffer(', 'char[], int) throws IOException', 'void'),
  \ javaapi#method(0,0,'decodeUtf8StringAsString(', ') throws IOException', 'String'),
  \ javaapi#method(0,0,'decodeUtf16StringAsCharBuffer(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'decodeUtf16StringAsString(', ') throws IOException', 'String'),
  \ javaapi#method(0,0,'decodeUtf8StringIntoCharBuffer(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'decodeUtf8StringIntoCharBuffer(', 'char[], int) throws IOException', 'void'),
  \ javaapi#method(0,0,'decodeUtf8NCNameIntoCharBuffer(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'createQualifiedNameString(', 'String)', 'String'),
  \ javaapi#method(0,0,'createQualifiedNameString(', 'char[], String)', 'String'),
  \ javaapi#method(0,0,'read(', ') throws IOException', 'int'),
  \ javaapi#method(0,0,'closeIfRequired(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'peek(', ') throws IOException', 'int'),
  \ javaapi#method(0,0,'peek(', 'OctetBufferListener) throws IOException', 'int'),
  \ javaapi#method(0,0,'peek2(', 'OctetBufferListener) throws IOException', 'int'),
  \ javaapi#method(0,0,'_isFastInfosetDocument(', ') throws IOException', 'boolean'),
  \ javaapi#method(1,1,'isFastInfosetDocument(', 'InputStream) throws IOException', 'boolean'),
  \ ])

call javaapi#class('DecoderStateTables', '', [
  \ javaapi#field(1,1,'STATE_ILLEGAL', 'int'),
  \ javaapi#field(1,1,'STATE_UNSUPPORTED', 'int'),
  \ javaapi#field(1,1,'EII_NO_AIIS_INDEX_SMALL', 'int'),
  \ javaapi#field(1,1,'EII_AIIS_INDEX_SMALL', 'int'),
  \ javaapi#field(1,1,'EII_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,1,'EII_INDEX_LARGE', 'int'),
  \ javaapi#field(1,1,'EII_NAMESPACES', 'int'),
  \ javaapi#field(1,1,'EII_LITERAL', 'int'),
  \ javaapi#field(1,1,'CII_UTF8_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,1,'CII_UTF8_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,1,'CII_UTF8_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,1,'CII_UTF16_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,1,'CII_UTF16_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,1,'CII_UTF16_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,1,'CII_RA', 'int'),
  \ javaapi#field(1,1,'CII_EA', 'int'),
  \ javaapi#field(1,1,'CII_INDEX_SMALL', 'int'),
  \ javaapi#field(1,1,'CII_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,1,'CII_INDEX_LARGE', 'int'),
  \ javaapi#field(1,1,'CII_INDEX_LARGE_LARGE', 'int'),
  \ javaapi#field(1,1,'COMMENT_II', 'int'),
  \ javaapi#field(1,1,'PROCESSING_INSTRUCTION_II', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_TYPE_DECLARATION_II', 'int'),
  \ javaapi#field(1,1,'UNEXPANDED_ENTITY_REFERENCE_II', 'int'),
  \ javaapi#field(1,1,'TERMINATOR_SINGLE', 'int'),
  \ javaapi#field(1,1,'TERMINATOR_DOUBLE', 'int'),
  \ javaapi#field(1,1,'AII_INDEX_SMALL', 'int'),
  \ javaapi#field(1,1,'AII_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,1,'AII_INDEX_LARGE', 'int'),
  \ javaapi#field(1,1,'AII_LITERAL', 'int'),
  \ javaapi#field(1,1,'AII_TERMINATOR_SINGLE', 'int'),
  \ javaapi#field(1,1,'AII_TERMINATOR_DOUBLE', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF8_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF8_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF8_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF16_SMALL_LENGTH', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF16_MEDIUM_LENGTH', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF16_LARGE_LENGTH', 'int'),
  \ javaapi#field(1,1,'NISTRING_RA', 'int'),
  \ javaapi#field(1,1,'NISTRING_EA', 'int'),
  \ javaapi#field(1,1,'NISTRING_INDEX_SMALL', 'int'),
  \ javaapi#field(1,1,'NISTRING_INDEX_MEDIUM', 'int'),
  \ javaapi#field(1,1,'NISTRING_INDEX_LARGE', 'int'),
  \ javaapi#field(1,1,'NISTRING_EMPTY', 'int'),
  \ javaapi#method(1,1,'DII(', 'int)', 'int'),
  \ javaapi#method(1,1,'EII(', 'int)', 'int'),
  \ javaapi#method(1,1,'AII(', 'int)', 'int'),
  \ javaapi#method(1,1,'NISTRING(', 'int)', 'int'),
  \ javaapi#method(1,1,'ISTRING(', 'int)', 'int'),
  \ javaapi#method(1,1,'ISTRING_PREFIX_NAMESPACE(', 'int)', 'int'),
  \ javaapi#method(1,1,'UTF8(', 'int)', 'int'),
  \ javaapi#method(1,1,'UTF8_NCNAME(', 'int)', 'int'),
  \ ])

call javaapi#class('Encoder', 'DefaultHandler', [
  \ javaapi#field(1,1,'CHARACTER_ENCODING_SCHEME_SYSTEM_PROPERTY', 'String'),
  \ javaapi#field(1,0,'_characterEncodingSchemeSystemDefault', 'String'),
  \ javaapi#field(0,0,'_v', 'SerializerVocabulary'),
  \ javaapi#field(0,0,'_vData', 'VocabularyApplicationData'),
  \ javaapi#field(0,0,'_terminate', 'boolean'),
  \ javaapi#field(0,0,'_b', 'int'),
  \ javaapi#field(0,0,'_s', 'OutputStream'),
  \ javaapi#field(0,0,'_charBuffer', 'char'),
  \ javaapi#field(0,0,'_octetBuffer', 'byte'),
  \ javaapi#field(0,0,'_octetBufferIndex', 'int'),
  \ javaapi#field(0,0,'_markIndex', 'int'),
  \ javaapi#field(0,0,'minAttributeValueSize', 'int'),
  \ javaapi#field(0,0,'maxAttributeValueSize', 'int'),
  \ javaapi#field(0,0,'attributeValueMapTotalCharactersConstraint', 'int'),
  \ javaapi#field(0,0,'minCharacterContentChunkSize', 'int'),
  \ javaapi#field(0,0,'maxCharacterContentChunkSize', 'int'),
  \ javaapi#field(0,0,'characterContentChunkMapTotalCharactersConstraint', 'int'),
  \ javaapi#method(0,0,'Encoder(', ')', ''),
  \ javaapi#method(0,0,'Encoder(', 'boolean)', ''),
  \ javaapi#method(0,1,'setIgnoreDTD(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getIgnoreDTD(', ')', 'boolean'),
  \ javaapi#method(0,1,'setIgnoreComments(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getIgnoreComments(', ')', 'boolean'),
  \ javaapi#method(0,1,'setIgnoreProcesingInstructions(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getIgnoreProcesingInstructions(', ')', 'boolean'),
  \ javaapi#method(0,1,'setIgnoreWhiteSpaceTextContent(', 'boolean)', 'void'),
  \ javaapi#method(0,1,'getIgnoreWhiteSpaceTextContent(', ')', 'boolean'),
  \ javaapi#method(0,1,'setCharacterEncodingScheme(', 'String)', 'void'),
  \ javaapi#method(0,1,'getCharacterEncodingScheme(', ')', 'String'),
  \ javaapi#method(0,1,'setRegisteredEncodingAlgorithms(', 'Map)', 'void'),
  \ javaapi#method(0,1,'getRegisteredEncodingAlgorithms(', ')', 'Map'),
  \ javaapi#method(0,1,'getMinCharacterContentChunkSize(', ')', 'int'),
  \ javaapi#method(0,1,'setMinCharacterContentChunkSize(', 'int)', 'void'),
  \ javaapi#method(0,1,'getMaxCharacterContentChunkSize(', ')', 'int'),
  \ javaapi#method(0,1,'setMaxCharacterContentChunkSize(', 'int)', 'void'),
  \ javaapi#method(0,1,'getCharacterContentChunkMapMemoryLimit(', ')', 'int'),
  \ javaapi#method(0,1,'setCharacterContentChunkMapMemoryLimit(', 'int)', 'void'),
  \ javaapi#method(0,1,'isCharacterContentChunkLengthMatchesLimit(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'canAddCharacterContentToTable(', 'int, CharArrayIntMap)', 'boolean'),
  \ javaapi#method(0,1,'getMinAttributeValueSize(', ')', 'int'),
  \ javaapi#method(0,1,'setMinAttributeValueSize(', 'int)', 'void'),
  \ javaapi#method(0,1,'getMaxAttributeValueSize(', ')', 'int'),
  \ javaapi#method(0,1,'setMaxAttributeValueSize(', 'int)', 'void'),
  \ javaapi#method(0,1,'setAttributeValueMapMemoryLimit(', 'int)', 'void'),
  \ javaapi#method(0,1,'getAttributeValueMapMemoryLimit(', ')', 'int'),
  \ javaapi#method(0,1,'isAttributeValueLengthMatchesLimit(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'canAddAttributeToTable(', 'int)', 'boolean'),
  \ javaapi#method(0,1,'setExternalVocabulary(', 'ExternalVocabulary)', 'void'),
  \ javaapi#method(0,1,'setVocabularyApplicationData(', 'VocabularyApplicationData)', 'void'),
  \ javaapi#method(0,1,'getVocabularyApplicationData(', ')', 'VocabularyApplicationData'),
  \ javaapi#method(0,1,'reset(', ')', 'void'),
  \ javaapi#method(0,1,'setOutputStream(', 'OutputStream)', 'void'),
  \ javaapi#method(0,1,'setVocabulary(', 'SerializerVocabulary)', 'void'),
  \ javaapi#method(0,0,'encodeHeader(', 'boolean) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeInitialVocabulary(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeDocumentTermination(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeElementTermination(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeTermination(', ') throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNamespaceAttribute(', 'String, String) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeCharacters(', 'char[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeCharactersNoClone(', 'char[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNumericFourBitCharacters(', 'char[], int, int, boolean) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeDateTimeFourBitCharacters(', 'char[], int, int, boolean) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeFourBitCharacters(', 'int, int[], char[], int, int, boolean) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeAlphabetCharacters(', 'String, char[], int, int, boolean) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeProcessingInstruction(', 'String, String) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeDocumentTypeDeclaration(', 'String, String) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeComment(', 'char[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeCommentNoClone(', 'char[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeElementQualifiedNameOnThirdBit(', 'String, String, String) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeLiteralElementQualifiedNameOnThirdBit(', 'String, String, String, Entry) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeAttributeQualifiedNameOnSecondBit(', 'String, String, String) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeLiteralAttributeQualifiedNameOnSecondBit(', 'String, String, String, Entry) throws IOException', 'boolean'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnFirstBit(', 'String, StringIntMap, boolean, boolean) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnFirstBit(', 'String, CharArrayIntMap, boolean) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnFirstBit(', 'char[], int, int, CharArrayIntMap, boolean, boolean) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNumericNonIdentifyingStringOnFirstBit(', 'String, boolean, boolean) throws IOException, FastInfosetException', 'void'),
  \ javaapi#method(0,0,'encodeDateTimeNonIdentifyingStringOnFirstBit(', 'String, boolean, boolean) throws IOException, FastInfosetException', 'void'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnFirstBit(', 'int, int[], String, boolean, boolean) throws IOException, FastInfosetException', 'void'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnFirstBit(', 'String, int, Object) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeAIIOctetAlgorithmData(', 'int, byte[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeAIIObjectAlgorithmData(', 'int, Object, EncodingAlgorithm) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeAIIBuiltInAlgorithmData(', 'int, Object, int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnThirdBit(', 'char[], int, int, CharArrayIntMap, boolean, boolean) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnThirdBit(', 'String, int, Object) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonIdentifyingStringOnThirdBit(', 'String, int, byte[], int, int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeCIIOctetAlgorithmData(', 'int, byte[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeCIIObjectAlgorithmData(', 'int, Object, EncodingAlgorithm) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeCIIBuiltInAlgorithmData(', 'int, Object, int, int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeCIIBuiltInAlgorithmDataAsCDATA(', 'char[], int, int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeIdentifyingNonEmptyStringOnFirstBit(', 'String, StringIntMap) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyOctetStringOnSecondBit(', 'String) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroOctetStringLengthOnSecondBit(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyCharacterStringOnFifthBit(', 'String) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyCharacterStringOnFifthBit(', 'char[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroOctetStringLengthOnFifthBit(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyCharacterStringOnSeventhBit(', 'char[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyFourBitCharacterStringOnSeventhBit(', 'int[], char[], int, int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyFourBitCharacterString(', 'int[], char[], int, int, int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyNBitCharacterStringOnSeventhBit(', 'String, char[], int, int) throws FastInfosetException, IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroOctetStringLengthOnSenventhBit(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroIntegerOnSecondBitFirstBitOne(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroIntegerOnSecondBitFirstBitZero(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroIntegerOnThirdBit(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroIntegerOnFourthBit(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyUTF8StringAsOctetString(', 'int, String, int[]) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonEmptyUTF8StringAsOctetString(', 'int, char[], int, int, int[]) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroOctetStringLength(', 'int, int, int[]) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeNonZeroInteger(', 'int, int, int[]) throws IOException', 'void'),
  \ javaapi#method(0,0,'mark(', ')', 'void'),
  \ javaapi#method(0,0,'resetMark(', ')', 'void'),
  \ javaapi#method(0,0,'hasMark(', ')', 'boolean'),
  \ javaapi#method(0,0,'write(', 'int) throws IOException', 'void'),
  \ javaapi#method(0,0,'write(', 'byte[], int) throws IOException', 'void'),
  \ javaapi#method(0,0,'write(', 'byte[], int, int) throws IOException', 'void'),
  \ javaapi#method(0,0,'encodeUTF8String(', 'String) throws IOException', 'int'),
  \ javaapi#method(0,0,'encodeUTF8String(', 'char[], int, int) throws IOException', 'int'),
  \ javaapi#method(0,0,'encodeUtf16String(', 'String) throws IOException', 'int'),
  \ javaapi#method(0,0,'encodeUtf16String(', 'char[], int, int) throws IOException', 'int'),
  \ javaapi#method(1,1,'getPrefixFromQualifiedName(', 'String)', 'String'),
  \ javaapi#method(1,1,'isWhiteSpace(', 'char[], int, int)', 'boolean'),
  \ javaapi#method(1,1,'isWhiteSpace(', 'String)', 'boolean'),
  \ ])

call javaapi#class('EncodingConstants', '', [
  \ javaapi#field(1,1,'XML_NAMESPACE_PREFIX', 'String'),
  \ javaapi#field(1,1,'XML_NAMESPACE_PREFIX_LENGTH', 'int'),
  \ javaapi#field(1,1,'XML_NAMESPACE_NAME', 'String'),
  \ javaapi#field(1,1,'XML_NAMESPACE_NAME_LENGTH', 'int'),
  \ javaapi#field(1,1,'XMLNS_NAMESPACE_PREFIX', 'String'),
  \ javaapi#field(1,1,'XMLNS_NAMESPACE_PREFIX_LENGTH', 'int'),
  \ javaapi#field(1,1,'XMLNS_NAMESPACE_NAME', 'String'),
  \ javaapi#field(1,1,'XMLNS_NAMESPACE_NAME_LENGTH', 'int'),
  \ javaapi#field(1,1,'DEFAULT_NAMESPACE_DECLARATION', 'QualifiedName'),
  \ javaapi#field(1,1,'DOCUMENT_ADDITIONAL_DATA_FLAG', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_INITIAL_VOCABULARY_FLAG', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_NOTATIONS_FLAG', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_UNPARSED_ENTITIES_FLAG', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_CHARACTER_ENCODING_SCHEME', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_STANDALONE_FLAG', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_VERSION_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_EXTERNAL_VOCABULARY_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_RESTRICTED_ALPHABETS_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_ENCODING_ALGORITHMS_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_PREFIXES_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_NAMESPACE_NAMES_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_LOCAL_NAMES_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_OTHER_NCNAMES_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_OTHER_URIS_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_ATTRIBUTE_VALUES_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_CONTENT_CHARACTER_CHUNKS_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_OTHER_STRINGS_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_ELEMENT_NAME_SURROGATES_FLAG', 'int'),
  \ javaapi#field(1,1,'INITIAL_VOCABULARY_ATTRIBUTE_NAME_SURROGATES_FLAG', 'int'),
  \ javaapi#field(1,1,'NAME_SURROGATE_PREFIX_FLAG', 'int'),
  \ javaapi#field(1,1,'NAME_SURROGATE_NAME_FLAG', 'int'),
  \ javaapi#field(1,1,'NOTATIONS', 'int'),
  \ javaapi#field(1,1,'NOTATIONS_MASK', 'int'),
  \ javaapi#field(1,1,'NOTATIONS_SYSTEM_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,1,'NOTATIONS_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,1,'UNPARSED_ENTITIES', 'int'),
  \ javaapi#field(1,1,'UNPARSED_ENTITIES_MASK', 'int'),
  \ javaapi#field(1,1,'UNPARSED_ENTITIES_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,1,'PROCESSING_INSTRUCTION', 'int'),
  \ javaapi#field(1,1,'PROCESSING_INSTRUCTION_MASK', 'int'),
  \ javaapi#field(1,1,'COMMENT', 'int'),
  \ javaapi#field(1,1,'COMMENT_MASK', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_TYPE_DECLARATION', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_TYPE_DECLARATION_MASK', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_TYPE_SYSTEM_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,1,'DOCUMENT_TYPE_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,1,'ELEMENT', 'int'),
  \ javaapi#field(1,1,'ELEMENT_ATTRIBUTE_FLAG', 'int'),
  \ javaapi#field(1,1,'ELEMENT_NAMESPACES_FLAG', 'int'),
  \ javaapi#field(1,1,'ELEMENT_LITERAL_QNAME_FLAG', 'int'),
  \ javaapi#field(1,1,'NAMESPACE_ATTRIBUTE', 'int'),
  \ javaapi#field(1,1,'NAMESPACE_ATTRIBUTE_MASK', 'int'),
  \ javaapi#field(1,1,'NAMESPACE_ATTRIBUTE_PREFIX_NAME_MASK', 'int'),
  \ javaapi#field(1,1,'NAMESPACE_ATTRIBUTE_PREFIX_FLAG', 'int'),
  \ javaapi#field(1,1,'NAMESPACE_ATTRIBUTE_NAME_FLAG', 'int'),
  \ javaapi#field(1,1,'ATTRIBUTE_LITERAL_QNAME_FLAG', 'int'),
  \ javaapi#field(1,1,'LITERAL_QNAME_PREFIX_NAMESPACE_NAME_MASK', 'int'),
  \ javaapi#field(1,1,'LITERAL_QNAME_PREFIX_FLAG', 'int'),
  \ javaapi#field(1,1,'LITERAL_QNAME_NAMESPACE_NAME_FLAG', 'int'),
  \ javaapi#field(1,1,'CHARACTER_CHUNK', 'int'),
  \ javaapi#field(1,1,'CHARACTER_CHUNK_ADD_TO_TABLE_FLAG', 'int'),
  \ javaapi#field(1,1,'CHARACTER_CHUNK_UTF_8_FLAG', 'int'),
  \ javaapi#field(1,1,'CHARACTER_CHUNK_UTF_16_FLAG', 'int'),
  \ javaapi#field(1,1,'CHARACTER_CHUNK_RESTRICTED_ALPHABET_FLAG', 'int'),
  \ javaapi#field(1,1,'CHARACTER_CHUNK_ENCODING_ALGORITHM_FLAG', 'int'),
  \ javaapi#field(1,1,'UNEXPANDED_ENTITY_REFERENCE', 'int'),
  \ javaapi#field(1,1,'UNEXPANDED_ENTITY_REFERENCE_MASK', 'int'),
  \ javaapi#field(1,1,'UNEXPANDED_ENTITY_SYSTEM_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,1,'UNEXPANDED_ENTITY_PUBLIC_IDENTIFIER_FLAG', 'int'),
  \ javaapi#field(1,1,'NISTRING_ADD_TO_TABLE_FLAG', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF_8_FLAG', 'int'),
  \ javaapi#field(1,1,'NISTRING_UTF_16_FLAG', 'int'),
  \ javaapi#field(1,1,'NISTRING_RESTRICTED_ALPHABET_FLAG', 'int'),
  \ javaapi#field(1,1,'NISTRING_ENCODING_ALGORITHM_FLAG', 'int'),
  \ javaapi#field(1,1,'TERMINATOR', 'int'),
  \ javaapi#field(1,1,'DOUBLE_TERMINATOR', 'int'),
  \ javaapi#field(1,1,'ENCODING_ALGORITHM_BUILTIN_END', 'int'),
  \ javaapi#field(1,1,'ENCODING_ALGORITHM_APPLICATION_START', 'int'),
  \ javaapi#field(1,1,'ENCODING_ALGORITHM_APPLICATION_MAX', 'int'),
  \ javaapi#field(1,1,'RESTRICTED_ALPHABET_BUILTIN_END', 'int'),
  \ javaapi#field(1,1,'RESTRICTED_ALPHABET_APPLICATION_START', 'int'),
  \ javaapi#field(1,1,'RESTRICTED_ALPHABET_APPLICATION_MAX', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_MAXIMUM_LENGTH', 'long'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_2ND_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_2ND_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_2ND_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_2ND_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_2ND_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_5TH_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_5TH_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_5TH_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_5TH_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_5TH_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_7TH_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_7TH_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_7TH_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_7TH_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'OCTET_STRING_LENGTH_7TH_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_LARGE_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_MAXIMUM_SIZE', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_MEDIUM_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_2ND_BIT_LARGE_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_LARGE_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_MEDIUM_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_LARGE_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_3RD_BIT_LARGE_LARGE_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_SMALL_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_MEDIUM_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_LARGE_LIMIT', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_MEDIUM_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_LARGE_LARGE_FLAG', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_SMALL_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_MEDIUM_MASK', 'int'),
  \ javaapi#field(1,1,'INTEGER_4TH_BIT_LARGE_MASK', 'int'),
  \ javaapi#method(0,1,'EncodingConstants(', ')', ''),
  \ ])

call javaapi#class('Notation', '', [
  \ javaapi#field(0,1,'name', 'String'),
  \ javaapi#field(0,1,'systemIdentifier', 'String'),
  \ javaapi#field(0,1,'publicIdentifier', 'String'),
  \ javaapi#method(0,1,'Notation(', 'String, String, String)', ''),
  \ ])

call javaapi#interface('OctetBufferListener', '', [
  \ javaapi#method(0,1,'onBeforeOctetBufferOverwrite(', ')', 'void'),
  \ ])

call javaapi#class('QualifiedName', '', [
  \ javaapi#field(0,1,'prefix', 'String'),
  \ javaapi#field(0,1,'namespaceName', 'String'),
  \ javaapi#field(0,1,'localName', 'String'),
  \ javaapi#field(0,1,'qName', 'String'),
  \ javaapi#field(0,1,'index', 'int'),
  \ javaapi#field(0,1,'prefixIndex', 'int'),
  \ javaapi#field(0,1,'namespaceNameIndex', 'int'),
  \ javaapi#field(0,1,'localNameIndex', 'int'),
  \ javaapi#field(0,1,'attributeId', 'int'),
  \ javaapi#field(0,1,'attributeHash', 'int'),
  \ javaapi#method(0,1,'QualifiedName(', ')', ''),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String, String, String)', ''),
  \ javaapi#method(0,1,'set(', 'String, String, String, String)', 'void'),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String, String, String, int)', ''),
  \ javaapi#method(0,1,'set(', 'String, String, String, String, int)', 'QualifiedName'),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String, String, String, int, int, int, int)', ''),
  \ javaapi#method(0,1,'set(', 'String, String, String, String, int, int, int, int)', 'QualifiedName'),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String, String)', ''),
  \ javaapi#method(0,1,'set(', 'String, String, String)', 'QualifiedName'),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String, String, int, int, int, char[])', ''),
  \ javaapi#method(0,1,'set(', 'String, String, String, int, int, int, char[])', 'QualifiedName'),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String, String, int)', ''),
  \ javaapi#method(0,1,'set(', 'String, String, String, int)', 'QualifiedName'),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String, String, int, int, int, int)', ''),
  \ javaapi#method(0,1,'set(', 'String, String, String, int, int, int, int)', 'QualifiedName'),
  \ javaapi#method(0,1,'QualifiedName(', 'String, String)', ''),
  \ javaapi#method(0,1,'set(', 'String, String)', 'QualifiedName'),
  \ javaapi#method(0,1,'getQName(', ')', 'QName'),
  \ javaapi#method(0,1,'getQNameString(', ')', 'String'),
  \ javaapi#method(0,1,'createAttributeValues(', 'int)', 'void'),
  \ ])

call javaapi#class('UnparsedEntity', 'Notation', [
  \ javaapi#field(0,1,'notationName', 'String'),
  \ javaapi#method(0,1,'UnparsedEntity(', 'String, String, String, String)', ''),
  \ ])

